records.each { Enrolment e ->
	csv << [
			"source"                            : e.source.displayName,
			"status"                            : e.status.displayName,
			"fundingSource"                     : e.fundingSource?.displayName,
			"studyReason"                       : e.studyReason?.displayName,
			"modifiedOn"                        : e.modifiedOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"createdOn"                         : e.createdOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"studentLastName"                   : e.student.contact.lastName,
			"studentFirstName"                  : e.student.contact.firstName,
			"studentMale"                       : e.student.contact.gender,
			"studentCompany"                    : e.student.contact.isCompany,
			"studentCreatedOn"                  : e.student.createdOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"studentModifiedOn"                 : e.student.modifiedOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"studentAllowEmail"                 : e.student.contact.allowEmail,
			"studentAllowPost"                  : e.student.contact.allowPost,
			"studentAllowSms"                   : e.student.contact.allowSms,
			"studentBirthDate"                  : e.student.contact.birthDate?.format("yyyy-MM-dd"),
			"studentDeliveryStatusEmail"        : e.student.contact.deliveryStatusEmail,
			"studentDeliveryStatusPost"         : e.student.contact.deliveryStatusPost,
			"DeliveryStatusSms"                 : e.student.contact.deliveryStatusSms,
			"studentHomePhone"                  : e.student.contact.homePhone,
			"studentWorkPhone"                  : e.student.contact.workPhone,
			"studentMobilePhone"                : e.student.contact.mobilePhone,
			"studentStreet"                     : e.student.contact.street,
			"studentPostcode"                   : e.student.contact.postcode,
			"studentSuburb"                     : e.student.contact.suburb,
			"studentState"                      : e.student.contact.state,
			"studentUniqueCode"                 : e.student.contact.uniqueCode,
			"studentIsTutor"                    : e.student.contact.isTutor,
			"studentNotes"                      : e.student.contact.notes,
			"studentEmail"                      : e.student.contact.email,
			"studentFax"                        : e.student.contact.fax,
			"studentMessage"                    : e.student.contact.message,
			"studentTfn"                        : e.student.contact.tfn,
			"studentAbn"                        : e.student.contact.abn,
			"studentNumber"                     : e.student.studentNumber,
			"studentDisabilityType"             : e.student.disabilityType?.displayName,
			"studentEnglishProficiency"         : e.student.englishProficiency?.displayName,
			"studentHighestSchoolLevel"         : e.student.highestSchoolLevel?.displayName,
			"studentIndigenousStatus"           : e.student.indigenousStatus?.displayName,
			"studentIsOverseasClient"           : e.student.isOverseasClient,
			"studentIsStillAtSchool"            : e.student.isStillAtSchool,
			"studentLabourForceStatus"          : e.student.labourForceStatus?.displayName,
			"studentPriorEducation"             : e.student.priorEducationCode?.displayName,
			"studentConcessionNumberObsolete"   : e.student.concessionNumberObsolete,
			"studentConcessionTypeObsolete"     : e.student.concessionTypeObsolete,
			"studentSpecialNeeds"               : e.student.specialNeeds,
			"studentYearSchoolCompleted"        : e.student.yearSchoolCompleted,
			"classCode"                         : e.courseClass.code,
			"classBudgetedPlaces"               : e.courseClass.budgetedPlaces,
			"classCreatedOn"                    : e.courseClass.createdOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"classModifiedOn"                   : e.courseClass.modifiedOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"classDeliveryMode"                 : e.courseClass.deliveryMode?.displayName,
			"classStartDateTime"                : e.courseClass.startDateTime?.format("yyyy-MM-dd'T'HH:mm:ssXXX", e.courseClass.timeZone),
			"classEndDateTime"                  : e.courseClass.endDateTime?.format("yyyy-MM-dd'T'HH:mm:ssXXX", e.courseClass.timeZone),
			"classIsCancelled"                  : e.courseClass.isCancelled,
			"classFundingSource"                : e.courseClass.fundingSource?.displayName,
			"classIsDistantLearningCourse"      : e.courseClass.isDistantLearningCourse,
			"classIsWebVisible"                 : e.courseClass.isShownOnWeb,
			"classMaximumPlaces"                : e.courseClass.maximumPlaces,
			"classMinimumPlaces"                : e.courseClass.minimumPlaces,
			"classNotes"                        : e.courseClass.notes,
			"classDetBookingId"                 : e.courseClass.detBookingId,
			"classMessage"                      : e.courseClass.message,
			"classReportableHours"              : e.courseClass.reportableHours?.format("0.00"),
			"classPriceAmount"                  : e.courseClass.feeIncGst?.toPlainString(),
			"classPriceTaxAmount"               : e.courseClass.feeGST?.toPlainString(),
			"classPriceTaxName"                 : e.courseClass.tax ? e.courseClass.tax.taxCode : "unknown",
			"courseCode"                        : e.courseClass.course.code,
			"courseName"                        : e.courseClass.course.name,
			"courseCreatedOn"                   : e.courseClass.course.createdOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"courseModifiedOn"                  : e.courseClass.course.modifiedOn?.format("yyyy-MM-dd'T'HH:mm:ssXXX"),
			"courseCurrentlyOffered"            : e.courseClass.course.currentlyOffered,
			"courseFieldOfEducation"            : e.courseClass.course.fieldOfEducation,
			"courseIsWebVisible"                : e.courseClass.course.isShownOnWeb,
			"courseIsVET"                       : e.courseClass.course.isVET,
			"courseReportableHours"             : e.courseClass.course.reportableHours?.format("0.00"),
			"courseWebDescription"              : e.courseClass.course.webDescription,
			"courseShortWebDescription"         : e.courseClass.course.shortWebDescription,
			"courseAllowWaitingList"            : e.courseClass.course.allowWaitingLists,
			"courseIsShownOnWeb"                : e.courseClass.course.isShownOnWeb,
			"courseIsSufficientForQualification": e.courseClass.course.isSufficientForQualification,
			"coursePrintedBrochureDescription"  : e.courseClass.course.printedBrochureDescription
	]
}
