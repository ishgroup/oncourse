/*
 * Copyright ish group pty ltd 2020.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License version 3 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 */

apply plugin: 'groovy'
apply plugin: 'java-library'

configurations {
    swagger
}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDir 'src/main/java'
sourceSets.test.java.srcDirs = []
sourceSets.test.groovy.srcDir 'src/test/java'

sourceCompatibility = 11

dependencies {

    api project(":types")

    api 'io.swagger:swagger-annotations:1.5.21'

    api "org.apache.cxf:cxf-core:$cfxVersion"
    api "org.apache.cxf:cxf-rt-frontend-jaxrs:$cfxVersion"

    api 'javax.validation:validation-api:1.1.0.Final'
    api 'org.apache.bval:org.apache.bval.bundle:1.1.2'
    api 'net.java.dev.textile-j:textile-j:2.2.864'

    //latest jackson 2.9.9 conflicts with spring AbstractApplicationContext
    api "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.7"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7"

    api "io.bootique.jetty:bootique-jetty:$bootiqueVersion"
}

sourceSets {
    main {
        groovy {
            srcDirs += "${project.projectDir}/build/generated-sources/src/main/groovy"
        }
    }
}

tasks.withType(GroovyCompile).configureEach {
    options.incremental = true
}
compileGroovy.groovyOptions.configurationScript = file("${rootDir}/gradle/groovyConfig.groovy")


task swagger (type: Swagger) {
    schema = file("${project.projectDir}/src/main/resources/server-api.yaml")
    sourceFolder = file("${project.projectDir}/src/main/groovy")
    schemaVersion = 1
    javaOutput = file("${project.projectDir}/build/generated-sources")
    traitOutput = file("${project.projectDir}/src/main/groovy/ish/oncourse/server/api/traits/")
    jsOutput = file("${rootDir}/client-html/build/generated-sources/swagger-js")
    inputs.dir("src")
}

// Some documentation scripts can only work on a single merged swagger file
task apiDocs_mergeSwagger(type: SwaggerMerge) {
    schema = file("${rootDir}/server-api/src/main/resources/server-api.yaml")
    outputFile = file("${buildDir}/swagger-merged/swagger.yaml")
}

compileGroovy {
    dependsOn swagger
    groovyClasspath += classpath.filter { it.absolutePath.contains('jaxb-api') }
}

clean.doFirst {
    delete("${project.projectDir}/build/generated-sources")
}

publishing {
    publications {
        jar(MavenPublication) {
            from components.java
        }
    }
}
