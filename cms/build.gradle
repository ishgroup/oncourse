configurations {
    closureCompiler
}
dependencies {
    providedCompile 'javax.servlet:servlet-api:3.0'

	compile project(':common:common-services')
	compile project(':common:common-model')
	compile project(':common:common-ui')

    compile 'org.apache.commons:commons-compress:1.9'
	compile 'commons-logging:commons-logging:1.1.1'
	compile 'org.apache.tapestry:tapestry-core:5.2.6'
	compile 'org.apache.tapestry:tapestry-json:5.2.6'
	compile 'org.apache.tapestry:tapestry-upload:5.2.6'
	compile 'opensymphony:oscache:2.4.1'
    compile 'io.milton:milton-api:2.6.0.1'
    compile 'io.milton:milton-server-ce:2.6.0.1'
    compile 'org.reflections:reflections:0.9.8'

    compile 'com.google.javascript:closure-compiler:v20150315'
    closureCompiler 'com.google.javascript:closure-compiler:v20150315'

    testCompile 'org.apache.tapestry:tapestry-test:5.2.6'

	// The odd next line is to work around gradle pulling in the wrong configuration
	// http://forums.gradle.org/gradle/topics/transitive_libraries_not_included_through_project_dependency
	testCompile project(path: ':common:common-test', configuration: 'testFixtures')
}

//we need the lines to be sure that org.apache.tapestry:tapestry-test will be added after
// com.google.javascript:closure-compiler. org.apache.tapestry:tapestry-test contains
// the old version of com.google.common.collect.ImmutableSet which is not computable with our tests
sourceSets.test.runtimeClasspath = configurations.closureCompiler + sourceSets.test.runtimeClasspath
sourceSets.test.compileClasspath = configurations.closureCompiler + sourceSets.test.compileClasspath


war {
	archiveName = 'cms.war'
	manifest {
		from sharedManifest
	}
    from 'build/resource-assemble'
    from ('src/main/static') {
        exclude 'js'
        exclude 'src'
    }
    into('/plugins') {
        from 'src/main/static/js/plugins'
        exclude '*.js'
    }
}


processResources.inputs.files gzipJs
processResources.inputs.files gzipCss

clean.dependsOn cleanMinifyJs
clean.dependsOn cleanCompassCompile