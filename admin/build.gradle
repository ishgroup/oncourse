apply from: "$rootDir/gradle/tapestry.app.gradle"

configurations {
	all*.exclude group: 'org.apache.tapestry', module: 'tapestry-spring'
}

ext {
	tapestryVersion = '5.5.0'
	adminCxfVersion = '2.6.6'
}

dependencies {
	implementation 'javax.xml.ws:jaxws-api:2.3.1'
	implementation 'javax.jws:javax.jws-api:1.1'

	/**
	 * tapestry dependencies
	 */
	implementation "org.apache.tapestry:tapestry-core:$tapestryVersion"
	implementation "org.apache.tapestry:plastic:$tapestryVersion"
	implementation "org.apache.tapestry:tapestry5-annotations:$tapestryVersion"
	implementation "org.apache.tapestry:tapestry-ioc:$tapestryVersion"
	implementation "org.apache.tapestry:tapestry-json:$tapestryVersion"
	implementation "org.apache.tapestry:tapestry-spring:$tapestryVersion"
	implementation "org.apache.tapestry:tapestry-upload:$tapestryVersion"

	testCompile ("org.apache.tapestry:tapestry-test:$tapestryVersion") {
		exclude group: 'org.seleniumhq.selenium.server', module: 'selenium-server'
	}

	implementation project(':common:common-model')
	implementation (project(':common:common-services'))  {
		exclude group: 'axis', module: 'axis'
	}
	implementation (project(':common:webservices-usi')) {
		exclude group: 'axis'
		exclude group: 'org.apache.cxf'
		exclude group: 'org.springframework'
		exclude group: 'ish.oncourse.willow'
	}

	implementation ("org.apache.cxf:cxf-rt-frontend-jaxws:$adminCxfVersion") {
		exclude group: 'org.apache.geronimo.specs', module: 'geronimo-servlet_3.0_spec'
		exclude group: 'org.apache.geronimo.specs', module: 'geronimo-javamail_1.4_spec'
	}

	implementation "org.apache.cxf:cxf-rt-ws-security:$adminCxfVersion"
	implementation "org.apache.cxf:cxf-rt-transports-http:$adminCxfVersion"
	implementation 'xalan:xalan:2.7.2'
	implementation 'wsdl4j:wsdl4j:1.6.3'

	implementation 'org.reflections:reflections:0.9.11'
	implementation 'commons-dbcp:commons-dbcp:1.4'
	implementation 'commons-pool:commons-pool:1.5.6'

	// The odd next line is to work around gradle pulling in the wrong configuration
	// http://forums.gradle.org/gradle/topics/transitive_libraries_not_included_through_project_dependency
	testImplementation project(path: ':common:common-test', configuration: 'testFixtures')

	testImplementation project(':common:test-functions')
}


mainClassName = 'ish.oncourse.admin.AdminApp'

ext {
	staticSrcPath = "${projectDir}/src/main/static"
	staticBuildPath = "${buildDir}/resource-assemble/static"
	cssCombined = "${staticBuildPath}/css/${project.name}.css"
}

// this is a fake because our minifier plugin is broken
// it just copies the file over
task minifyJs(type: Copy) {
	from "$staticSrcPath/js/admin-min.js"
	into "$staticBuildPath/js/"
}

task gzipJs(type: Zip) {
	from "$staticBuildPath/js/admin-min.js"
	archiveName 'admin-min.js.gz'
	into "$staticBuildPath/js/"
}

//css combining
task sass(type: Exec) {
	inputs.dir "${staticSrcPath}/src"
	outputs.file cssCombined
	commandLine "sassc", "--style", "compressed", "${staticSrcPath}/src/${project.name}.scss", cssCombined
}

task gzipCss(dependsOn: sass) {
	inputs.file cssCombined
	outputs.file "${cssCombined}.gz"
	doLast {
		ant.gzip(src: cssCombined, destfile: "${cssCombined}.gz")
	}
}


/**
 * Task build and copy js and css bundles to this artifact folder
 */
task refreshIdeaArtifact {
	doFirst {
		ex.execute()
		cp.execute()
	}
	task ex(type: GradleBuild){
		tasks = ['cleanMinifyJs', 'gzipJs', 'gzipCss']
	}
	task cp(type: Copy) {
		from(staticBuildPath) {
			include '**/*.*'
		}
		from(staticSrcPath) {
			include '**/*.*'
		}
		into "out/resources/static"
	}
}

processResources.inputs.files gzipJs
processResources.inputs.files gzipCss

jar {
	from "${buildDir}/resource-assemble"
	from ('src/main') {
		include 'static/**/*'
		exclude 'static/js'
		exclude 'static/src'
	}
}
