apply plugin: 'war'
apply plugin: 'compass'
apply plugin: 'js'

dependencies {
	providedCompile 'javax.servlet:servlet-api:2.5'

	compile project(':common:common-model')
	compile (project(':common:common-services'))  {
		exclude group: 'axis', module: 'axis'
	}

	//compile ('org.apache.cxf:cxf-bundle:2.6.2') {
	compile ('org.apache.cxf:cxf-rt-frontend-jaxws:2.6.6') {
		exclude group: 'org.apache.geronimo.specs', module: 'geronimo-servlet_3.0_spec'
		exclude group: 'org.apache.geronimo.specs', module: 'geronimo-javamail_1.4_spec'
	}
	compile 'org.apache.cxf:cxf-rt-ws-security:2.6.6'
	compile 'org.apache.cxf:cxf-rt-transports-http:2.6.6'
	compile 'xalan:xalan:2.7.1'
            
	compile 'wsdl4j:wsdl4j:1.6.2'

	// The odd next line is to work around gradle pulling in the wrong configuration
	// http://forums.gradle.org/gradle/topics/transitive_libraries_not_included_through_project_dependency
	testCompile project(path: ':common:common-test', configuration: 'testFixtures')
}

archivesBaseName = "willowAdmin"

war {
	archiveName = 'willowAdmin.war'
	manifest {
		from sharedManifest
	}
	from 'build/resource-assemble'
	from ('src/main/static') {
		exclude 'js'
		exclude 'src'
	}
}

compass {
    cssDir = file("${buildDir}/resource-assemble/css")
    sassDir = file('src/main/static/src')
    fontsDir = file('src/main/static/fonts')
    noLineComments = true
    relativeAssets = true
    debugInfo = false
    environment = 'production'
}

combineJs {
    source = ["src/main/static/js/jquery-1.8.3.min.js",
              "src/main/static/js/jquery.ui.datepicker.js",
              "src/main/static/js/jquery.ui.datepicker.js",
              "src/main/static/js/jquery.ui.core.js",
              "src/main/static/js/bootstrap.js"
    ]
    dest = file("${buildDir}/resource-assemble/js/admin.js")
}
minifyJs {
    source = combineJs
    dest = file("${buildDir}/resource-assemble/js/admin-min.js")
}
gzipJs {
    source = minifyJs
    dest = file("${buildDir}/resource-assemble/js/admin-min.js.gz")
}

task zipCss(dependsOn:compileSass) { 
    String srcPath = "${buildDir}/resource-assemble/css/admin.css"
    inputs.file srcPath
    outputs.file "${srcPath}.gz"
    println "*** ${srcPath}"
    doLast {
        ant.gzip(src: srcPath, destfile: "${srcPath}.gz")
    }
}

processResources.inputs.files zipCss
processResources.inputs.files gzipJs

clean.dependsOn cleanCompileSass
clean.dependsOn cleanMinifyJs