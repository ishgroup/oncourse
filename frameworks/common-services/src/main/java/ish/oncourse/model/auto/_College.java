package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import ish.oncourse.model.Tag;
import ish.oncourse.model.TagGroupRequirement;
import ish.oncourse.model.Taggable;
import ish.oncourse.model.TaggableTag;
import ish.oncourse.model.WebHostName;
import ish.oncourse.model.WebSite;
import ish.oncourse.model.WebTheme;
import ish.oncourse.model.WillowUser;

/**
 * Class _College was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _College extends CayenneDataObject {

    public static final String CREATED_PROPERTY = "created";
    public static final String DELETED_PROPERTY = "deleted";
    public static final String FIRST_REMOTE_AUTHENTICATION_PROPERTY = "firstRemoteAuthentication";
    public static final String LAST_REMOTE_AUTHENTICATION_PROPERTY = "lastRemoteAuthentication";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String NAME_PROPERTY = "name";
    public static final String NATIONAL_PROVIDER_CODE_PROPERTY = "nationalProviderCode";
    public static final String PAYMENT_GATEWAY_ACCOUNT_PROPERTY = "paymentGatewayAccount";
    public static final String PAYMENT_GATEWAY_PASS_PROPERTY = "paymentGatewayPass";
    public static final String PRIMARY_DOMAIN_ID_PROPERTY = "primaryDomainID";
    public static final String REQUIRES_AVETMISS_PROPERTY = "requiresAvetmiss";
    public static final String SSL_ENABLED_PROPERTY = "sslEnabled";
    public static final String TESTING_WEB_SERVICE_PAYMENTS_PROPERTY = "testingWebServicePayments";
    public static final String TESTING_WEB_SITE_PAYMENTS_PROPERTY = "testingWebSitePayments";
    public static final String WEB_SERVICE_PAYMENTS_ENABLED_PROPERTY = "webServicePaymentsEnabled";
    public static final String WEB_SERVICES_LOGIN_PROPERTY = "webServicesLogin";
    public static final String WEB_SERVICES_PASS_PROPERTY = "webServicesPass";
    public static final String WEB_SERVICES_SECURITY_CODE_PROPERTY = "webServicesSecurityCode";
    public static final String WEB_SITE_PAYMENTS_ENABLED_PROPERTY = "webSitePaymentsEnabled";
    public static final String SITES_PROPERTY = "sites";
    public static final String TAG_GROUP_REQUIREMENTS_PROPERTY = "tagGroupRequirements";
    public static final String TAGGABLE_TAGS_PROPERTY = "taggableTags";
    public static final String TAGGABLES_PROPERTY = "taggables";
    public static final String TAGS_PROPERTY = "tags";
    public static final String THEMES_PROPERTY = "themes";
    public static final String USERS_PROPERTY = "users";
    public static final String WEB_HOST_NAMES_PROPERTY = "webHostNames";

    public static final String ID_PK_COLUMN = "id";

    public void setCreated(Date created) {
        writeProperty("created", created);
    }
    public Date getCreated() {
        return (Date)readProperty("created");
    }

    public void setDeleted(Boolean deleted) {
        writeProperty("deleted", deleted);
    }
    public Boolean getDeleted() {
        return (Boolean)readProperty("deleted");
    }

    public void setFirstRemoteAuthentication(Date firstRemoteAuthentication) {
        writeProperty("firstRemoteAuthentication", firstRemoteAuthentication);
    }
    public Date getFirstRemoteAuthentication() {
        return (Date)readProperty("firstRemoteAuthentication");
    }

    public void setLastRemoteAuthentication(Date lastRemoteAuthentication) {
        writeProperty("lastRemoteAuthentication", lastRemoteAuthentication);
    }
    public Date getLastRemoteAuthentication() {
        return (Date)readProperty("lastRemoteAuthentication");
    }

    public void setModified(Date modified) {
        writeProperty("modified", modified);
    }
    public Date getModified() {
        return (Date)readProperty("modified");
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setNationalProviderCode(String nationalProviderCode) {
        writeProperty("nationalProviderCode", nationalProviderCode);
    }
    public String getNationalProviderCode() {
        return (String)readProperty("nationalProviderCode");
    }

    public void setPaymentGatewayAccount(String paymentGatewayAccount) {
        writeProperty("paymentGatewayAccount", paymentGatewayAccount);
    }
    public String getPaymentGatewayAccount() {
        return (String)readProperty("paymentGatewayAccount");
    }

    public void setPaymentGatewayPass(String paymentGatewayPass) {
        writeProperty("paymentGatewayPass", paymentGatewayPass);
    }
    public String getPaymentGatewayPass() {
        return (String)readProperty("paymentGatewayPass");
    }

    public void setPrimaryDomainID(Long primaryDomainID) {
        writeProperty("primaryDomainID", primaryDomainID);
    }
    public Long getPrimaryDomainID() {
        return (Long)readProperty("primaryDomainID");
    }

    public void setRequiresAvetmiss(Boolean requiresAvetmiss) {
        writeProperty("requiresAvetmiss", requiresAvetmiss);
    }
    public Boolean getRequiresAvetmiss() {
        return (Boolean)readProperty("requiresAvetmiss");
    }

    public void setSslEnabled(Boolean sslEnabled) {
        writeProperty("sslEnabled", sslEnabled);
    }
    public Boolean getSslEnabled() {
        return (Boolean)readProperty("sslEnabled");
    }

    public void setTestingWebServicePayments(Boolean testingWebServicePayments) {
        writeProperty("testingWebServicePayments", testingWebServicePayments);
    }
    public Boolean getTestingWebServicePayments() {
        return (Boolean)readProperty("testingWebServicePayments");
    }

    public void setTestingWebSitePayments(Boolean testingWebSitePayments) {
        writeProperty("testingWebSitePayments", testingWebSitePayments);
    }
    public Boolean getTestingWebSitePayments() {
        return (Boolean)readProperty("testingWebSitePayments");
    }

    public void setWebServicePaymentsEnabled(Boolean webServicePaymentsEnabled) {
        writeProperty("webServicePaymentsEnabled", webServicePaymentsEnabled);
    }
    public Boolean getWebServicePaymentsEnabled() {
        return (Boolean)readProperty("webServicePaymentsEnabled");
    }

    public void setWebServicesLogin(String webServicesLogin) {
        writeProperty("webServicesLogin", webServicesLogin);
    }
    public String getWebServicesLogin() {
        return (String)readProperty("webServicesLogin");
    }

    public void setWebServicesPass(String webServicesPass) {
        writeProperty("webServicesPass", webServicesPass);
    }
    public String getWebServicesPass() {
        return (String)readProperty("webServicesPass");
    }

    public void setWebServicesSecurityCode(String webServicesSecurityCode) {
        writeProperty("webServicesSecurityCode", webServicesSecurityCode);
    }
    public String getWebServicesSecurityCode() {
        return (String)readProperty("webServicesSecurityCode");
    }

    public void setWebSitePaymentsEnabled(Boolean webSitePaymentsEnabled) {
        writeProperty("webSitePaymentsEnabled", webSitePaymentsEnabled);
    }
    public Boolean getWebSitePaymentsEnabled() {
        return (Boolean)readProperty("webSitePaymentsEnabled");
    }

    public void addToSites(WebSite obj) {
        addToManyTarget("sites", obj, true);
    }
    public void removeFromSites(WebSite obj) {
        removeToManyTarget("sites", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebSite> getSites() {
        return (List<WebSite>)readProperty("sites");
    }


    public void addToTagGroupRequirements(TagGroupRequirement obj) {
        addToManyTarget("tagGroupRequirements", obj, true);
    }
    public void removeFromTagGroupRequirements(TagGroupRequirement obj) {
        removeToManyTarget("tagGroupRequirements", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TagGroupRequirement> getTagGroupRequirements() {
        return (List<TagGroupRequirement>)readProperty("tagGroupRequirements");
    }


    public void addToTaggableTags(TaggableTag obj) {
        addToManyTarget("taggableTags", obj, true);
    }
    public void removeFromTaggableTags(TaggableTag obj) {
        removeToManyTarget("taggableTags", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TaggableTag> getTaggableTags() {
        return (List<TaggableTag>)readProperty("taggableTags");
    }


    public void addToTaggables(Taggable obj) {
        addToManyTarget("taggables", obj, true);
    }
    public void removeFromTaggables(Taggable obj) {
        removeToManyTarget("taggables", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Taggable> getTaggables() {
        return (List<Taggable>)readProperty("taggables");
    }


    public void addToTags(Tag obj) {
        addToManyTarget("tags", obj, true);
    }
    public void removeFromTags(Tag obj) {
        removeToManyTarget("tags", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Tag> getTags() {
        return (List<Tag>)readProperty("tags");
    }


    public void addToThemes(WebTheme obj) {
        addToManyTarget("themes", obj, true);
    }
    public void removeFromThemes(WebTheme obj) {
        removeToManyTarget("themes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebTheme> getThemes() {
        return (List<WebTheme>)readProperty("themes");
    }


    public void addToUsers(WillowUser obj) {
        addToManyTarget("users", obj, true);
    }
    public void removeFromUsers(WillowUser obj) {
        removeToManyTarget("users", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WillowUser> getUsers() {
        return (List<WillowUser>)readProperty("users");
    }


    public void addToWebHostNames(WebHostName obj) {
        addToManyTarget("webHostNames", obj, true);
    }
    public void removeFromWebHostNames(WebHostName obj) {
        removeToManyTarget("webHostNames", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebHostName> getWebHostNames() {
        return (List<WebHostName>)readProperty("webHostNames");
    }


}
