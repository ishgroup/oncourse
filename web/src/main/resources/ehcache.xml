<!--
        # we don't calculate size for objectContext and values because we get tons of this warning messages
        #"The configured limit of 1,000 object references was reached while attempting to calculate the size of the object graph"
        # also the size calculation does not provide correct information about real size of Cayenne Object,
        # because it calculates size all references which are bound to these two properties.
        # When we use the filter options the size of any Cayenne Object is 40 bytes.
        # It allows us to determine max elements in memory and exclude any performance leaks which could be got
        # when ehcache calculates size of all references which an Cayenne Object has.

        maxBytesLocalHeap=40M - it allows to keep in ehcache ~ 1 million cayenne objects
-->
<ehcache:config xmlns:ehcache="http://www.ehcache.org/v3" >

    <ehcache:cache alias="CourseClass">
            <ehcache:key-type copier="org.ehcache.impl.copy.SerializingCopier">java.lang.String</ehcache:key-type>
            <ehcache:value-type copier="org.ehcache.impl.copy.SerializingCopier">java.util.List</ehcache:value-type>

            <ehcache:expiry>
                <ehcache:tti unit="minutes">2</ehcache:tti>
            </ehcache:expiry>
            <ehcache:heap unit="entries">1000000</ehcache:heap>
    </ehcache:cache>

</ehcache:config>