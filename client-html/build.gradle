/*
 * Copyright ish group pty ltd 2022.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License version 3 as published by the Free Software Foundation.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 */

plugins {
    id 'com.github.node-gradle.node'
    id 'queryLanguageModel'
}

node {
    version = '16.10.0'
    yarnVersion = '1.22.19'
    download = System.properties['os.name'] != "FreeBSD" // FreeBSD has no binaries this plugin can install
    workDir = file("${project.buildDir}/nodejs")
}

yarn.outputs.cacheIf { true }

task webpack(type: YarnTask, dependsOn: 'queryGrammar') {
    inputs.files("webpack.config.js", "tsconfig.json", "yarn.lock", "package.json", "jest.config.js")
    inputs.dir("src")
    outputs.dir("$buildDir/assets")
    inputs.property('version', version)
    args = ['build:prod', '--env', 'NODE_ENV=production', '--env', "BUILD_NUMBER=${version ?: '99-SNAPSHOT'}"]
}

clean {
    delete "${projectDir}/node_modules"
}

task yarn_start(type: YarnTask, dependsOn:['webpack']) {
    inputs.files("webpack.config.js", "webpack.dev.config.js", "tsconfig.json", "yarn.lock", "package.json")
    args = ['start']
}

task yarn_outdated(type: YarnTask) {
    args = ['outdated']
}

task queryGrammar(type: YarnTask, dependsOn: [':server-api:swagger', 'yarn', 'generateQueryLanguageModel']) {
    inputs.dir("$rootDir/buildSrc/aql/src/main/resources/")
    outputs.dir("$buildDir/generated-sources/aql-parser")
    args = ['antlr4ts']
}

task jest(type: YarnTask, dependsOn: 'queryGrammar') {
    args = ['test']
}
test.dependsOn(jest)

sourceSets {
    main.resources.srcDirs 'src/js', 'build/generated-sources/swagger-js', 'build/generated-sources/aql-model', 'build/generated-sources/aql-parser'
}

build.dependsOn(webpack)

generateQueryLanguageModel {
    source = fileTree("$rootDir/types/src/main/groovy")
            .plus(fileTree("$rootDir/types/src/main/java"))
            .plus(fileTree("$rootDir/server/src/main/java"))

    destinationDir = file("$buildDir/generated-sources/aql-model")
}

processResources.dependsOn(':server-api:swagger', "generateQueryLanguageModel")
