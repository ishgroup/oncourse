#!groovyâ€‹

pipeline {
    agent { 
        label 'freebsd'
    }

    parameters {
        string(defaultValue: '', description: 'Release version. Leave blank to not release.', name: 'version')
    }

    stages {
        stage('Build API docs') {
            steps {
                sh "./gradlew apidocs:docbookHtml"
            }
        }

        stage('Build release notes') {
            steps {
                sh "./gradlew release-notes:docbookHtml"
            }
        }

        stage('Build manual') {
            steps {
                sh "./gradlew manual:docbook"
            }
        }

        stage('Deploy release') {
            when {
                expression { params.version != '' }
            }
            steps {
                script {
                    currentBuild.displayName = "Release ${params.version}"
                }

            }
        }
    }

    post { 
        failure { 
            mail(
                to: "development@ish.com.au", 
                subject: "${currentBuild.result}: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: "Check console output at ${env.BUILD_URL}",
            )
        }
        unstable { 
            mail(
                to: "development@ish.com.au", 
                subject: "${currentBuild.result}: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: "Check console output at ${env.BUILD_URL}",
            )
        }
        success {
            archiveArtifacts artifacts: 'portal/build/distributions/*.zip'
        }
        always {
            junit 'portal/build/test-results/**/*.xml'
        }
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr:'10'))
        timeout(time: 60, unit: 'MINUTES')
    }
}