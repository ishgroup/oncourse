apply plugin: 'war'
apply plugin: 'compass'
apply plugin: 'js'

dependencies {
	providedCompile 'javax.servlet:servlet-api:2.5'

	compile 'org.apache.tapestry:tapestry-core:5.3.7'
	compile 'org.apache.tapestry:plastic:5.3.7'
	compile 'org.apache.tapestry:tapestry5-annotations:5.3.7'
	compile 'org.apache.tapestry:tapestry-ioc:5.3.7'
	compile 'org.apache.tapestry:tapestry-json:5.3.7'
	compile 'org.mnode.ical4j:ical4j:1.0.2'
	compile 'com.ocpsoft:ocpsoft-pretty-time:1.0.7'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.3'

	compile project(':common:common-model')
	compile project(':common:common-textile')
	compile project(':common:common-services')

	// The odd next line is to work around gradle pulling in the wrong configuration
	// http://forums.gradle.org/gradle/topics/transitive_libraries_not_included_through_project_dependency
	testCompile project(path: ':common:common-test', configuration: 'testFixtures')
}

war {
	archiveName = 'portal.war'
	manifest {
		from sharedManifest
	}

    from 'build/resource-assemble'
    from ('src/main/static') {
        exclude 'js'
        exclude 'src'
    }
}

//java script combining

javascript.source {
    production {
        js {
            srcDir 'src/main/static/js'
            include "*.js"
        }
    }
}

minifyJs {
    source = javascript.source.production.js.files
    dest = file("${buildDir}/resource-assemble/js/portal-min.js")
}

gzipJs {
    source = minifyJs
    dest = file("${buildDir}/resource-assemble/js/portal-min.js.gz")
}

//css combining
compass {
    cssDir = file("${buildDir}/resource-assemble/css")
    sassDir = file('src/main/static/src')
    fontsDir = file('src/main/static/fonts')
    noLineComments = true
    relativeAssets = true
    debugInfo = false
    environment = 'production'
}

task gzipCss(dependsOn:compileSass) {
    String srcPath = "${buildDir}/resource-assemble/css/portal.css"
    inputs.file srcPath
    outputs.file "${srcPath}.gz"
    doLast {
        ant.gzip(src: srcPath, destfile: "${srcPath}.gz")
    }
}

processResources.inputs.files gzipJs
processResources.inputs.files gzipCss

clean.dependsOn cleanMinifyJs
clean.dependsOn cleanCompileSass
