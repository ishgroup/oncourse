/*
 * Copyright ish group pty ltd 2020.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License version 3 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 */

import test.PrepareTestDatabase

buildscript {
    dependencies {
        classpath 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    }
}

plugins {
    id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    api project(':server-api')

    api 'org.apache.commons:commons-exec:1.3'
    api 'org.yaml:snakeyaml:1.33'

    api 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    api 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    api 'org.seleniumhq.selenium:selenium-java:4.8.0'
    api 'io.github.bonigarcia:webdrivermanager:5.3.2'
}

task copyConfig(type: Copy) {
    from("$rootDir/selenium-test/src/test/resources/") {
        include 'onCourse.yml'
        include 'logSetup.xml'
    }
    into "$rootDir/server/build"
    def dbUrl = project.hasProperty('dbUrl') ? project.getProperty('dbUrl') : 'jdbc:mariadb://localhost/angel_selenium_test'
    expand(dbUrl: dbUrl)
}

task prepareTestDatabase(type: PrepareTestDatabase) {
    databaseUrl = project.hasProperty('dbUrl') ? project.getProperty('dbUrl') : 'jdbc:mariadb://localhost/angel_selenium_test'
    dataSetDirectory = "$rootDir/selenium-test/src/test/resources/ish.oncourse.selenium.test"
}

test {
    description = "Run selenium tests requiring server and client"
    testLogging {
        events "failed", "standardOut"
    }
    jvmArgs = ['-Xmx3000m', '-Xms3000m']
    useJUnitPlatform()

    tasks.named('prepareTestDatabase').get()
            .mustRunAfter(':server:startDaemon')
            .mustRunAfter('copyConfig')

    dependsOn "copyConfig"
    dependsOn ":server:startDaemon"
    dependsOn "prepareTestDatabase"

    // ensure tests are always run
    outputs.upToDateWhen { false }
}