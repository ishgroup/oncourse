/*
 * Copyright ish group pty ltd 2020.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License version 3 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 */

apply plugin: 'groovy'
apply plugin: 'org.apache.cayenne'

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDir 'src/main/java'
sourceSets.main.groovy.srcDirs += "${buildDir}/generated-resources/main/java"

dependencies {
    // Pull in server so we can reference the full data model for our replication stubs
    implementation(project(":server"))

}


cgen {
    map = "${projectDir}/src/main/resources/cayenne/ReplicationMap.map.xml"
    makePairs = true
    template = "${projectDir}/src/main/resources/cayenne/dotemplates/subclass.vm"
    superTemplate = "${projectDir}/src/main/resources/cayenne/dotemplates/superclass.vm"
    mode = 'entity'
    superPkg = 'ish.oncourse.server.cayenne.glue'
    destDir = file("${buildDir}/generated-resources/main/java")
    doLast {
        // remove subclass files which are already committed inside the app
        delete fileTree("${buildDir}/generated-resources/main/java/ish/oncourse/server/cayenne") {
            exclude '**/glue/*'
        }
    }
}

compileJava {
    dependsOn cgen
}
