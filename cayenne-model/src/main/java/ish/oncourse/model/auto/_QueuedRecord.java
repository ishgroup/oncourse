package ish.oncourse.model.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import ish.oncourse.model.College;
import ish.oncourse.model.QueuedRecordAction;
import ish.oncourse.model.QueuedTransaction;

/**
 * Class _QueuedRecord was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _QueuedRecord extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ACTION_PROPERTY = "action";
    public static final String ANGEL_ID_PROPERTY = "angelId";
    public static final String ENTITY_IDENTIFIER_PROPERTY = "entityIdentifier";
    public static final String ENTITY_WILLOW_ID_PROPERTY = "entityWillowId";
    public static final String ERROR_MESSAGE_PROPERTY = "errorMessage";
    public static final String LAST_ATTEMPT_TIMESTAMP_PROPERTY = "lastAttemptTimestamp";
    public static final String NUMBER_OF_ATTEMPTS_PROPERTY = "numberOfAttempts";
    public static final String COLLEGE_PROPERTY = "college";
    public static final String QUEUED_TRANSACTION_PROPERTY = "queuedTransaction";

    public static final String ID_PK_COLUMN = "id";

    public static final Property<QueuedRecordAction> ACTION = new Property<QueuedRecordAction>("action");
    public static final Property<Long> ANGEL_ID = new Property<Long>("angelId");
    public static final Property<String> ENTITY_IDENTIFIER = new Property<String>("entityIdentifier");
    public static final Property<Long> ENTITY_WILLOW_ID = new Property<Long>("entityWillowId");
    public static final Property<String> ERROR_MESSAGE = new Property<String>("errorMessage");
    public static final Property<Date> LAST_ATTEMPT_TIMESTAMP = new Property<Date>("lastAttemptTimestamp");
    public static final Property<Integer> NUMBER_OF_ATTEMPTS = new Property<Integer>("numberOfAttempts");
    public static final Property<College> COLLEGE = new Property<College>("college");
    public static final Property<QueuedTransaction> QUEUED_TRANSACTION = new Property<QueuedTransaction>("queuedTransaction");

    public void setAction(QueuedRecordAction action) {
        writeProperty("action", action);
    }
    public QueuedRecordAction getAction() {
        return (QueuedRecordAction)readProperty("action");
    }

    public void setAngelId(Long angelId) {
        writeProperty("angelId", angelId);
    }
    public Long getAngelId() {
        return (Long)readProperty("angelId");
    }

    public void setEntityIdentifier(String entityIdentifier) {
        writeProperty("entityIdentifier", entityIdentifier);
    }
    public String getEntityIdentifier() {
        return (String)readProperty("entityIdentifier");
    }

    public void setEntityWillowId(Long entityWillowId) {
        writeProperty("entityWillowId", entityWillowId);
    }
    public Long getEntityWillowId() {
        return (Long)readProperty("entityWillowId");
    }

    public void setErrorMessage(String errorMessage) {
        writeProperty("errorMessage", errorMessage);
    }
    public String getErrorMessage() {
        return (String)readProperty("errorMessage");
    }

    public void setLastAttemptTimestamp(Date lastAttemptTimestamp) {
        writeProperty("lastAttemptTimestamp", lastAttemptTimestamp);
    }
    public Date getLastAttemptTimestamp() {
        return (Date)readProperty("lastAttemptTimestamp");
    }

    public void setNumberOfAttempts(Integer numberOfAttempts) {
        writeProperty("numberOfAttempts", numberOfAttempts);
    }
    public Integer getNumberOfAttempts() {
        return (Integer)readProperty("numberOfAttempts");
    }

    public void setCollege(College college) {
        setToOneTarget("college", college, true);
    }

    public College getCollege() {
        return (College)readProperty("college");
    }


    public void setQueuedTransaction(QueuedTransaction queuedTransaction) {
        setToOneTarget("queuedTransaction", queuedTransaction, true);
    }

    public QueuedTransaction getQueuedTransaction() {
        return (QueuedTransaction)readProperty("queuedTransaction");
    }


    protected abstract void onPreRemove();

}
