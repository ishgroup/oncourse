swagger: '2.0'
info:
  title: Ish API
  description: Ish React App Api
  version: "1.0.0"
schemes:
  - https
produces:
  - application/json
paths:
  /products:
    post:
      x-filter: CollegeInfo
      summary: Get list of products
      operationId: getProducts
      description: Get list of products based on current shopping cart state
      tags:
       - Products
      consumes:
       - application/json
      parameters:
      - name: productsParams
        in: body
        description: Params for request list of products
        required: true
        schema:
          $ref: '#/definitions/ProductsParams'
      responses:
        200:
          description: List of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /classes:
    post:
      x-filter: CollegeInfo
      summary: Get list of CourseClasses
      operationId: getCourseClasses
      description: Get list of course classes based on current shopping cart state
      tags:
       - CourseClasses
      consumes:
       - application/json
      parameters:
      - name: courseClassesParams
        in: body
        description: Params for request list of course classes
        required: true
        schema:
          $ref: '#/definitions/CourseClassesParams'
      responses:
        200:
          description: List of products
          schema:
            type: array
            items:
              $ref: '#/definitions/CourseClass'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /contact:
    put:
      x-filter: CollegeInfo
      summary: Create or get Contact
      operationId: createOrGetContact
      description: Create or get Contact for add student view operation
      tags:
       - Contact
      parameters:
      - name: createContactParams
        in: body
        description: Params for create or get contact
        required: true
        schema:
          $ref: '#/definitions/CreateContactParams'
      responses:
        200:
          description: Contact
          schema:
            $ref: '#/definitions/Contact'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /contact/{studentUniqueIdentifier}:
    get:
      x-filter: CollegeInfo
      summary: Get contact for provided student unique identifier
      operationId: getContact
      description: Get contact for provided student unique identifier
      tags:
       - Contact
      parameters:
      - name: studentUniqueIdentifier
        in: path
        description: Unique identifier of student
        required: true
        type: string
      responses:
        200:
          description: Contact for provided id
          schema:
            $ref: '#/definitions/Contact'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /promotion/{code}:
    get:
      x-filter: CollegeInfo
      summary: Get promotion by code
      operationId: getPromotion
      description: Get promotion by code
      tags:
       - Promotion
      parameters:
      - name: code
        in: path
        description: Promotions's code
        required: true
        type: string
      responses:
        200:
          description: Promotion for provided code
          schema:
            $ref: '#/definitions/Promotion'
        404:
          description: In case if promotion not avaliable for provided code
          schema:
            title: PromotionNotFound
            type: object
            properties:
              message:
                type: string
                description: Message to show on UI
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /cart:
    post:
      summary: Create new Cart session
      description: |
        Create new session Id that will be used for futher requests to cast endpoints.
      tags:
       - Cart
      consumes:
       - application/json
      responses:
        200:
          description: Object with token
          schema:
            $ref: '#/definitions/Token'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /completion/{key}:
    get:
      summary: Autocomplete Endpoint
      operationId: autocomplete
      description: |
        Provide autocomplete candidates for provided key and text
      tags:
       - Autocomplete
      parameters:
      - name: key
        in: path
        description: Autocomplete key
        required: true
        type: string
      - name: text
        in: query
        description: User input
        required: true
        type: string
      responses:
        200:
          description: List of autocomplete candidates
          schema:
            type: array
            items:
              $ref: '#/definitions/Suggestion'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
parameters:
  XOrigin:
    name: X-Origin
    in: header
    description: |
      College URL which we sends with every request,
      since we have common endpoint for all colledges.
      Example: intranet.ish.com.au
    required: true
    type: string
  Session:
    name: X-Session-Token
    in: header
    description: User's session Id
    required: true
    type: string
definitions:
  Suggestion:
    type: object
    properties:
      key:
        type: string
        description: Key which user see
      value:
        type: string
        description: Value which will be send back
  Product:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of product
      code:
        type: string
        description: Code of product
      name:
        type: string
        description: Name of product
      description:
        type: string
        description: Description of product
      isPaymentGatewayEnabled:
        type: boolean
        description: Is payment gateway enabled
      canBuy:
        type: boolean
        description: Is on sale and is Web visible
  Course:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
      code:
        type: string
        description: Code of course
      name:
        type: string
        description: Name of course
      description:
        type: string
        description: Description of course
  CourseClass:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of class
      course:
        $ref: '#/definitions/Course'
      code:
        type: string
        description: Code of class
      start:
        type: string
        format: date
        description: Start date of class
      end:
        type: string
        format: date
        description: End date of class
      hasAvailablePlaces:
        type: boolean
        description: Available places
      availableEnrolmentPlaces:
        type: integer
        format: int32
        description: Number of free places
      isFinished:
        type: boolean
        description: Is class finished
      isCancelled:
        type: boolean
        description: Is class cancelled
      isAllowByApplication:
        type: boolean
        description: Allow by application
      isPaymentGatewayEnabled:
        type: boolean
        description: Is payment gateway enabled
      price:
        $ref: '#/definitions/CourseClassPrice'
        description: Prices attached to current course class
  CourseClassPrice:
    type: object
    properties:
      fee:
        type: string
        description: 'TODO:  fee'
      feeOverriden:
        type: string
        description: 'TODO:  feeOverriden'
      appliedDiscount:
        $ref: '#/definitions/Discount'
      possibleDiscounts:
        type: array
        items:
          $ref: '#/definitions/Discount'
        description: List discounts sorted by discounted fee
      hasTax:
        type: boolean
        description: Has tax
  Discount:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of discount
      expiryDate:
        type: string
        format: date
      discountedFee:
        type: string
      discountValue:
        type: string
      title:
        type: string
  Contact:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
      uniqueIdentifier:
        type: string
        description: Unique identifier of contact
      firstName:
        type: string
        description: first name of contact
      lastName:
        type: string
        description: last name of contact
      email:
        type: string
        description: email of contact
  Promotion:
    type: object
    properties:
      id:
        type: string
        description: Internal unique indetificator of promotion
      code:
        type: string
        description: Code of promotion
      name:
        type: string
        description: Name of promotion
  Token:
    type: object
    properties:
      token:
        type: string
        description: Unique identifier for the user
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  CourseClassesParams:
    type: object
    properties:
      courseClassesIds:
        type: array
        items:
          type: string
        description: List of requested course classes
      promotions:
        type: array
        items:
          $ref: '#/definitions/PromotionParams'
        description: List of applied promotions
      contact:
        $ref: '#/definitions/ContactParams'
  ProductsParams:
    type: object
    properties:
      productsIds:
        type: array
        items:
          type: string
        description: List of requested products
      promotions:
        type: array
        items:
          $ref: '#/definitions/PromotionParams'
        description: List of applied promotions
      contact:
        $ref: '#/definitions/ContactParams'
  ContactParams:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
  PromotionParams:
    type: object
    properties:
      id:
        type: string
        description: Internal unique indetificator of promotion
  CreateContactParams:
    type: object
    required:
    - firstName
    - lastName
    - email
    properties:
      firstName:
        type: string
        description: First Name of Contact
      lastName:
        type: string
        description: Last Name of Contact
      email:
        description: Email of Contact
        type: string
  ValidationError:
    type: object
    required:
    - formErrors
    - fieldsErrors
    properties:
      formErrors:
        type: array
        items:
          type: string
        description: Global error
      fieldsErrors:
        type: array
        items:
          title: FieldError
          type: object
          required:
          - name
          - error
          properties:
            name:
              type: string
              description: Name of fiels with error
            error:
              type: string
              description: Errors for particular field, or empty array
        description: Array of fields errors, or empty array
