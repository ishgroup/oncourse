swagger: '2.0'
info:
  title: Ish API
  description: Ish React App Api
  version: "1.0.0"
schemes:
  - https
produces:
  - application/json
paths:
  /products:
    post:
      x-filter:  
        - CollegeInfo
      summary: Get list of products
      operationId: getProducts
      description: Get list of products based on current shopping cart state
      tags:
       - Products
      consumes:
       - application/json
      parameters:
      - name: productsParams
        in: body
        description: Params for request list of products
        required: true
        schema:
          $ref: '#/definitions/web.ProductsParams'
      responses:
        200:
          description: List of products
          schema:
            type: array
            items:
              $ref: '#/definitions/web.Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /classes:
    post:
      x-filter: 
        - CollegeInfo
      summary: Get list of CourseClasses
      operationId: getCourseClasses
      description: Get list of course classes based on current shopping cart state
      tags:
       - CourseClasses
      consumes:
       - application/json
      parameters:
      - name: courseClassesParams
        in: body
        description: Params for request list of course classes
        required: true
        schema:
          $ref: '#/definitions/web.CourseClassesParams'
      responses:
        200:
          description: List of products
          schema:
            type: array
            items:
              $ref: '#/definitions/web.CourseClass'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /contact:
    put:
      x-filter: 
        - CollegeInfo
        - ContactValidation
      summary: Create or get Contact
      operationId: createOrGetContact
      description: Create or get Contact for add student view operation
      tags:
       - Contact
      parameters:
      - name: createContactParams
        in: body
        description: Params for create or get contact
        required: true
        schema:
          $ref: '#/definitions/web.CreateContactParams'
      responses:
        200:
          description: Contact Id
          schema:
            type: string
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/common.ValidationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /contact/{studentUniqueIdentifier}:
    get:
      x-filter: 
        - CollegeInfo
      summary: Get contact for provided student unique identifier
      operationId: getContact
      description: Get contact for provided student unique identifier
      tags:
       - Contact
      parameters:
      - name: studentUniqueIdentifier
        in: path
        description: Unique identifier of student
        required: true
        type: string
      responses:
        200:
          description: Contact for provided id
          schema:
            $ref: '#/definitions/web.Contact'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /contactFields:
    post:
      x-filter: 
        - CollegeInfo
      summary: Get contact's empty fields that should be filled based on classes configs
      operationId: getContactFields
      description: Get contact's fields
      tags:
       - Contact
      consumes:
      - application/json
      parameters:
      - name: contactFieldsRequest
        in: body
        description: Params for get  contact's fields 
        required: true
        schema:
          $ref: '#/definitions/field.ContactFieldsRequest'
      responses:
        200:
          description: Contact Id
          schema:
            $ref: '#/definitions/field.ContactFields'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /promotion/{code}:
    get:
      x-filter: 
      - CollegeInfo
      summary: Get promotion by code
      operationId: getPromotion
      description: Get promotion by code
      tags:
       - Promotion
      parameters:
      - name: code
        in: path
        description: Promotions's code
        required: true
        type: string
      responses:
        200:
          description: Promotion for provided code
          schema:
            $ref: '#/definitions/web.Promotion'
        404:
          description: In case if promotion not avaliable for provided code
          schema:
            title: web.PromotionNotFound
            type: object
            properties:
              message:
                type: string
                description: Message to show on UI
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /cart:
    post:
      summary: Create new Cart session
      description: |
        Create new session Id that will be used for futher requests to cast endpoints.
      tags:
       - Cart
      consumes:
       - application/json
      responses:
        200:
          description: Object with token
          schema:
            $ref: '#/definitions/web.Token'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /completion/{key}:
    get:
      summary: Autocomplete Endpoint
      operationId: autocomplete
      description: |
        Provide autocomplete candidates for provided key and text
      tags:
       - Autocomplete
      parameters:
      - name: key
        in: path
        description: Autocomplete key
        required: true
        type: string
      - name: text
        in: query
        description: User input
        required: true
        type: string
      responses:
        200:
          description: List of autocomplete candidates
          schema:
            type: array
            items:
              $ref: '#/definitions/autocomplete.Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
parameters:
  XOrigin:
    name: X-Origin
    in: header
    description: |
      College URL which we sends with every request,
      since we have common endpoint for all colledges.
      Example: intranet.ish.com.au
    required: true
    type: string
  Session:
    name: X-Session-Token
    in: header
    description: User's session Id
    required: true
    type: string
definitions:
  autocomplete.Item:
    type: object
    properties:
      key:
        type: string
        description: Key which will be send back
      value:
        type: string
        description: Value which user will see
  web.Product:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of product
      code:
        type: string
        description: Code of product
      name:
        type: string
        description: Name of product
      description:
        type: string
        description: Description of product
      isPaymentGatewayEnabled:
        type: boolean
        description: Is payment gateway enabled
      canBuy:
        type: boolean
        description: Is on sale and is Web visible
  web.Course:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
      code:
        type: string
        description: Code of course
      name:
        type: string
        description: Name of course
      description:
        type: string
        description: Description of course
  web.CourseClass:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of class
      course:
        $ref: '#/definitions/Course'
      code:
        type: string
        description: Code of class
      start:
        type: string
        format: date
        description: Start date of class
      end:
        type: string
        format: date
        description: End date of class
      hasAvailablePlaces:
        type: boolean
        description: Available places
      availableEnrolmentPlaces:
        type: integer
        format: int32
        description: Number of free places
      isFinished:
        type: boolean
        description: Is class finished
      isCancelled:
        type: boolean
        description: Is class cancelled
      isAllowByApplication:
        type: boolean
        description: Allow by application
      isPaymentGatewayEnabled:
        type: boolean
        description: Is payment gateway enabled
      price:
        $ref: '#/definitions/web.CourseClassPrice'
        description: Prices attached to current course class
  web.CourseClassPrice:
    type: object
    properties:
      fee:
        type: string
        description: 'TODO:  fee'
      feeOverriden:
        type: string
        description: 'TODO:  feeOverriden'
      appliedDiscount:
        $ref: '#/definitions/web.Discount'
      possibleDiscounts:
        type: array
        items:
          $ref: '#/definitions/web.Discount'
        description: List discounts sorted by discounted fee
      hasTax:
        type: boolean
        description: Has tax
  web.Discount:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of discount
      expiryDate:
        type: string
        format: date
      discountedFee:
        type: string
      discountValue:
        type: string
      title:
        type: string
  web.Contact:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
      uniqueIdentifier:
        type: string
        description: Unique identifier of contact
      firstName:
        type: string
        description: first name of contact
      lastName:
        type: string
        description: last name of contact
      email:
        type: string
        description: email of contact
  web.Promotion:
    type: object
    properties:
      id:
        type: string
        description: Internal unique indetificator of promotion
      code:
        type: string
        description: Code of promotion
      name:
        type: string
        description: Name of promotion
  web.Token:
    type: object
    properties:
      token:
        type: string
        description: Unique identifier for the user
  common.CommonError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  web.CourseClassesParams:
    type: object
    properties:
      courseClassesIds:
        type: array
        items:
          type: string
        description: List of requested course classes
      promotions:
        type: array
        items:
          $ref: '#/definitions/web.PromotionParams'
        description: List of applied promotions
      contact:
        $ref: '#/definitions/web.ContactParams'
  web.ProductsParams:
    type: object
    properties:
      productsIds:
        type: array
        items:
          type: string
        description: List of requested products
      promotions:
        type: array
        items:
          $ref: '#/definitions/web.PromotionParams'
        description: List of applied promotions
      contact:
        $ref: '#/definitions/web.ContactParams'
  web.ContactParams:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
  web.PromotionParams:
    type: object
    properties:
      id:
        type: string
        description: Internal unique indetificator of promotion
  web.FieldSet:
    type: string
    enum:
      - enrolment
      - waitinglist
      - application
      - mailinglist
  web.CreateContactParams:
    type: object
    required:
    - firstName
    - lastName
    - email
    - fieldSet
    properties:
      firstName:
        type: string
        description: First Name of Contact
      lastName:
        type: string
        description: Last Name of Contact
      email:
        description: Email of Contact
        type: string
      fieldSet:
        $ref: '#/definitions/web.FieldSet'
  common.ValidationError:
    type: object
    required:
    - formErrors
    - fieldsErrors
    properties:
      formErrors:
        type: array
        items:
          type: string
        description: Global error
      fieldsErrors:
        type: array
        items:
          title: common.FieldError
          type: object
          required:
          - name
          - error
          properties:
            name:
              type: string
              description: Name of fiels with error
            error:
              type: string
              description: Errors for particular field, or empty array
        description: Array of fields errors, or empty array  
  field.ContactFieldsRequest:
    type: object
    requred:
    - contactId
    - classesIds
    - fieldSet
    properties:
      contactId:
        type: string
        description: Requested contact id
      classesIds:
        type: array
        items: 
          type: string
        description: Requested classe's ids
      fieldSet:
        $ref: '#/definitions/web.FieldSet'
  field.DataType:
    type: string
    enum:
      - strind
      - boolean
      - date
      - dateTime
      - int
      - country
      - language
      - enum
  field.Field: 
    type: object
    requred:
    - id
    - key
    - name
    - description
    - mandatory
    - dataType
    - enumType
    - value
    - defaultValue
    properties:
      id:
        type: string
        description: Field id
      name:
        type: string
        description: Field name
      description:
        type: string
        description: Field description
      mandatory:
        type: string
        description: Mandatory flag
      dataType:
        $ref: '#/definitions/field.DataType'
        description: Data type of provaded value
      enumType:
        type: string
        description: Enumeration name which is type for field value
      value:
        type: string
        description: Value for corresponded property
      defaultValue:
        type: string
        description: Default value for corresponded property
  field.FieldHeading:
    type: object
    requred:
    - name
    - description
    - fields
    properties:
      name:
        type: string
        description: Heading name
      description:
        type: string
        description: Heading description
      fields:
        type: array
        items:
          $ref: '#/definitions/field.Field'
        description: Fields set related to field heading
  field.ClassHeadings:
    type: object
    requred:
    - classId
    - headings
    - dummyHeading
    properties:
      classId:
        type: string
        description: Reffered class id
      headings:
        type: array
        items:
          $ref: '#/definitions/field.FieldHeading'
        description: Related field headings
      dummyHeading:
        $ref: '#/definitions/field.FieldHeading'
        description: Dummy headin filled by fields that not linked to any real Field Heading
  field.ContactFields:
    type: object
    requred:
    - contactId
    - contactClassHeadings
    properties:
      contactId:
        type: string
        description: Contact Id
      classHeadings:
        type: array
        items:
          $ref: '#/definitions/field.ClassHeadings'
        description: Field configurations for each contact's class 
