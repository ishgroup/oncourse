swagger: '2.0'
info:
  title: Ish API
  description: Ish React App Api
  version: "1.0.0"
schemes:
  - https
produces:
  - application/json
paths:
  /getContactNode:
    post:
      x-filter:  
      - CollegeInfo
      operationId: getContactNode
      summary: Get list of purchases 
      description: Get list of enrolments/applications/product items for certain contact based on selected classes/products
      tags:
      - Checkout
      consumes:
      - application/json
      parameters:
      - name: contactNodeRequest
        in: body
        description: Params for request list of products/classes
        required: true
        schema:
          $ref: '#/definitions/checkout.request.ContactNodeRequest'
      responses:
        200:
          description: List of products
          schema:
            $ref: '#/definitions/checkout.ContactNode'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getCheckoutModel:
    post:
      x-filter:  
      - CollegeInfo
      operationId: getCheckoutModel
      summary: Validate all purchase items. Calculate total amount and price for each discounted enrolment.
      description: Validate all purchase items. Calculate total amount and price for each discounted enrolment
      tags:
      - Checkout
      consumes:
      - application/json
      parameters:
      - name: checkoutModelRequest
        in: body
        description: List of contact's purchases, current payer ID, list of added promotions 
        required: true
        schema:
          $ref: '#/definitions/checkout.CheckoutModelRequest'
      responses:
        200:
          description: Whole Checkout Model with calclated amount and actual prices for each purchase item
          schema:
            $ref: '#/definitions/checkout.CheckoutModel'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /makePayment:
    post:
      x-filter:  
      - CollegeInfo
      operationId: makePayment
      summary: Validate model, save purchase items into db and send payment to DPS
      description: Validate model, save purchase items into db and send payment to DPS
      tags:
      - Checkout
      consumes:
      - application/json
      parameters:
      - name: paymentRequest
        in: body
        description: Checkout model plus credit cadr data
        required: true
        schema:
          $ref: '#/definitions/checkout.payment.PaymentRequest'
      responses:
        200:
          description: Payment Response object with sessionId populated
          schema:
            $ref: '#/definitions/checkout.payment.PaymentResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getPaymentStatus/{sessionId}:
    get:
      x-filter:  
      - CollegeInfo
      operationId: getPaymentStatus
      summary: Get actual payment status
      description: Get actual payment status
      tags:
      - Checkout
      parameters:
      - name: sessionId
        in: path
        description: Checkout model plus credit cadr data
        required: true
        type: string
      responses:
        200:
          description: Payment Response object with sessionId populated
          schema:
            $ref: '#/definitions/checkout.payment.PaymentResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /products:
    post:
      x-filter:  
        - CollegeInfo
      summary: Get list of products
      operationId: getProducts
      description: Get list of products based on current shopping cart state
      tags:
       - Products
      consumes:
       - application/json
      parameters:
      - name: productsParams
        in: body
        description: Params for request list of products
        required: true
        schema:
          $ref: '#/definitions/web.ProductsParams'
      responses:
        200:
          description: List of products
          schema:
            type: array
            items:
              $ref: '#/definitions/web.Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /classes:
    post:
      x-filter: 
        - CollegeInfo
      summary: Get list of CourseClasses
      operationId: getCourseClasses
      description: Get list of course classes based on current shopping cart state
      tags:
       - CourseClasses
      consumes:
       - application/json
      parameters:
      - name: courseClassesParams
        in: body
        description: Params for request list of course classes
        required: true
        schema:
          $ref: '#/definitions/web.CourseClassesParams'
      responses:
        200:
          description: List of products
          schema:
            type: array
            items:
              $ref: '#/definitions/web.CourseClass'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /contact:
    put:
      x-filter: 
        - CollegeInfo
        - ContactValidation
      summary: Create or get Contact
      operationId: createOrGetContact
      description: Create or get Contact for add student view operation
      tags:
       - Contact
      parameters:
      - name: createContactParams
        in: body
        description: Params for create or get contact
        required: true
        schema:
          $ref: '#/definitions/web.CreateContactParams'
      responses:
        200:
          description: ContactId object 
          schema:
            $ref: '#/definitions/web.ContactId'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/common.ValidationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /contact/{studentUniqueIdentifier}:
    get:
      x-filter: 
        - CollegeInfo
      summary: Get contact for provided student unique identifier
      operationId: getContact
      description: Get contact for provided student unique identifier
      tags:
       - Contact
      parameters:
      - name: studentUniqueIdentifier
        in: path
        description: Unique identifier of student
        required: true
        type: string
      responses:
        200:
          description: Contact for provided id
          schema:
            $ref: '#/definitions/web.Contact'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /contactFields:
    post:
      x-filter: 
        - CollegeInfo
      summary: Get contact's empty fields that should be filled based on classes configs
      operationId: getContactFields
      description: Get contact's fields
      tags:
       - Contact
      consumes:
      - application/json
      parameters:
      - name: contactFieldsRequest
        in: body
        description: Params for get  contact's fields 
        required: true
        schema:
          $ref: '#/definitions/field.ContactFieldsRequest'
      responses:
        200:
          description: Contact Id
          schema:
            $ref: '#/definitions/field.ContactFields'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /submitContactDetails:
    put:
      x-filter: 
      - CollegeInfo
      summary: Save contact details from web form
      operationId: submitContactDetails
      description: Save contact details
      tags:
      - Contact
      consumes:
      - application/json
      parameters:
      - name: contactFields
        in: body
        description: Contact fields
        required: true
        schema:
            $ref: '#/definitions/field.SubmitFieldsRequest'
      responses:
        200:
          description: Ok response
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/common.ValidationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /promotion/{code}:
    get:
      x-filter: 
      - CollegeInfo
      summary: Get promotion by code
      operationId: getPromotion
      description: Get promotion by code
      tags:
       - Promotion
      parameters:
      - name: code
        in: path
        description: Promotions's code
        required: true
        type: string
      responses:
        200:
          description: Promotion for provided code
          schema:
            $ref: '#/definitions/web.Promotion'
        404:
          description: In case if promotion not avaliable for provided code
          schema:
            title: web.PromotionNotFound
            type: object
            properties:
              message:
                type: string
                description: Message to show on UI
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /cart:
    post:
      summary: Create new Cart session
      description: |
        Create new session Id that will be used for futher requests to cast endpoints.
      tags:
       - Cart
      consumes:
       - application/json
      responses:
        200:
          description: Object with token
          schema:
            $ref: '#/definitions/web.Token'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /postcode/{text}:
    get:
      x-filter:  
      - SearchText
      summary: Postcode endpoint
      operationId: getPostcodes
      description: Provide autocomplete candidates for provided text
      tags:
      - Search
      parameters:
      - name: text
        in: path
        description: Text pattern to searche on
        required: true
        type: string
      responses:
        200:
          description: List of autocomplete candidates
          schema:
            type: array
            items:
              $ref: '#/definitions/common.Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /suburb/{text}:
    get:
      x-filter:  
      - SearchText    
      summary: Suburb endpoint
      operationId: getSuburbs
      description: Provide autocomplete candidates for searche text
      tags:
      - Search
      parameters:
      - name: text
        in: path
        description: Text pattern to searche on
        required: true
        type: string
      responses:
        200:
          description: List of autocomplete candidates
          schema:
            type: array
            items:
              $ref: '#/definitions/common.Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /language/{text}:
    get:
      x-filter:  
      - SearchText  
      summary: Suburb endpoint
      operationId: getLanguages
      description: Provide autocomplete candidates for searche text
      tags:
      - Search
      parameters:
      - name: text
        in: path
        description: Text pattern to searche on
        required: true
        type: string
      responses:
        200:
          description: List of autocomplete candidates
          schema:
            type: array
            items:
              $ref: '#/definitions/common.Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /country/{text}:
    get:
      x-filter:  
      - SearchText  
      summary: Suburb endpoint
      operationId: getCountries
      description: Provide autocomplete candidates for searche text
      tags:
      - Search
      parameters:
      - name: text
        in: path
        description: Text pattern to searche on
        required: true
        type: string
      responses:
        200:
          description: List of autocomplete candidates
          schema:
            type: array
            items:
              $ref: '#/definitions/common.Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
parameters:
  XOrigin:
    name: X-Origin
    in: header
    description: |
      College URL which we sends with every request,
      since we have common endpoint for all colledges.
      Example: intranet.ish.com.au
    required: true
    type: string
  Session:
    name: X-Session-Token
    in: header
    description: User's session Id
    required: true
    type: string
definitions:
  common.Item:
    type: object
    properties:
      key:
        type: string
        description: Key which will be send back
      value:
        type: object
        description: Value which user will see
  field.Suburb:
    type: object
    properties:
      state:
        type: string
        description: State that corresponds certain location
      suburb:
        type: string
        description: Suburb that corresponds certain location
      postcode:
        type: string
        description: Postcode that corresponds certain location
  web.Product:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of product
      code:
        type: string
        description: Code of product
      name:
        type: string
        description: Name of product
      description:
        type: string
        description: Description of product
      isPaymentGatewayEnabled:
        type: boolean
        description: Is payment gateway enabled
      canBuy:
        type: boolean
        description: Is on sale and is Web visible
  web.Course:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
      code:
        type: string
        description: Code of course
      name:
        type: string
        description: Name of course
      description:
        type: string
        description: Description of course
  web.Site:
    type: object
    properties:
      name:
       type: string
       description: Site name
      street: 
        type: string
        description: Site address
      suburb:
        type: string
        description: Site suburb
      postcode:
        type: string
        description: Site postcode
  web.Room:
    type: object
    properties:
      name:
        type: string
        description: Room name
      site:
        $ref: '#/definitions/web.Site'
        description: Site relation
  web.CourseClass:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of class
      course:
        $ref: '#/definitions/web.Course'
      code:
        type: string
        description: Code of class
      start:
        description: Class start date and time in UTC time zone (+00:00),date format is ISO 8601
        type: string
        format: date
        description: Start date of class
      end:
        description: Class start date and time in UTC time zone (+00:00),date format is ISO 8601
        type: string
        format: date
        description: End date of class
      hasAvailablePlaces:
        type: boolean
        description: Available places
      availableEnrolmentPlaces:
        type: integer
        format: int32
        description: Number of free places
      isFinished:
        type: boolean
        description: Is class finished
      isCancelled:
        type: boolean
        description: Is class cancelled
      isAllowByApplication:
        type: boolean
        description: Allow by application
      isPaymentGatewayEnabled:
        type: boolean
        description: Is payment gateway enabled
      distantLearning:
        type: boolean
        description: Self paced class
      price:
        $ref: '#/definitions/web.CourseClassPrice'
        description: Prices attached to current course class
      room:
        $ref: '#/definitions/web.Room'
        description: Room for the site
  web.CourseClassPrice:
    type: object
    properties:
      fee:
        type: string
        description: Full class price
      feeOverriden:
        type: string
        description: Class price overriden by application
      appliedDiscount:
        $ref: '#/definitions/web.Discount'
      possibleDiscounts:
        type: array
        items:
          $ref: '#/definitions/web.Discount'
        description: List discounts sorted by discounted fee
      hasTax:
        type: boolean
        description: Has tax
  web.Discount:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of discount
      expiryDate:
        type: string
        format: date
      discountedFee:
        type: string
      discountValue:
        type: string
      title:
        type: string
  web.ContactId:
    type: object
    properties:
      id:
        type: string
        description: Contact id
      newContact:
        type: boolean
        description: Indicates that new contact created
  web.Contact:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
      uniqueIdentifier:
        type: string
        description: Unique identifier of contact
      firstName:
        type: string
        description: first name of contact
      lastName:
        type: string
        description: last name of contact
      email:
        type: string
        description: email of contact
  web.Promotion:
    type: object
    properties:
      id:
        type: string
        description: Internal unique indetificator of promotion
      code:
        type: string
        description: Code of promotion
      name:
        type: string
        description: Name of promotion
  web.Token:
    type: object
    properties:
      token:
        type: string
        description: Unique identifier for the user
  common.CommonError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  web.CourseClassesParams:
    type: object
    properties:
      courseClassesIds:
        type: array
        items:
          type: string
        description: List of requested course classes
      promotions:
        type: array
        items:
          $ref: '#/definitions/web.PromotionParams'
        description: List of applied promotions
      contact:
        $ref: '#/definitions/web.ContactParams'
  web.ProductsParams:
    type: object
    properties:
      productsIds:
        type: array
        items:
          type: string
        description: List of requested products
      promotions:
        type: array
        items:
          $ref: '#/definitions/web.PromotionParams'
        description: List of applied promotions
      contact:
        $ref: '#/definitions/web.ContactParams'
  web.ContactParams:
    type: object
    properties:
      id:
        type: string
        description: Internal Unique identifier of course
  web.PromotionParams:
    type: object
    properties:
      id:
        type: string
        description: Internal unique indetificator of promotion
  field.FieldSet:
    type: string
    enum:
      - ENROLMENT
      - WAITINGLIST
      - MAILINGLIST
  web.CreateContactParams:
    type: object
    required:
    - firstName
    - lastName
    - email
    - fieldSet
    properties:
      firstName:
        type: string
        description: First Name of Contact
      lastName:
        type: string
        description: Last Name of Contact
      email:
        description: Email of Contact
        type: string
      fieldSet:
        $ref: '#/definitions/field.FieldSet'
  common.ValidationError:
    type: object
    required:
    - formErrors
    - fieldsErrors
    properties:
      formErrors:
        type: array
        items:
          type: string
        description: Global error
      fieldsErrors:
        type: array
        items:
          title: common.FieldError
          type: object
          required:
          - name
          - error
          properties:
            name:
              type: string
              description: Name of fiels with error
            error:
              type: string
              description: Errors for particular field, or empty array
        description: Array of fields errors, or empty array  
  field.ContactFieldsRequest:
    type: object
    requred:
    - contactId
    - classIds
    - productIds
    - mandatoryOnly
    - fieldSet
    properties:
      contactId:
        type: string
        description: Requested contact id
      classIds:
        type: array
        items: 
          type: string
        description: Requested classe's ids
      productIds:
        type: array
        items: 
          type: string
        description: Requested product's ids
      mandatoryOnly:
        type: boolean
        description: Flag to show only mandatory fields 
      fieldSet:
        $ref: '#/definitions/field.FieldSet'
  field.DataType:
    type: string
    enum:
      - STRING
      - BOOLEAN
      - DATE
      - DATETIME
      - INTEGER
      - COUNTRY
      - LANGUAGE
      - ENUM
      - EMAIL
      - SUBURB
      - POSTCODE
      - PHONE
  field.Field: 
    type: object
    requred:
    - id
    - key
    - name
    - description
    - mandatory
    - dataType
    - enumType
    - value
    - defaultValue
    - enumItems
    - ordering
    properties:
      id:
        type: string
        description: Field id
      key:
        type: string
        description: Property key
      name:
        type: string
        description: Field name
      description:
        type: string
        description: Field description
      mandatory:
        type: boolean
        description: Mandatory flag
      dataType:
        $ref: '#/definitions/field.DataType'
        description: Data type of provaded value
      enumType:
        type: string
        description: Enumeration name which is type for field value
      value:
        type: string
        description: Value for corresponded property
      defaultValue:
        type: string
        description: Default value for corresponded property
      enumItems:
        type: array
        items:
          $ref: '#/definitions/common.Item'
        description: Combobox choices for enumeration types
      ordering:
        type: integer
        format: int32
        description: order position
  field.SubmitFieldsRequest:
    type: object
    requred:
    - contactId
    - fields
    properties:
      contactId:
        type: string
        description: Submited contact id
      fields:
        type: array
        items:
          $ref: '#/definitions/field.Field'
        description: Array of fields
  field.FieldHeading:
    type: object
    requred:
    - name
    - description
    - fields
    - ordering
    properties:
      name:
        type: string
        description: Heading name
      description:
        type: string
        description: Heading description
      fields:
        type: array
        items:
          $ref: '#/definitions/field.Field'
        description: Fields set related to field heading
      ordering:
        type: integer
        format: int32
        description: order position
  field.ContactFields:
    type: object
    requred:
    - contactId
    - headings
    properties:
      contactId:
        type: string
        description: Contact Id
      headings:
        type: array
        items:
          $ref: '#/definitions/field.FieldHeading'
        description: Related field headings
  checkout.Enrolment:
    type: object
    requred:
    - contactId
    - classId
    - price
    - warnings
    - errors
    - selected
    properties:
      contactId:
        type: string
      classId:
        type: string
      price:
        $ref: '#/definitions/web.CourseClassPrice'
      warnings:
        type: array
        items:
         type: string
      errors:
        type: array
        items:
         type: string
      selected:
        type: boolean
  checkout.Application:
    type: object
    requred:
    - contactId
    - classId
    - warnings
    - errors
    - selected
    properties:
      contactId:
        type: string
      classId:
        type: string
      warnings:
        type: array
        items:
         type: string
      errors:
        type: array
        items:
         type: string
      selected:
        type: boolean
  checkout.Article:
    type: object
    requred:
    - contactId
    - productId
    - warnings
    - errors
    - price
    - selected
    properties:
      contactId:
        type: string
      productId:
        type: string
      warnings:
        type: array
        items:
         type: string
      errors:
        type: array
        items:
         type: string
      price:
        type: string
      selected:
        type: boolean
  checkout.Membership:
    type: object
    requred:
    - contactId
    - productId
    - warnings
    - errors
    - price
    - selected
    properties:
      contactId:
        type: string
      productId:
        type: string
      warnings:
        type: array
        items:
         type: string
      errors:
        type: array
        items:
         type: string
      price:
        type: string
      selected:
        type: boolean
  checkout.Voucher:
    type: object
    requred:
    - contactId
    - productId
    - warnings
    - errors
    - price
    - selected
    properties:
      contactId:
        type: string
      productId:
        type: string
      warnings:
        type: array
        items:
         type: string
      errors:
        type: array
        items:
         type: string
      price:
        type: string
      value:
        type: string
      classes:
        type: array
        items:
          type: string
      selected:
        type: boolean
  checkout.request.ContactNodeRequest:
      type: object
      requred:
      - contactId
      - classIds
      - productIds
      - promotionIds
      properties:
        contactId:
          type: string
        classIds:
          type: array
          items:
           type: string
        productIds:
          type: array
          items: 
            type: string
        promotionIds:
          type: array
          items: 
            type: string
  checkout.ContactNode:
    type: object
    requred:
    - contactId
    - enrolments
    - applications
    - articles
    - memberships
    - vouchers
    properties:
      contactId:
        type: string
      enrolments:
        type: array
        items:
          $ref: '#/definitions/checkout.Enrolment'
      applications:
        type: array
        items:
          $ref: '#/definitions/checkout.Application'
      articles:
        type: array
        items:
          $ref: '#/definitions/checkout.Article'
      memberships:
        type: array
        items:
          $ref: '#/definitions/checkout.Membership'
      vouchers:
        type: array
        items:
          $ref: '#/definitions/checkout.Voucher'
  checkout.Amount:
    type: object
    properties: 
      owing:
        type: string
      total: 
        type: string
      discount: 
        type: string
      payNow: 
        type: string
  checkout.CheckoutModel:
    type: object
    properties: 
      error:
        $ref: '#/definitions/common.CommonError'
      contactNodes:
        type: array
        items:
          $ref: '#/definitions/checkout.ContactNode'
      amount:
        $ref: '#/definitions/checkout.Amount'
      payerId:
        type: string
  checkout.CheckoutModelRequest:
    type: object
    properties: 
      contactNodes:
        type: array
        items:
          $ref: '#/definitions/checkout.ContactNode'
      promotionIds:
        type: array
        items:
          type: string
      payerId:
        type: string
  checkout.payment.PaymentRequest:
    type: object
    properties:
      checkoutModelRequest:
        $ref: '#/definitions/checkout.CheckoutModelRequest'
      creditCardNumber:
        type: string
      creditCardName:
        type: string
      expiryMonth:
        type: string
      expiryYear:
        type: string
      creditCardCvv:
        type: string
      agreementFlag:
        type: boolean
      sessionId:
        type: string
        description: String length 16 of hexadecimal digits
      payNow: 
        type: string
  checkout.payment.PaymentStatus:
    type: string
    enum:
      - IN_PROGRESS
      - FAIL
      - SUCCESSFUL
      - UNDEFINED
  checkout.payment.PaymentResponse:
    type: object
    properties:
      sessionId:
        type: string
      status:
        $ref: '#/definitions/checkout.payment.PaymentStatus'
      reference:
        type: string