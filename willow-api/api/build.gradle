apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'

repositories {
    maven {
        url 'https://repo.ish.com.au/content/groups/public'
    }
    maven {
        url 'https://repo.ish.com.au/content/groups/ish'
    }
}

ext {
    bootiqueVersion = "0.22"
}

dependencyManagement {
    imports {
        mavenBom("io.bootique.bom:bootique-bom:$bootiqueVersion")
    }
}

dependencies {
    compile (project(':common:common-functions')) {
        exclude group: 'org.apache.logging.log4j'
    }
    
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

   //cxf
    compile 'org.apache.cxf:cxf-core:3.1.10'
    compile 'org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.10'
    compile 'org.apache.cxf:cxf-rt-transports-http-jetty:3.1.10'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.7'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'

    //bean validation
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'org.apache.bval:org.apache.bval.bundle:1.1.2'

    //bootique
    compile 'io.bootique:bootique'
    compile 'io.bootique.jetty:bootique-jetty'
    compile 'io.bootique.jcache:bootique-jcache'
    //cannot use the latest bootique-cayenne
    //cayenne 4.0.M5 is not compatible with groovy and @CompileStatic
    compile 'io.bootique.cayenne:bootique-cayenne:0.18'

    //cache
    compile 'org.ehcache:ehcache:3.3.1'
    
    //search
    compile "org.apache.solr:solr-solrj:6.6.0"


    compile 'mysql:mysql-connector-java:5.1.38'

    testCompile 'org.dbunit:dbunit:2.5.3'
    testCompile 'org.apache.commons:commons-dbcp2:2.1.1'
    testCompile 'org.apache.commons:commons-pool2:2.4.2'
}

mainClassName = 'ish.oncourse.willow.WillowApp'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

test {
    systemProperty "oncourse.jdbc.url", System.getProperty("oncourse.jdbc.url")
    systemProperty "oncourse.jdbc.user", System.getProperty("oncourse.jdbc.user")
    systemProperty "oncourse.jdbc.password", System.getProperty("oncourse.jdbc.password")
}

compileGroovy {
    groovyOptions.configurationScript = file("config.groovy")
}

processResources.doLast {
    file("${buildDir}/resources/VERSION").text = version ?: "SNAPSHOT"
}

// the following block isn't working for me when placed in the top level build.gradle
startScripts {
        unixStartScriptGenerator.template = resources.text.fromFile("${project.rootDir}/buildSrc/src/main/resources/applicationStartScript.sh")
    
}

distZip {
    applicationDistribution.from( "${buildDir}/resources/VERSION" ) {
        into('.')
    }
}