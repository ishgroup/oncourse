public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {
  {{#vars}}{{#isEnum}}{{^isContainer}}

{{>enumClass}}{{/isContainer}}{{/isEnum}}{{#items.isEnum}}{{#items}}

{{^isContainer}}{{>enumClass}}{{/isContainer}}{{/items}}{{/items.isEnum}}
{{#isDateTime}}
    @com.fasterxml.jackson.annotation.JsonFormat(shape = com.fasterxml.jackson.annotation.JsonFormat.Shape.STRING, pattern = ish.oncourse.util.FormatUtils.DATE_FORMAT_ISO8601)
    @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer.class)
    @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.class)
{{/isDateTime}}
    private {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};{{/vars}}

  {{#vars}}
    /**
    {{#description}}
     * {{{description}}}
    {{/description}}
    {{^description}}
     * Get {{name}}
    {{/description}}
    {{#minimum}}
     * minimum: {{minimum}}
    {{/minimum}}
    {{#maximum}}
     * maximum: {{maximum}}
    {{/maximum}}
     * @return {{name}}
     */
    {{#vendorExtensions.extraAnnotation}}
    {{{vendorExtensions.extraAnnotation}}}
    {{/vendorExtensions.extraAnnotation}}
    public {{{datatypeWithEnum}}} {{getter}}() {
        return {{name}};
    }

    {{^isReadOnly}}
    public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
       this.{{name}} = {{name}};
    }

    public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
      this.{{name}} = {{name}};
      return this;
    }
    {{#isListContainer}}

    public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {
      this.{{name}}.add({{name}}Item);
      return this;
    }
    {{/isListContainer}}
    {{#isMapContainer}}

    public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {
      this.{{name}}.put(key, {{name}}Item);
      return this;
    }
    {{/isMapContainer}}
    {{/isReadOnly}}

    {{/vars}}

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder();
      sb.append("class {{classname}} {\n");
      {{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
      {{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
      {{/vars}}sb.append("}");
      return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o) {
      if (o == null) {
        return "null";
      }
      return o.toString().replace("\n", "\n    ");
    }
}
