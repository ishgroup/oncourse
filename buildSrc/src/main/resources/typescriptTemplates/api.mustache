{{>licenseInfo}}

export const createStringEnum = <T extends string>(o: Array<T>): {[K in T]: K} => {
    return o.reduce((res, key) => {
        res[key] = key;
        return res;
    }, Object.create(null));
};

{{#models}}
    {{#model}}{{#isEnum}}{{>modelEnum}}{{/isEnum}}{{^isEnum}}{{>modelGeneric}}{{/isEnum}}{{/model}}
{{/models}}


{{#apiInfo}}

{{#apis}}

export class {{classname}} {
    constructor(private http: any) {
    }

    {{#operations}}

    {{#operation}}
    {{operationId}}({{#allParams}}{{paramName}}: {{{dataType}}}{{^-last}}, {{/-last}}{{/allParams}}): Promise<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}any{{/returnType}}> {
        return this.http.{{httpMethod}}(`{{path}}`{{#bodyParams}}, {{paramName}}{{/bodyParams}}{{#queryParams}}, { params: { {{paramName}} }}{{/queryParams}});
    }
    {{/operation}}

    {{/operations}}
}

{{/apis}}

{{/apiInfo}}