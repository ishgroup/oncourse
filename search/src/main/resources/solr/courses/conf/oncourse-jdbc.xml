<?xml version="1.0" encoding="UTF-8" ?>
<dataConfig>

	<dataSource name="onCourseDS" type="JdbcDataSource"
		jndiName="java:comp/env/jdbc/oncourse" />
		
	<document>
		<entity name="course" dataSource="onCourseDS"
			query="select c.id, 'course' as type, c.name, c.detail, c.code, c.collegeId, (select IFNULL(min(s.startDate), DATE('2625-12-31')) from CourseClass cc inner join Session s on s.courseClassId=cc.id where cc.courseId=c.id and cc.isWebVisible=1 and s.startDate &gt; CURDATE()) as startDate, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc, s.suburb as sb, s.postcode as pc  from Course c 
				   left join CourseClass cc on c.id=cc.courseId
				   left join Room r on cc.roomId=r.id 
				   inner join Site s on r.siteId=s.id where c.isWebVisible=1 union
				   select c.id, 'course' as type, c.name, c.detail, c.code, c.collegeId, (select IFNULL(min(s.startDate), DATE('2625-12-31')) from CourseClass cc inner join Session s on s.courseClassId=cc.id where cc.courseId=c.id and cc.isWebVisible=1 and s.startDate &gt; CURDATE()) as startDate, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc, s.suburb as sb, s.postcode as pc from Course c 
				   left join CourseClass cc on c.id=cc.courseId
				   left join Session ss on ss.courseClassId=cc.id
				   left join Room r on ss.roomId=r.id
				   inner join Site s on r.siteId=s.id where c.isWebVisible=1"
			deltaImportQuery="select c.id, 'course' as type, c.name, c.detail, c.code, c.collegeId, (select IFNULL(min(s.startDate), DATE('2625-12-31')) from CourseClass cc inner join Session s on s.courseClassId=cc.id where cc.courseId=c.id and cc.isWebVisible=1 and s.startDate &gt; CURDATE()) as startDate, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc, s.suburb as sb, s.postcode as pc  from Course c 
				   left join CourseClass cc on c.id=cc.courseId
				   left join Room r on cc.roomId=r.id 
				   inner join Site s on r.siteId=s.id where c.id='${dataimporter.delta.id}' union
				   select c.id, 'course' as type, c.name, c.detail, c.code, c.collegeId, (select IFNULL(min(s.startDate), DATE('2625-12-31')) from CourseClass cc inner join Session s on s.courseClassId=cc.id where cc.courseId=c.id and cc.isWebVisible=1 and s.startDate &gt; CURDATE()) as startDate, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc, s.suburb as sb, s.postcode as pc from Course c 
				   left join CourseClass cc on c.id=cc.courseId
				   left join Session ss on ss.courseClassId=cc.id
				   left join Room r on ss.roomId=r.id
				   inner join Site s on r.siteId=s.id where c.id='${dataimporter.delta.id}'"
			deltaQuery="select c.id from Site s inner join Room r on r.siteId=s.id inner join CourseClass cc on cc.roomId=s.id inner join Course c on c.id=cc.courseId where c.isWebVisible=1 and s.modified &gt; '${dataimporter.last_index_time}' union 
						select c.id from Site s inner join Room r on r.siteId=s.id inner join Session ss on ss.roomId=r.id inner join CourseClass cc on ss.courseClassId=cc.id inner join Course c on c.id=cc.courseId where c.isWebVisible=1 and s.modified &gt; '${dataimporter.last_index_time}'  union
						select c.id from Course c where c.isWebVisible=1 and c.modified &gt; '${dataimporter.last_index_time}'"
			pk="id" transformer="HTMLStripTransformer">

			<field name="id" column="id" />
			<field name="doctype" column="type" />
			<field name="name" column="name" />
			<field name="detail" column="detail" stripHTML="true" />
			<field name="course_code" column="code" />
			<field name="collegeId" column="collegeId" />
			<field name="startDate" column="startDate" />
			<field name="course_loc" column="loc" />
			<field name="course_postcode" column="pc" />
			<field name="course_suburb" column="sb" />

			<entity name="courseClass" pk="id" dataSource="onCourseDS"  transformer="TemplateTransformer"
				query="select cc.id as id, cc.feeExGst as pr, cc.code as code, cc.endDate as end from CourseClass cc 
							where cc.isWebVisible=1 
									and cc.courseid='${course.id}'
                       				and cc.isCancelled=0 and cc.endDate &gt; CURDATE()"
				deltaImportQuery="select cc.id as id, cc.feeExGst as pr from CourseClass cc where cc.id='${dataimporter.delta.id}'"
				deltaQuery="select id from CourseClass where isWebVisible=1 and modified &gt; '${dataimporter.last_index_time}' or endDate &lt; CURDATE()"
				parentDeltaQuery="select id from Course where id='{courseClass.courseId}'"
				deletedPkQuery="select id from CourseClass where endDate &lt; CURDATE()">
				
				<field name="id" column="id" />
				<field name="price" column="pr" />
				<field name="class_code" column="code" template="${course.code}\-${courseClass.code}"/>
				<field name="end" column="end"/>
				
				<entity name="contact" dataSource="onCourseDS" pk="id"
					transformer="RegexTransformer"
					query="select  ct.id as id, ct.givenName as gvName, ct.familyName as fmName from Contact ct
                	    inner join Tutor t on ct.tutorId = t.id
           				inner join TutorRole tr on t.id = tr.tutorId
           				where tr.courseClassId='${courseClass.id}'"
					deltaImportQuery="select  ct.id as id, ct.givenName as gvName, ct.familyName as fmName from Contact ct where ct.id='${dataimporter.delta.id}'"
					deltaQuery="select ct.id from Contact ct where ct.modified &gt; '${dataimporter.last_index_time}'" 
					parentDeltaQuery="select cc.id from Contact ct 
						inner join Tutor t on ct.tutorId = t.id
    	       			inner join TutorRole tr on t.id = tr.tutorId
    	       			inner join CourseClass cc on tr.courseClassId = cc.id
        	   			where ct.id='${contact.id}'" processor="CachedSqlEntityProcessor">
					<field name="id" column="id" />
					<field name="gvName" column="gvName"/>
					<field name="fmName" column="fmName"/>
					<field name="tutor" column="TUTOR" regex="^(.*)$" replaceWith="$1 ${contact.fmName}" sourceColName="gvName" /> 
				</entity>
			
				<entity name="course_session" dataSource="onCourseDS" pk="id" transformer="TemplateTransformer"
					query="select distinct lower(dayname(s.startDate)) as dayName, IF(DAYOFWEEK(s.startDate) in (1,7), 'weekend', 'weekday') as dayType, 
							IF(HOUR(s.startDate) &gt; 6 and HOUR(s.startDate) &lt; 17, 'day', 'evening') as time from Session s
                				where s.courseClassId='${courseClass.id}'"
                	deltaImportQuery="select s.id as id, lower(dayname(s.startDate)) as dayName, IF(DAYOFWEEK(s.startDate) in (1,7), 'weekend', 'weekday') as dayType, 
                					IF(HOUR(s.startDate) &gt; 6 and HOUR(s.startDate) &lt; 17, 'day', 'evening') as time,
                					 s.endDate as end from Session s where s.id='${dataimporter.delta.id}'"
					deltaQuery="select id from Session where modified &gt; '${dataimporter.last_index_time}'" 
					parentDeltaQuery="select cc.id as id from Session s inner join CourseClass cc on s.courseClassId = cc.id where s.id='${course_session.id}'">
					<field name="id" column="id"/>
					<field name="dayName" column="dayName" />
					<field name="dayType" column="dayType" />
					<field name="time" column="time" />
					<field name="when" column="when" template="${course_session.dayName} ${course_session.dayType} ${course_session.time}"/>
				</entity>
		
			</entity>

			<entity name="coursetag" dataSource="onCourseDS" pk="id"
				query="select t.id as id, t.id as tagId from Tag t inner join TaggableTag tgt on tgt.tagId=t.id inner join Taggable tg on tgt.taggableId = tg.id where t.isWebVisible=1 and tg.entityIdentifier = 'Course' and tg.entityWillowId = '${course.id}'"
				deltaImportQuery="select t.id as id, t.id as tagId from Tag t where t.id='${dataimporter.delta.id}'"
				deltaQuery="select t.id as id from Tag t inner join TaggableTag tgt on tgt.tagId=t.id inner join Taggable tg on tgt.taggableId = tg.id where t.isWebVisible=1 and tg.entityIdentifier = 'Course' and t.modified &gt; '${dataimporter.last_index_time}' or tgt.modified &gt; '${dataimporter.last_index_time}' or tg.modified &gt; '${dataimporter.last_index_time}'" 
				parentDeltaQuery="select tg.id as id from Tag t inner join TaggableTag tgt on tgt.tagId=t.id inner join Taggable tg on tgt.taggableId = tg.id where t.id=${coursetag.id}" processor="CachedSqlEntityProcessor">
				<field name="id" column="id"/>
				<field name="tagId" column="tagId"/>
			</entity>
			
		</entity>
		
	</document>
</dataConfig>