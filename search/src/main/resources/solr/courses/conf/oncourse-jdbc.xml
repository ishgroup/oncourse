<?xml version="1.0" encoding="UTF-8" ?>
<dataConfig>

	<dataSource name="onCourseDS" type="JdbcDataSource"
		jndiName="java:comp/env/jdbc/oncourse" />
		
	<document>
		<entity name="course" dataSource="onCourseDS"
			query="select c.id, 'course' as type, c.name, c.detail, c.code, c.collegeId, (select IFNULL(min(s.startDate), IF(cc.isDistantLearningCourse=1, CURDATE(), DATE('2625-12-31'))) from CourseClass cc left join Session s on s.courseClassId=cc.id inner join (select cc1.id, count(s1.id) as cnt from CourseClass cc1 inner join Session s1 on s1.courseClassId=cc1.id where cc1.isWebVisible=1 and cc1.isCancelled=0 and s1.startDate &gt; CURDATE() group by cc1.id having cnt &gt; 0 union select cc3.id, 1 as cnt from CourseClass cc3 where cc3.isWebVisible=1 and cc3.isCancelled=0 and cc3.isDistantLearningCourse=1) as cc2 on cc2.id=cc.id where cc.courseId=c.id) as startDate from Course c where c.isWebVisible=1"
			deltaImportQuery="select c.id, 'course' as type, c.name, c.detail, c.code, c.collegeId, (select IFNULL(min(s.startDate), IF(cc.isDistantLearningCourse=1, CURDATE(), DATE('2625-12-31'))) from CourseClass cc left join Session s on s.courseClassId=cc.id inner join (select cc1.id, count(s1.id) as cnt from CourseClass cc1 inner join Session s1 on s1.courseClassId=cc1.id where cc1.isWebVisible=1 and cc1.isCancelled=0 and s1.startDate &gt; CURDATE() group by cc1.id having cnt &gt; 0 union select cc3.id, 1 as cnt from CourseClass cc3 where cc3.isWebVisible=1 and cc3.isCancelled=0 and cc3.isDistantLearningCourse=1) as cc2 on cc2.id=cc.id where cc.courseId=c.id) as startDate from Course c where c.id='${dataimporter.delta.id}'"
			deltaQuery="select c.id from Course c where c.isWebVisible=1 and c.modified &gt; '${dataimporter.last_index_time}'"
			pk="id" transformer="HTMLStripTransformer">

			<field name="id" column="id" />
			<field name="doctype" column="type" />
			<field name="name" column="name" />
			<field name="detail" column="detail" stripHTML="true" />
			<field name="course_code" column="code" />
			<field name="collegeId" column="collegeId" />
			<field name="startDate" column="startDate" />

			<entity name="courseClass" pk="id" dataSource="onCourseDS"  transformer="TemplateTransformer"
				query="select cc.id as id, cc.feeExGst as pr, cc.code as code, IFNULL(cc.endDate, DATE('2625-12-31')) as end, IFNULL(cc.startDate, CURDATE()) as start from CourseClass cc where cc.isWebVisible=1 and cc.courseid='${course.id}' and cc.isCancelled=0 and ((cc.endDate &gt; CURDATE() and cc.isDistantLearningCourse=0) or cc.isDistantLearningCourse=1)"
				deltaImportQuery="select cc.id as id, cc.feeExGst as pr, cc.code as code, IFNULL(cc.endDate, DATE('2625-12-31')) as end, IFNULL(cc.startDate, CURDATE()) as start from CourseClass cc where cc.id='${dataimporter.delta.id}'"
				deltaQuery="select id from CourseClass where isWebVisible=1 and modified &gt; '${dataimporter.last_index_time}' or endDate &lt; CURDATE()"
				parentDeltaQuery="select id from Course where id='{courseClass.courseId}'"
				deletedPkQuery="select id from CourseClass where endDate &lt; CURDATE()">
				<field name="id" column="id" />
				<field name="price" column="pr" />
				<field name="class_code" column="code" template="${course.code}\-${courseClass.code}"/>
				<field name="end" column="end"/>
                <field name="class_start" column="start"/>

                <entity name="contact" dataSource="onCourseDS" pk="id"
					transformer="RegexTransformer"
					query="select ct.id as id, ct.givenName as gvName, ct.familyName as fmName from Contact ct
                	    inner join Tutor t on ct.tutorId = t.id
           				inner join TutorRole tr on t.id = tr.tutorId
           				where tr.courseClassId='${courseClass.id}'"
					deltaImportQuery="select ct.id as id, ct.givenName as gvName, ct.familyName as fmName from
					    Contact ct where ct.id='${dataimporter.delta.id}'"
					deltaQuery="select ct.id from Contact ct where ct.modified &gt; '${dataimporter.last_index_time}'" 
					parentDeltaQuery="select cc.id from Contact ct 
						inner join Tutor t on ct.tutorId = t.id
    	       			inner join TutorRole tr on t.id = tr.tutorId
    	       			inner join CourseClass cc on tr.courseClassId = cc.id
        	   			where ct.id='${contact.id}'" processor="SqlEntityProcessor">
					<field name="id" column="id" />
					<field name="gvName" column="gvName"/>
					<field name="fmName" column="fmName"/>
					<field name="tutor" column="TUTOR" regex="^(.*)$" replaceWith="$1 ${contact.fmName}" sourceColName="gvName" /> 
				</entity>
			
				<entity name="course_session" dataSource="onCourseDS" pk="id" transformer="TemplateTransformer"
					query="select distinct lower(dayname(s.startDate)) as dayName, IF(DAYOFWEEK(s.startDate) in (1,7), 'weekend', 'weekday') as dayType,
							IF(HOUR(s.startDate) &gt; 6 and HOUR(s.startDate) &lt; 17, 'daytime', 'evening') as time from Session s
                				where s.courseClassId='${courseClass.id}'"
                	deltaImportQuery="select distinct lower(dayname(s.startDate)) as dayName, IF(DAYOFWEEK(s.startDate) in (1,7), 'weekend', 'weekday') as dayType,
							IF(HOUR(s.startDate) &gt; 6 and HOUR(s.startDate) &lt; 17, 'daytime', 'evening') as time from Session s
							    where s.id='${dataimporter.delta.id}'"
					deltaQuery="select id from Session where modified &gt; '${dataimporter.last_index_time}'" 
					parentDeltaQuery="select cc.id as id from Session s inner join CourseClass cc on s.courseClassId = cc.id where s.id='${course_session.id}'">
					<field name="id" column="id"/>
					<field name="dayName" column="dayName" />
					<field name="dayType" column="dayType" />
					<field name="time" column="time" />
					<field name="when" column="when" template="${course_session.dayName} ${course_session.dayType} ${course_session.time}"/>
				</entity>
				
				<entity name="site" dataSource="onCourseDS" pk="id"
					query="select s.id as id, s.suburb as sb, s.postcode as pc, lower(CONCAT(s.suburb, ' ', s.postcode)) as subpost, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc from Site s
            	        inner join Room r on r.siteId=s.id
                	    inner join CourseClass cc on cc.roomId=r.id
                    	where s.isWebVisible=1 and cc.id='${courseClass.id}'
                  		group by s.suburb, s.postcode
            		  union
            			select s.id as id, s.suburb as sb, s.postcode as pc, lower(CONCAT(s.suburb, ' ', s.postcode)) as subpost, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc from Site s
		            	inner join Room r on r.siteId=s.id
			            inner join Session ss on ss.roomId=r.id
			            inner join CourseClass cc on cc.id=ss.courseClassId
			            where s.isWebVisible=1 and cc.id='${courseClass.id}'
		    	        group by s.suburb, s.postcode"
					deltaImportQuery="select s.id as id, s.suburb as sb, s.postcode as pc, lower(CONCAT(s.suburb, ' ', s.postcode)) as subpost, CONCAT(CAST(s.latitude AS CHAR), ',', CAST(s.longitude AS CHAR)) as loc from Site s
					    where s.id='${dataimporter.delta.id}'"
					deltaQuery="select id from Site where isWebVisible=1 and modified &gt; '${dataimporter.last_index_time}'" 
					parentDeltaQuery="select cc.id from Site s 
						inner join Room r on r.siteId=s.id 
						inner join CourseClass cc on cc.roomId=r.id 
						where s.id='${site.id}' 
					  union 
					  	select cc.id from Site s 
					  	inner join Room r on r.siteId=s.id 
				  	inner join Session ss on ss.roomId=r.id
				  	inner join CourseClass cc on cc.id=ss.courseClassId
				  	where s.id='${site.id}'" processor="SqlEntityProcessor">
				  	
					<field name="id" column="id"/>
					<field name="course_loc" column="loc" />
					<field name="course_postcode" column="pc" />
					<field name="course_suburb" column="sb" />
				</entity>
			</entity>

			<entity name="coursetag" dataSource="onCourseDS" pk="id"
				query="select distinct t.id as id, t.id as tagId from Tag t
				    inner join TaggableTag tgt on tgt.tagId=t.id
				    inner join Taggable tg on tgt.taggableId = tg.id
				    where t.isWebVisible=1 and tg.entityIdentifier = 'Course' and tg.entityWillowId = '${course.id}'"
				deltaImportQuery="select distinct t.id as id, t.id as tagId from Tag t where t.id='${dataimporter.delta.id}'"
				deltaQuery="select distinct t.id as id from Tag t inner join TaggableTag tgt on tgt.tagId=t.id inner join Taggable tg on tgt.taggableId = tg.id where t.isWebVisible=1 and tg.entityIdentifier = 'Course' and t.modified &gt; '${dataimporter.last_index_time}' or tgt.modified &gt; '${dataimporter.last_index_time}' or tg.modified &gt; '${dataimporter.last_index_time}'" 
				parentDeltaQuery="select distinct tg.id as id from Tag t inner join TaggableTag tgt on tgt.tagId=t.id inner join Taggable tg on tgt.taggableId = tg.id where t.id=${coursetag.id}" processor="SqlEntityProcessor">
				<field name="id" column="id"/>
				<field name="tagId" column="tagId"/>
			</entity>
		</entity>
	</document>
</dataConfig>