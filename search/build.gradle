configurations {
	zookeeper
}

dependencies {
	testCompile project(':common:common-services')

	// The odd next line is to work around gradle pulling in the wrong configuration
	// http://forums.gradle.org/gradle/topics/transitive_libraries_not_included_through_project_dependency
	testCompile (project(path: ':common:common-test', configuration: 'testFixtures')) {
		exclude group: 'org.eclipse.jetty'
	}
	
	testCompile ('org.apache.solr:solr-test-framework:5.5.2') {
		exclude group: 'org.apache.hadoop'
	}
	testCompile ('org.apache.solr:solr-dataimporthandler:5.5.2') {
		exclude group: 'org.apache.hadoop'
	}

	testCompile 'com.vividsolutions:jts:1.13'
	testCompile 'org.apache.lucene:lucene-test-framework:5.5.2'
	testCompile 'mysql:mysql-connector-java:5.1.38'
	testCompile 'com.google.code.gson:gson:2.2.4'
	testCompile 'org.eclipse.jetty:jetty-jndi:9.2.13.v20150730'

	zookeeper 'org.apache.solr:solr-core:5.5.2'
}

test {
	if (project.hasProperty('searchTestDatabaseUri')) {
		systemProperty 'testDatabaseUri', searchTestDatabaseUri
		systemProperty 'testDatabaseDriver', searchTestDatabaseDriver
		systemProperty 'testCreateTables', searchTestCreateTables
	}
}

task deployConfig {
	description = 'Upload configuration to production zookeeper cluster.'
	file('src/main/resources/solr').eachDir { core ->
		doLast {
	      javaexec {
	      	classpath configurations.zookeeper
	        main = 'org.apache.solr.cloud.ZkCLI'
	        args = [
	        	"-confdir", core,
	        	"-zkhost", "splash.internal:2181",
	        	"-cmd", "upconfig",
	        	"-confname", core.name
	        ]
	      }
	    }
	}
}
