#!groovyâ€‹

pipeline {
    agent {
        label 'freebsd'
    }

    parameters {
        string(defaultValue: '', description: 'Release version. Leave blank to not release.', name: 'version')
    }

    stages {
        stage('Build') {
            steps {
                checkout([
                        $class: 'SubversionSCM',
                        browser: [$class: 'Phabricator', repo: 'C', url: 'https://reviews.ish.com.au/'],
                        filterChangelog: true,
                        ignoreDirPropChanges: false,
                        includedRegions: "/willow/trunk/search/.*",
                        locations: [[cancelProcessOnExternalsFail: false, credentialsId: '0886002b-eb7a-4824-b5c3-f4130b4b7c9e', depthOption: 'infinity', ignoreExternalsOption: false, local: '.', remote: 'https://svn.ish.com.au/ish/willow/trunk']],
                        quietOperation: true,
                        workspaceUpdater: [$class: 'UpdateUpdater']
                ])
                sh "./gradlew search:build -Dbuild_number=${env.BUILD_NUMBER} -PreleaseVersion=${params.version}"
            }
        }
        
        stage('Snapshot') {
            when {
                expression { params.version == '' }
            }
            steps {
                sh "./gradlew search:publishExecutablesPublicationToSnapshotsRepository -Dbuild_number=${env.BUILD_NUMBER} -PreleaseVersion=SNAPSHOT"                    
            }
        }

        stage('Create release') {
            when {
                expression { params.version != '' }
            }
            steps {
                script {
                    currentBuild.displayName = "Release ${params.version}"
                }
                sh "./gradlew search:publishExecutablesPublicationToExecutablesRepository -PreleaseVersion=${params.version}"
                sh "./gradlew createVersion -PreleaseVersion=\"${params.version} search\""
            }
        }
    }

    post {
        failure {
            mail(
                to: "development@ish.com.au",
                subject: "${currentBuild.result}: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: "Check console output at ${env.BUILD_URL}",
            )
        }
        unstable {
            mail(
                to: "development@ish.com.au",
                subject: "${currentBuild.result}: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: "Check console output at ${env.BUILD_URL}",
            )
        }
        success {

        }
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr:'30'))
        timeout(time: 60, unit: 'MINUTES')
    }
}