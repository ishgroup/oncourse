package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.exp.Property;

import ish.common.types.ApplicationStatus;
import ish.common.types.ConfirmationStatus;
import ish.common.types.PaymentSource;
import ish.math.Money;
import ish.oncourse.model.ApplicationCustomField;
import ish.oncourse.model.College;
import ish.oncourse.model.Course;
import ish.oncourse.model.ExpandableCayenneDataObject;
import ish.oncourse.model.Student;

/**
 * Class _Application was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Application extends ExpandableCayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ANGEL_ID_PROPERTY = "angelId";
    public static final String CONFIRMATION_STATUS_PROPERTY = "confirmationStatus";
    public static final String CREATED_PROPERTY = "created";
    public static final String ENROL_BY_PROPERTY = "enrolBy";
    public static final String FEE_OVERRIDE_PROPERTY = "feeOverride";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String REASON_PROPERTY = "reason";
    public static final String SOURCE_PROPERTY = "source";
    public static final String STATUS_PROPERTY = "status";
    public static final String COLLEGE_PROPERTY = "college";
    public static final String COURSE_PROPERTY = "course";
    public static final String CUSTOM_FIELDS_PROPERTY = "customFields";
    public static final String STUDENT_PROPERTY = "student";

    public static final String ID_PK_COLUMN = "id";

    public static final Property<Long> ANGEL_ID = Property.create("angelId", Long.class);
    public static final Property<ConfirmationStatus> CONFIRMATION_STATUS = Property.create("confirmationStatus", ConfirmationStatus.class);
    public static final Property<Date> CREATED = Property.create("created", Date.class);
    public static final Property<Date> ENROL_BY = Property.create("enrolBy", Date.class);
    public static final Property<Money> FEE_OVERRIDE = Property.create("feeOverride", Money.class);
    public static final Property<Date> MODIFIED = Property.create("modified", Date.class);
    public static final Property<String> REASON = Property.create("reason", String.class);
    public static final Property<PaymentSource> SOURCE = Property.create("source", PaymentSource.class);
    public static final Property<ApplicationStatus> STATUS = Property.create("status", ApplicationStatus.class);
    public static final Property<College> COLLEGE = Property.create("college", College.class);
    public static final Property<Course> COURSE = Property.create("course", Course.class);
    public static final Property<List<ApplicationCustomField>> CUSTOM_FIELDS = Property.create("customFields", List.class);
    public static final Property<Student> STUDENT = Property.create("student", Student.class);

    public void setAngelId(Long angelId) {
        writeProperty("angelId", angelId);
    }
    public Long getAngelId() {
        return (Long)readProperty("angelId");
    }

    public void setConfirmationStatus(ConfirmationStatus confirmationStatus) {
        writeProperty("confirmationStatus", confirmationStatus);
    }
    public ConfirmationStatus getConfirmationStatus() {
        return (ConfirmationStatus)readProperty("confirmationStatus");
    }

    public void setCreated(Date created) {
        writeProperty("created", created);
    }
    public Date getCreated() {
        return (Date)readProperty("created");
    }

    public void setEnrolBy(Date enrolBy) {
        writeProperty("enrolBy", enrolBy);
    }
    public Date getEnrolBy() {
        return (Date)readProperty("enrolBy");
    }

    public void setFeeOverride(Money feeOverride) {
        writeProperty("feeOverride", feeOverride);
    }
    public Money getFeeOverride() {
        return (Money)readProperty("feeOverride");
    }

    public void setModified(Date modified) {
        writeProperty("modified", modified);
    }
    public Date getModified() {
        return (Date)readProperty("modified");
    }

    public void setReason(String reason) {
        writeProperty("reason", reason);
    }
    public String getReason() {
        return (String)readProperty("reason");
    }

    public void setSource(PaymentSource source) {
        writeProperty("source", source);
    }
    public PaymentSource getSource() {
        return (PaymentSource)readProperty("source");
    }

    public void setStatus(ApplicationStatus status) {
        writeProperty("status", status);
    }
    public ApplicationStatus getStatus() {
        return (ApplicationStatus)readProperty("status");
    }

    public void setCollege(College college) {
        setToOneTarget("college", college, true);
    }

    public College getCollege() {
        return (College)readProperty("college");
    }


    public void setCourse(Course course) {
        setToOneTarget("course", course, true);
    }

    public Course getCourse() {
        return (Course)readProperty("course");
    }


    public void addToCustomFields(ApplicationCustomField obj) {
        addToManyTarget("customFields", obj, true);
    }
    public void removeFromCustomFields(ApplicationCustomField obj) {
        removeToManyTarget("customFields", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ApplicationCustomField> getCustomFields() {
        return (List<ApplicationCustomField>)readProperty("customFields");
    }


    public void setStudent(Student student) {
        setToOneTarget("student", student, true);
    }

    public Student getStudent() {
        return (Student)readProperty("student");
    }


    protected abstract void onPostAdd();

}
