package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.exp.Property;

import ish.common.types.ClassFundingSource;
import ish.common.types.ConfirmationStatus;
import ish.common.types.CreditLevel;
import ish.common.types.CreditProviderType;
import ish.common.types.CreditType;
import ish.common.types.EnrolmentStatus;
import ish.common.types.EnrolmentVETFeeHelpStatus;
import ish.common.types.PaymentSource;
import ish.common.types.RecognitionOfPriorLearningIndicator;
import ish.common.types.StudentStatusForUnitOfStudy;
import ish.math.Money;
import ish.oncourse.model.AssessmentSubmission;
import ish.oncourse.model.College;
import ish.oncourse.model.CourseClass;
import ish.oncourse.model.EnrolmentCustomField;
import ish.oncourse.model.ExpandableCayenneDataObject;
import ish.oncourse.model.InvoiceLine;
import ish.oncourse.model.Outcome;
import ish.oncourse.model.Student;
import ish.oncourse.model.Survey;

/**
 * Class _Enrolment was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Enrolment extends ExpandableCayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ANGEL_ID_PROPERTY = "angelId";
    public static final String CONFIRMATION_STATUS_PROPERTY = "confirmationStatus";
    public static final String CREATED_PROPERTY = "created";
    public static final String CREDIT_FOEID_PROPERTY = "creditFOEId";
    public static final String CREDIT_LEVEL_PROPERTY = "creditLevel";
    public static final String CREDIT_OFFERED_VALUE_PROPERTY = "creditOfferedValue";
    public static final String CREDIT_PROVIDER_PROPERTY = "creditProvider";
    public static final String CREDIT_PROVIDER_TYPE_PROPERTY = "creditProviderType";
    public static final String CREDIT_TOTAL_PROPERTY = "creditTotal";
    public static final String CREDIT_TYPE_PROPERTY = "creditType";
    public static final String CREDIT_USED_VALUE_PROPERTY = "creditUsedValue";
    public static final String FEE_HELP_AMOUNT_PROPERTY = "feeHelpAmount";
    public static final String FEE_HELP_STATUS_PROPERTY = "feeHelpStatus";
    public static final String FEE_STATUS_PROPERTY = "feeStatus";
    public static final String FUNDING_SOURCE_PROPERTY = "fundingSource";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String REASON_FOR_STUDY_PROPERTY = "reasonForStudy";
    public static final String SOURCE_PROPERTY = "source";
    public static final String STATUS_PROPERTY = "status";
    public static final String ASSESSMENT_SUBMISSIONS_PROPERTY = "assessmentSubmissions";
    public static final String COLLEGE_PROPERTY = "college";
    public static final String COURSE_CLASS_PROPERTY = "courseClass";
    public static final String CUSTOM_FIELDS_PROPERTY = "customFields";
    public static final String INVOICE_LINES_PROPERTY = "invoiceLines";
    public static final String OUTCOMES_PROPERTY = "outcomes";
    public static final String STUDENT_PROPERTY = "student";
    public static final String SURVEYS_PROPERTY = "surveys";

    public static final String ID_PK_COLUMN = "id";

    public static final Property<Long> ANGEL_ID = Property.create("angelId", Long.class);
    public static final Property<ConfirmationStatus> CONFIRMATION_STATUS = Property.create("confirmationStatus", ConfirmationStatus.class);
    public static final Property<Date> CREATED = Property.create("created", Date.class);
    public static final Property<String> CREDIT_FOEID = Property.create("creditFOEId", String.class);
    public static final Property<CreditLevel> CREDIT_LEVEL = Property.create("creditLevel", CreditLevel.class);
    public static final Property<String> CREDIT_OFFERED_VALUE = Property.create("creditOfferedValue", String.class);
    public static final Property<String> CREDIT_PROVIDER = Property.create("creditProvider", String.class);
    public static final Property<CreditProviderType> CREDIT_PROVIDER_TYPE = Property.create("creditProviderType", CreditProviderType.class);
    public static final Property<RecognitionOfPriorLearningIndicator> CREDIT_TOTAL = Property.create("creditTotal", RecognitionOfPriorLearningIndicator.class);
    public static final Property<CreditType> CREDIT_TYPE = Property.create("creditType", CreditType.class);
    public static final Property<String> CREDIT_USED_VALUE = Property.create("creditUsedValue", String.class);
    public static final Property<Money> FEE_HELP_AMOUNT = Property.create("feeHelpAmount", Money.class);
    public static final Property<EnrolmentVETFeeHelpStatus> FEE_HELP_STATUS = Property.create("feeHelpStatus", EnrolmentVETFeeHelpStatus.class);
    public static final Property<StudentStatusForUnitOfStudy> FEE_STATUS = Property.create("feeStatus", StudentStatusForUnitOfStudy.class);
    public static final Property<ClassFundingSource> FUNDING_SOURCE = Property.create("fundingSource", ClassFundingSource.class);
    public static final Property<Date> MODIFIED = Property.create("modified", Date.class);
    public static final Property<Integer> REASON_FOR_STUDY = Property.create("reasonForStudy", Integer.class);
    public static final Property<PaymentSource> SOURCE = Property.create("source", PaymentSource.class);
    public static final Property<EnrolmentStatus> STATUS = Property.create("status", EnrolmentStatus.class);
    public static final Property<List<AssessmentSubmission>> ASSESSMENT_SUBMISSIONS = Property.create("assessmentSubmissions", List.class);
    public static final Property<College> COLLEGE = Property.create("college", College.class);
    public static final Property<CourseClass> COURSE_CLASS = Property.create("courseClass", CourseClass.class);
    public static final Property<List<EnrolmentCustomField>> CUSTOM_FIELDS = Property.create("customFields", List.class);
    public static final Property<List<InvoiceLine>> INVOICE_LINES = Property.create("invoiceLines", List.class);
    public static final Property<List<Outcome>> OUTCOMES = Property.create("outcomes", List.class);
    public static final Property<Student> STUDENT = Property.create("student", Student.class);
    public static final Property<List<Survey>> SURVEYS = Property.create("surveys", List.class);

    public void setAngelId(Long angelId) {
        writeProperty("angelId", angelId);
    }
    public Long getAngelId() {
        return (Long)readProperty("angelId");
    }

    public void setConfirmationStatus(ConfirmationStatus confirmationStatus) {
        writeProperty("confirmationStatus", confirmationStatus);
    }
    public ConfirmationStatus getConfirmationStatus() {
        return (ConfirmationStatus)readProperty("confirmationStatus");
    }

    public void setCreated(Date created) {
        writeProperty("created", created);
    }
    public Date getCreated() {
        return (Date)readProperty("created");
    }

    public void setCreditFOEId(String creditFOEId) {
        writeProperty("creditFOEId", creditFOEId);
    }
    public String getCreditFOEId() {
        return (String)readProperty("creditFOEId");
    }

    public void setCreditLevel(CreditLevel creditLevel) {
        writeProperty("creditLevel", creditLevel);
    }
    public CreditLevel getCreditLevel() {
        return (CreditLevel)readProperty("creditLevel");
    }

    public void setCreditOfferedValue(String creditOfferedValue) {
        writeProperty("creditOfferedValue", creditOfferedValue);
    }
    public String getCreditOfferedValue() {
        return (String)readProperty("creditOfferedValue");
    }

    public void setCreditProvider(String creditProvider) {
        writeProperty("creditProvider", creditProvider);
    }
    public String getCreditProvider() {
        return (String)readProperty("creditProvider");
    }

    public void setCreditProviderType(CreditProviderType creditProviderType) {
        writeProperty("creditProviderType", creditProviderType);
    }
    public CreditProviderType getCreditProviderType() {
        return (CreditProviderType)readProperty("creditProviderType");
    }

    public void setCreditTotal(RecognitionOfPriorLearningIndicator creditTotal) {
        writeProperty("creditTotal", creditTotal);
    }
    public RecognitionOfPriorLearningIndicator getCreditTotal() {
        return (RecognitionOfPriorLearningIndicator)readProperty("creditTotal");
    }

    public void setCreditType(CreditType creditType) {
        writeProperty("creditType", creditType);
    }
    public CreditType getCreditType() {
        return (CreditType)readProperty("creditType");
    }

    public void setCreditUsedValue(String creditUsedValue) {
        writeProperty("creditUsedValue", creditUsedValue);
    }
    public String getCreditUsedValue() {
        return (String)readProperty("creditUsedValue");
    }

    public void setFeeHelpAmount(Money feeHelpAmount) {
        writeProperty("feeHelpAmount", feeHelpAmount);
    }
    public Money getFeeHelpAmount() {
        return (Money)readProperty("feeHelpAmount");
    }

    public void setFeeHelpStatus(EnrolmentVETFeeHelpStatus feeHelpStatus) {
        writeProperty("feeHelpStatus", feeHelpStatus);
    }
    public EnrolmentVETFeeHelpStatus getFeeHelpStatus() {
        return (EnrolmentVETFeeHelpStatus)readProperty("feeHelpStatus");
    }

    public void setFeeStatus(StudentStatusForUnitOfStudy feeStatus) {
        writeProperty("feeStatus", feeStatus);
    }
    public StudentStatusForUnitOfStudy getFeeStatus() {
        return (StudentStatusForUnitOfStudy)readProperty("feeStatus");
    }

    public void setFundingSource(ClassFundingSource fundingSource) {
        writeProperty("fundingSource", fundingSource);
    }
    public ClassFundingSource getFundingSource() {
        return (ClassFundingSource)readProperty("fundingSource");
    }

    public void setModified(Date modified) {
        writeProperty("modified", modified);
    }
    public Date getModified() {
        return (Date)readProperty("modified");
    }

    public void setReasonForStudy(Integer reasonForStudy) {
        writeProperty("reasonForStudy", reasonForStudy);
    }
    public Integer getReasonForStudy() {
        return (Integer)readProperty("reasonForStudy");
    }

    public void setSource(PaymentSource source) {
        writeProperty("source", source);
    }
    public PaymentSource getSource() {
        return (PaymentSource)readProperty("source");
    }

    public void setStatus(EnrolmentStatus status) {
        writeProperty("status", status);
    }
    public EnrolmentStatus getStatus() {
        return (EnrolmentStatus)readProperty("status");
    }

    public void addToAssessmentSubmissions(AssessmentSubmission obj) {
        addToManyTarget("assessmentSubmissions", obj, true);
    }
    public void removeFromAssessmentSubmissions(AssessmentSubmission obj) {
        removeToManyTarget("assessmentSubmissions", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AssessmentSubmission> getAssessmentSubmissions() {
        return (List<AssessmentSubmission>)readProperty("assessmentSubmissions");
    }


    public void setCollege(College college) {
        setToOneTarget("college", college, true);
    }

    public College getCollege() {
        return (College)readProperty("college");
    }


    public void setCourseClass(CourseClass courseClass) {
        setToOneTarget("courseClass", courseClass, true);
    }

    public CourseClass getCourseClass() {
        return (CourseClass)readProperty("courseClass");
    }


    public void addToCustomFields(EnrolmentCustomField obj) {
        addToManyTarget("customFields", obj, true);
    }
    public void removeFromCustomFields(EnrolmentCustomField obj) {
        removeToManyTarget("customFields", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EnrolmentCustomField> getCustomFields() {
        return (List<EnrolmentCustomField>)readProperty("customFields");
    }


    public void addToInvoiceLines(InvoiceLine obj) {
        addToManyTarget("invoiceLines", obj, true);
    }
    public void removeFromInvoiceLines(InvoiceLine obj) {
        removeToManyTarget("invoiceLines", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<InvoiceLine> getInvoiceLines() {
        return (List<InvoiceLine>)readProperty("invoiceLines");
    }


    public void addToOutcomes(Outcome obj) {
        addToManyTarget("outcomes", obj, true);
    }
    public void removeFromOutcomes(Outcome obj) {
        removeToManyTarget("outcomes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Outcome> getOutcomes() {
        return (List<Outcome>)readProperty("outcomes");
    }


    public void setStudent(Student student) {
        setToOneTarget("student", student, true);
    }

    public Student getStudent() {
        return (Student)readProperty("student");
    }


    public void addToSurveys(Survey obj) {
        addToManyTarget("surveys", obj, true);
    }
    public void removeFromSurveys(Survey obj) {
        removeToManyTarget("surveys", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Survey> getSurveys() {
        return (List<Survey>)readProperty("surveys");
    }


    protected abstract void onPostAdd();

    protected abstract void onPrePersist();

}
