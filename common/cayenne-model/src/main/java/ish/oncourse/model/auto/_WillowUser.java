package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import ish.oncourse.model.Log;

/**
 * Class _WillowUser was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _WillowUser extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String CREATED_PROPERTY = "created";
    public static final String EMAIL_PROPERTY = "email";
    public static final String FAILED_LOGIN_COUNT_PROPERTY = "failedLoginCount";
    public static final String FIRST_NAME_PROPERTY = "firstName";
    public static final String IS_ACTIVE_PROPERTY = "isActive";
    public static final String LAST_FAILED_LOGIN_PROPERTY = "lastFailedLogin";
    public static final String LAST_LOGIN_PROPERTY = "lastLogin";
    public static final String LAST_NAME_PROPERTY = "lastName";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String PASSWORD_PROPERTY = "password";
    public static final String LOGS_PROPERTY = "logs";

    public static final String ID_PK_COLUMN = "id";

    public static final Property<Date> CREATED = Property.create("created", Date.class);
    public static final Property<String> EMAIL = Property.create("email", String.class);
    public static final Property<Integer> FAILED_LOGIN_COUNT = Property.create("failedLoginCount", Integer.class);
    public static final Property<String> FIRST_NAME = Property.create("firstName", String.class);
    public static final Property<Boolean> IS_ACTIVE = Property.create("isActive", Boolean.class);
    public static final Property<Date> LAST_FAILED_LOGIN = Property.create("lastFailedLogin", Date.class);
    public static final Property<Date> LAST_LOGIN = Property.create("lastLogin", Date.class);
    public static final Property<String> LAST_NAME = Property.create("lastName", String.class);
    public static final Property<Date> MODIFIED = Property.create("modified", Date.class);
    public static final Property<String> PASSWORD = Property.create("password", String.class);
    public static final Property<List<Log>> LOGS = Property.create("logs", List.class);

    public void setCreated(Date created) {
        writeProperty("created", created);
    }
    public Date getCreated() {
        return (Date)readProperty("created");
    }

    public void setEmail(String email) {
        writeProperty("email", email);
    }
    public String getEmail() {
        return (String)readProperty("email");
    }

    public void setFailedLoginCount(Integer failedLoginCount) {
        writeProperty("failedLoginCount", failedLoginCount);
    }
    public Integer getFailedLoginCount() {
        return (Integer)readProperty("failedLoginCount");
    }

    public void setFirstName(String firstName) {
        writeProperty("firstName", firstName);
    }
    public String getFirstName() {
        return (String)readProperty("firstName");
    }

    public void setIsActive(Boolean isActive) {
        writeProperty("isActive", isActive);
    }
    public Boolean getIsActive() {
        return (Boolean)readProperty("isActive");
    }

    public void setLastFailedLogin(Date lastFailedLogin) {
        writeProperty("lastFailedLogin", lastFailedLogin);
    }
    public Date getLastFailedLogin() {
        return (Date)readProperty("lastFailedLogin");
    }

    public void setLastLogin(Date lastLogin) {
        writeProperty("lastLogin", lastLogin);
    }
    public Date getLastLogin() {
        return (Date)readProperty("lastLogin");
    }

    public void setLastName(String lastName) {
        writeProperty("lastName", lastName);
    }
    public String getLastName() {
        return (String)readProperty("lastName");
    }

    public void setModified(Date modified) {
        writeProperty("modified", modified);
    }
    public Date getModified() {
        return (Date)readProperty("modified");
    }

    public void setPassword(String password) {
        writeProperty("password", password);
    }
    public String getPassword() {
        return (String)readProperty("password");
    }

    public void addToLogs(Log obj) {
        addToManyTarget("logs", obj, true);
    }
    public void removeFromLogs(Log obj) {
        removeToManyTarget("logs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Log> getLogs() {
        return (List<Log>)readProperty("logs");
    }


}
