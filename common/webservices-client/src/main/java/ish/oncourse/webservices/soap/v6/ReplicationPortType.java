package ish.oncourse.webservices.soap.v6;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2013-10-30T17:54:55.985+03:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://repl.v6.soap.webservices.oncourse.ish/", name = "ReplicationPortType")
@XmlSeeAlso({ish.oncourse.webservices.v6.stubs.replication.ObjectFactory.class})
public interface ReplicationPortType {

    @Oneway
    @RequestWrapper(localName = "confirmExecution", targetNamespace = "http://repl.v6.soap.webservices.oncourse.ish/", className = "ish.oncourse.webservices.v6.stubs.replication.ConfirmExecution")
    @WebMethod(action = "confirmExecution")
    public void confirmExecution(
        @WebParam(name = "id", targetNamespace = "")
        java.lang.Long id,
        @WebParam(name = "message", targetNamespace = "")
        java.lang.String message
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getUnreplicatedEntities", targetNamespace = "http://repl.v6.soap.webservices.oncourse.ish/", className = "ish.oncourse.webservices.v6.stubs.replication.GetUnreplicatedEntities")
    @WebMethod(action = "getUnreplicatedEntities")
    @ResponseWrapper(localName = "getUnreplicatedEntitiesResponse", targetNamespace = "http://repl.v6.soap.webservices.oncourse.ish/", className = "ish.oncourse.webservices.v6.stubs.replication.GetUnreplicatedEntitiesResponse")
    public java.util.List<ish.oncourse.webservices.v6.stubs.replication.UnreplicatedEntitiesStub> getUnreplicatedEntities();

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "parameters", targetNamespace = "", partName = "parameters")
    @WebMethod(action = "getRecords")
    public ish.oncourse.webservices.v6.stubs.replication.ReplicationRecords getRecords() throws ReplicationFault;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "numberUpdated", targetNamespace = "", partName = "numberUpdated")
    @WebMethod(action = "sendResults")
    public int sendResults(
        @WebParam(partName = "replResult", name = "replResult", targetNamespace = "")
        ish.oncourse.webservices.v6.stubs.replication.ReplicationResult replResult
    ) throws ReplicationFault;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getInstructions", targetNamespace = "http://repl.v6.soap.webservices.oncourse.ish/", className = "ish.oncourse.webservices.v6.stubs.replication.GetInstructions")
    @WebMethod(action = "getInstructions")
    @ResponseWrapper(localName = "getInstructionsResponse", targetNamespace = "http://repl.v6.soap.webservices.oncourse.ish/", className = "ish.oncourse.webservices.v6.stubs.replication.GetInstructionsResponse")
    public java.util.List<ish.oncourse.webservices.v6.stubs.replication.InstructionStub> getInstructions();

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "newCommunicationKey", targetNamespace = "", partName = "newCommunicationKey")
    @WebMethod(action = "authenticate")
    public long authenticate(
        @WebParam(partName = "securityCode", name = "securityCode", targetNamespace = "")
        java.lang.String securityCode,
        @WebParam(partName = "lastCommunicationKey", name = "lastCommunicationKey", targetNamespace = "")
        long lastCommunicationKey
    ) throws AuthFailure;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "result", targetNamespace = "", partName = "result")
    @WebMethod(action = "sendRecords")
    public ish.oncourse.webservices.v6.stubs.replication.ReplicationResult sendRecords(
        @WebParam(partName = "records", name = "records", targetNamespace = "")
        ish.oncourse.webservices.v6.stubs.replication.ReplicationRecords records
    ) throws ReplicationFault;
}
