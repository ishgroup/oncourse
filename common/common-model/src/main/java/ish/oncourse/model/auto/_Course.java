package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import ish.oncourse.model.Application;
import ish.oncourse.model.College;
import ish.oncourse.model.CourseClass;
import ish.oncourse.model.CourseCourseRelation;
import ish.oncourse.model.CourseModule;
import ish.oncourse.model.Qualification;
import ish.oncourse.model.WaitingList;

/**
 * Class _Course was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Course extends CayenneDataObject {

    public static final String ALLOW_WAITING_LIST_PROPERTY = "allowWaitingList";
    public static final String ANGEL_ID_PROPERTY = "angelId";
    public static final String CODE_PROPERTY = "code";
    public static final String CREATED_PROPERTY = "created";
    public static final String DETAIL_PROPERTY = "detail";
    public static final String DETAIL_TEXTILE_PROPERTY = "detailTextile";
    public static final String FIELD_OF_EDUCATION_PROPERTY = "fieldOfEducation";
    public static final String IS_SUFFICIENT_FOR_QUALIFICATION_PROPERTY = "isSufficientForQualification";
    public static final String IS_VETCOURSE_PROPERTY = "isVETCourse";
    public static final String IS_WEB_VISIBLE_PROPERTY = "isWebVisible";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String NAME_PROPERTY = "name";
    public static final String NOMINAL_HOURS_PROPERTY = "nominalHours";
    public static final String SEARCH_TEXT_PROPERTY = "searchText";
    public static final String APPLICATIONS_PROPERTY = "applications";
    public static final String COLLEGE_PROPERTY = "college";
    public static final String COURSE_CLASSES_PROPERTY = "courseClasses";
    public static final String COURSE_MODULES_PROPERTY = "courseModules";
    public static final String FROM_COURSES_PROPERTY = "fromCourses";
    public static final String QUALIFICATION_PROPERTY = "qualification";
    public static final String TO_COURSES_PROPERTY = "toCourses";
    public static final String WAITING_LISTS_PROPERTY = "waitingLists";

    public static final String ID_PK_COLUMN = "id";

    public void setAllowWaitingList(Boolean allowWaitingList) {
        writeProperty(ALLOW_WAITING_LIST_PROPERTY, allowWaitingList);
    }
    public Boolean getAllowWaitingList() {
        return (Boolean)readProperty(ALLOW_WAITING_LIST_PROPERTY);
    }

    public void setAngelId(Long angelId) {
        writeProperty(ANGEL_ID_PROPERTY, angelId);
    }
    public Long getAngelId() {
        return (Long)readProperty(ANGEL_ID_PROPERTY);
    }

    public void setCode(String code) {
        writeProperty(CODE_PROPERTY, code);
    }
    public String getCode() {
        return (String)readProperty(CODE_PROPERTY);
    }

    public void setCreated(Date created) {
        writeProperty(CREATED_PROPERTY, created);
    }
    public Date getCreated() {
        return (Date)readProperty(CREATED_PROPERTY);
    }

    public void setDetail(String detail) {
        writeProperty(DETAIL_PROPERTY, detail);
    }
    public String getDetail() {
        return (String)readProperty(DETAIL_PROPERTY);
    }

    public void setDetailTextile(String detailTextile) {
        writeProperty(DETAIL_TEXTILE_PROPERTY, detailTextile);
    }
    public String getDetailTextile() {
        return (String)readProperty(DETAIL_TEXTILE_PROPERTY);
    }

    public void setFieldOfEducation(String fieldOfEducation) {
        writeProperty(FIELD_OF_EDUCATION_PROPERTY, fieldOfEducation);
    }
    public String getFieldOfEducation() {
        return (String)readProperty(FIELD_OF_EDUCATION_PROPERTY);
    }

    public void setIsSufficientForQualification(Boolean isSufficientForQualification) {
        writeProperty(IS_SUFFICIENT_FOR_QUALIFICATION_PROPERTY, isSufficientForQualification);
    }
    public Boolean getIsSufficientForQualification() {
        return (Boolean)readProperty(IS_SUFFICIENT_FOR_QUALIFICATION_PROPERTY);
    }

    public void setIsVETCourse(Boolean isVETCourse) {
        writeProperty(IS_VETCOURSE_PROPERTY, isVETCourse);
    }
    public Boolean getIsVETCourse() {
        return (Boolean)readProperty(IS_VETCOURSE_PROPERTY);
    }

    public void setIsWebVisible(Boolean isWebVisible) {
        writeProperty(IS_WEB_VISIBLE_PROPERTY, isWebVisible);
    }
    public Boolean getIsWebVisible() {
        return (Boolean)readProperty(IS_WEB_VISIBLE_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setNominalHours(Float nominalHours) {
        writeProperty(NOMINAL_HOURS_PROPERTY, nominalHours);
    }
    public Float getNominalHours() {
        return (Float)readProperty(NOMINAL_HOURS_PROPERTY);
    }

    public void setSearchText(String searchText) {
        writeProperty(SEARCH_TEXT_PROPERTY, searchText);
    }
    public String getSearchText() {
        return (String)readProperty(SEARCH_TEXT_PROPERTY);
    }

    public void addToApplications(Application obj) {
        addToManyTarget(APPLICATIONS_PROPERTY, obj, true);
    }
    public void removeFromApplications(Application obj) {
        removeToManyTarget(APPLICATIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Application> getApplications() {
        return (List<Application>)readProperty(APPLICATIONS_PROPERTY);
    }


    public void setCollege(College college) {
        setToOneTarget(COLLEGE_PROPERTY, college, true);
    }

    public College getCollege() {
        return (College)readProperty(COLLEGE_PROPERTY);
    }


    public void addToCourseClasses(CourseClass obj) {
        addToManyTarget(COURSE_CLASSES_PROPERTY, obj, true);
    }
    public void removeFromCourseClasses(CourseClass obj) {
        removeToManyTarget(COURSE_CLASSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CourseClass> getCourseClasses() {
        return (List<CourseClass>)readProperty(COURSE_CLASSES_PROPERTY);
    }


    public void addToCourseModules(CourseModule obj) {
        addToManyTarget(COURSE_MODULES_PROPERTY, obj, true);
    }
    public void removeFromCourseModules(CourseModule obj) {
        removeToManyTarget(COURSE_MODULES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CourseModule> getCourseModules() {
        return (List<CourseModule>)readProperty(COURSE_MODULES_PROPERTY);
    }


    public void addToFromCourses(CourseCourseRelation obj) {
        addToManyTarget(FROM_COURSES_PROPERTY, obj, true);
    }
    public void removeFromFromCourses(CourseCourseRelation obj) {
        removeToManyTarget(FROM_COURSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CourseCourseRelation> getFromCourses() {
        return (List<CourseCourseRelation>)readProperty(FROM_COURSES_PROPERTY);
    }


    public void setQualification(Qualification qualification) {
        setToOneTarget(QUALIFICATION_PROPERTY, qualification, true);
    }

    public Qualification getQualification() {
        return (Qualification)readProperty(QUALIFICATION_PROPERTY);
    }


    public void addToToCourses(CourseCourseRelation obj) {
        addToManyTarget(TO_COURSES_PROPERTY, obj, true);
    }
    public void removeFromToCourses(CourseCourseRelation obj) {
        removeToManyTarget(TO_COURSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CourseCourseRelation> getToCourses() {
        return (List<CourseCourseRelation>)readProperty(TO_COURSES_PROPERTY);
    }


    public void addToWaitingLists(WaitingList obj) {
        addToManyTarget(WAITING_LISTS_PROPERTY, obj, true);
    }
    public void removeFromWaitingLists(WaitingList obj) {
        removeToManyTarget(WAITING_LISTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WaitingList> getWaitingLists() {
        return (List<WaitingList>)readProperty(WAITING_LISTS_PROPERTY);
    }


}
