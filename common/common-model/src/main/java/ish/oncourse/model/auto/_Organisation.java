package ish.oncourse.model.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _Organisation was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Organisation extends CayenneDataObject {

    public static final String CODE_PROPERTY = "code";
    public static final String CREATED_PROPERTY = "created";
    public static final String HAS_ACTIVE_REGISTRATION_PROPERTY = "hasActiveRegistration";
    public static final String LEGAL_PERSON_NAME_PROPERTY = "legalPersonName";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String TRADING_NAME_PROPERTY = "tradingName";

    public static final String ID_PK_COLUMN = "id";

    public void setCode(String code) {
        writeProperty(CODE_PROPERTY, code);
    }
    public String getCode() {
        return (String)readProperty(CODE_PROPERTY);
    }

    public void setCreated(Date created) {
        writeProperty(CREATED_PROPERTY, created);
    }
    public Date getCreated() {
        return (Date)readProperty(CREATED_PROPERTY);
    }

    public void setHasActiveRegistration(Boolean hasActiveRegistration) {
        writeProperty(HAS_ACTIVE_REGISTRATION_PROPERTY, hasActiveRegistration);
    }
    public Boolean getHasActiveRegistration() {
        return (Boolean)readProperty(HAS_ACTIVE_REGISTRATION_PROPERTY);
    }

    public void setLegalPersonName(String legalPersonName) {
        writeProperty(LEGAL_PERSON_NAME_PROPERTY, legalPersonName);
    }
    public String getLegalPersonName() {
        return (String)readProperty(LEGAL_PERSON_NAME_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setTradingName(String tradingName) {
        writeProperty(TRADING_NAME_PROPERTY, tradingName);
    }
    public String getTradingName() {
        return (String)readProperty(TRADING_NAME_PROPERTY);
    }

}
