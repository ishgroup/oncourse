package ish.oncourse.model.auto;

import ish.oncourse.model.*;
import org.apache.cayenne.CayenneDataObject;

import java.util.Date;
import java.util.List;

/**
 * Class _College was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _College extends CayenneDataObject {

    public static final String ANGEL_VERSION_PROPERTY = "angelVersion";
    public static final String BILLING_CODE_PROPERTY = "billingCode";
    public static final String COMMUNICATION_KEY_PROPERTY = "communicationKey";
    public static final String COMMUNICATION_KEY_STATUS_PROPERTY = "communicationKeyStatus";
    public static final String CREATED_PROPERTY = "created";
    public static final String FIRST_REMOTE_AUTHENTICATION_PROPERTY = "firstRemoteAuthentication";
    public static final String IP_ADDRESS_PROPERTY = "ipAddress";
    public static final String IS_TESTING_WEB_SERVICE_PAYMENTS_PROPERTY = "isTestingWebServicePayments";
    public static final String IS_TESTING_WEB_SITE_PAYMENTS_PROPERTY = "isTestingWebSitePayments";
    public static final String IS_WEB_SERVICE_PAYMENTS_ENABLED_PROPERTY = "isWebServicePaymentsEnabled";
    public static final String IS_WEB_SITE_PAYMENTS_ENABLED_PROPERTY = "isWebSitePaymentsEnabled";
    public static final String LAST_REMOTE_AUTHENTICATION_PROPERTY = "lastRemoteAuthentication";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String NAME_PROPERTY = "name";
    public static final String PAYMENT_GATEWAY_ACCOUNT_PROPERTY = "paymentGatewayAccount";
    public static final String PAYMENT_GATEWAY_PASS_PROPERTY = "paymentGatewayPass";
    public static final String REQUIRES_AVETMISS_PROPERTY = "requiresAvetmiss";
    public static final String TIME_ZONE_PROPERTY = "timeZone";
    public static final String WEB_SERVICES_SECURITY_CODE_PROPERTY = "webServicesSecurityCode";
    public static final String ATTENDANCES_PROPERTY = "attendances";
    public static final String BINARY_INFO_RELATIONS_PROPERTY = "binaryInfoRelations";
    public static final String BINARY_INFOS_PROPERTY = "binaryInfos";
    public static final String CERTIFICATE_OUTCOMES_PROPERTY = "certificateOutcomes";
    public static final String CERTIFICATES_PROPERTY = "certificates";
    public static final String COLLEGE_DOMAINS_PROPERTY = "collegeDomains";
    public static final String CONCESSION_TYPES_PROPERTY = "concessionTypes";
    public static final String CONTACT_RELATION_TYPES_PROPERTY = "contactRelationTypes";
    public static final String CONTACT_RELATIONS_PROPERTY = "contactRelations";
    public static final String CONTACTS_PROPERTY = "contacts";
    public static final String COURSE_CLASSES_PROPERTY = "courseClasses";
    public static final String COURSE_MODULES_PROPERTY = "courseModules";
    public static final String COURSES_PROPERTY = "courses";
    public static final String DISCOUNT_CONCESSION_TYPES_PROPERTY = "discountConcessionTypes";
    public static final String DISCOUNT_COURSE_CLASSES_PROPERTY = "discountCourseClasses";
    public static final String DISCOUNT_MEMBERSHIP_RELATION_TYPES_PROPERTY = "discountMembershipRelationTypes";
    public static final String DISCOUNT_MEMBERSHIPS_PROPERTY = "discountMemberships";
    public static final String DISCOUNTS_PROPERTY = "discounts";
    public static final String ENROLMENTS_PROPERTY = "enrolments";
    public static final String INSTRUCTIONS_PROPERTY = "instructions";
    public static final String INVOICE_LINE_DISCOUNTS_PROPERTY = "invoiceLineDiscounts";
    public static final String INVOICE_LINES_PROPERTY = "invoiceLines";
    public static final String INVOICES_PROPERTY = "invoices";
    public static final String LICENSE_FEES_PROPERTY = "licenseFees";
    public static final String LOGS_PROPERTY = "logs";
    public static final String MESSAGE_PEOPLE_PROPERTY = "messagePeople";
    public static final String MESSAGE_TEMPLATES_PROPERTY = "messageTemplates";
    public static final String MESSAGES_PROPERTY = "messages";
    public static final String NOTIFICATION_TEMPLATES_PROPERTY = "notificationTemplates";
    public static final String OUTCOMES_PROPERTY = "outcomes";
    public static final String PAYMENT_IN_LINES_PROPERTY = "paymentInLines";
    public static final String PAYMENTS_IN_PROPERTY = "paymentsIn";
    public static final String PAYMENTS_OUT_PROPERTY = "paymentsOut";
    public static final String PREFERENCES_PROPERTY = "preferences";
    public static final String PRODUCT_ITEMS_PROPERTY = "productItems";
    public static final String PRODUCTS_PROPERTY = "products";
    public static final String QUEUED_RECORDS_PROPERTY = "queuedRecords";
    public static final String QUEUED_TRANSACTIONS_PROPERTY = "queuedTransactions";
    public static final String ROOMS_PROPERTY = "rooms";
    public static final String SESSION_TUTORS_PROPERTY = "sessionTutors";
    public static final String SESSIONS_PROPERTY = "sessions";
    public static final String SITES_PROPERTY = "sites";
    public static final String STUDENT_CONCESSIONS_PROPERTY = "studentConcessions";
    public static final String STUDENTS_PROPERTY = "students";
    public static final String TAG_GROUP_REQUIREMENTS_PROPERTY = "tagGroupRequirements";
    public static final String TAGGABLE_TAGS_PROPERTY = "taggableTags";
    public static final String TAGGABLES_PROPERTY = "taggables";
    public static final String TAGS_PROPERTY = "tags";
    public static final String TUTOR_ROLES_PROPERTY = "tutorRoles";
    public static final String TUTORS_PROPERTY = "tutors";
    public static final String WAITING_LIST_SITES_PROPERTY = "waitingListSites";
    public static final String WAITING_LISTS_PROPERTY = "waitingLists";
    public static final String WEB_SITES_PROPERTY = "webSites";
    public static final String WILLOW_USERS_PROPERTY = "willowUsers";

    public static final String ID_PK_COLUMN = "id";

    public void setAngelVersion(String angelVersion) {
        writeProperty(ANGEL_VERSION_PROPERTY, angelVersion);
    }
    public String getAngelVersion() {
        return (String)readProperty(ANGEL_VERSION_PROPERTY);
    }

    public void setBillingCode(String billingCode) {
        writeProperty(BILLING_CODE_PROPERTY, billingCode);
    }
    public String getBillingCode() {
        return (String)readProperty(BILLING_CODE_PROPERTY);
    }

    public void setCommunicationKey(Long communicationKey) {
        writeProperty(COMMUNICATION_KEY_PROPERTY, communicationKey);
    }
    public Long getCommunicationKey() {
        return (Long)readProperty(COMMUNICATION_KEY_PROPERTY);
    }

    public void setCommunicationKeyStatus(KeyStatus communicationKeyStatus) {
        writeProperty(COMMUNICATION_KEY_STATUS_PROPERTY, communicationKeyStatus);
    }
    public KeyStatus getCommunicationKeyStatus() {
        return (KeyStatus)readProperty(COMMUNICATION_KEY_STATUS_PROPERTY);
    }

    public void setCreated(Date created) {
        writeProperty(CREATED_PROPERTY, created);
    }
    public Date getCreated() {
        return (Date)readProperty(CREATED_PROPERTY);
    }

    public void setFirstRemoteAuthentication(Date firstRemoteAuthentication) {
        writeProperty(FIRST_REMOTE_AUTHENTICATION_PROPERTY, firstRemoteAuthentication);
    }
    public Date getFirstRemoteAuthentication() {
        return (Date)readProperty(FIRST_REMOTE_AUTHENTICATION_PROPERTY);
    }

    public void setIpAddress(String ipAddress) {
        writeProperty(IP_ADDRESS_PROPERTY, ipAddress);
    }
    public String getIpAddress() {
        return (String)readProperty(IP_ADDRESS_PROPERTY);
    }

    public void setIsTestingWebServicePayments(Boolean isTestingWebServicePayments) {
        writeProperty(IS_TESTING_WEB_SERVICE_PAYMENTS_PROPERTY, isTestingWebServicePayments);
    }
    public Boolean getIsTestingWebServicePayments() {
        return (Boolean)readProperty(IS_TESTING_WEB_SERVICE_PAYMENTS_PROPERTY);
    }

    public void setIsTestingWebSitePayments(Boolean isTestingWebSitePayments) {
        writeProperty(IS_TESTING_WEB_SITE_PAYMENTS_PROPERTY, isTestingWebSitePayments);
    }
    public Boolean getIsTestingWebSitePayments() {
        return (Boolean)readProperty(IS_TESTING_WEB_SITE_PAYMENTS_PROPERTY);
    }

    public void setIsWebServicePaymentsEnabled(Boolean isWebServicePaymentsEnabled) {
        writeProperty(IS_WEB_SERVICE_PAYMENTS_ENABLED_PROPERTY, isWebServicePaymentsEnabled);
    }
    public Boolean getIsWebServicePaymentsEnabled() {
        return (Boolean)readProperty(IS_WEB_SERVICE_PAYMENTS_ENABLED_PROPERTY);
    }

    public void setIsWebSitePaymentsEnabled(Boolean isWebSitePaymentsEnabled) {
        writeProperty(IS_WEB_SITE_PAYMENTS_ENABLED_PROPERTY, isWebSitePaymentsEnabled);
    }
    public Boolean getIsWebSitePaymentsEnabled() {
        return (Boolean)readProperty(IS_WEB_SITE_PAYMENTS_ENABLED_PROPERTY);
    }

    public void setLastRemoteAuthentication(Date lastRemoteAuthentication) {
        writeProperty(LAST_REMOTE_AUTHENTICATION_PROPERTY, lastRemoteAuthentication);
    }
    public Date getLastRemoteAuthentication() {
        return (Date)readProperty(LAST_REMOTE_AUTHENTICATION_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setPaymentGatewayAccount(String paymentGatewayAccount) {
        writeProperty(PAYMENT_GATEWAY_ACCOUNT_PROPERTY, paymentGatewayAccount);
    }
    public String getPaymentGatewayAccount() {
        return (String)readProperty(PAYMENT_GATEWAY_ACCOUNT_PROPERTY);
    }

    public void setPaymentGatewayPass(String paymentGatewayPass) {
        writeProperty(PAYMENT_GATEWAY_PASS_PROPERTY, paymentGatewayPass);
    }
    public String getPaymentGatewayPass() {
        return (String)readProperty(PAYMENT_GATEWAY_PASS_PROPERTY);
    }

    public void setRequiresAvetmiss(Boolean requiresAvetmiss) {
        writeProperty(REQUIRES_AVETMISS_PROPERTY, requiresAvetmiss);
    }
    public Boolean getRequiresAvetmiss() {
        return (Boolean)readProperty(REQUIRES_AVETMISS_PROPERTY);
    }

    public void setTimeZone(String timeZone) {
        writeProperty(TIME_ZONE_PROPERTY, timeZone);
    }
    public String getTimeZone() {
        return (String)readProperty(TIME_ZONE_PROPERTY);
    }

    public void setWebServicesSecurityCode(String webServicesSecurityCode) {
        writeProperty(WEB_SERVICES_SECURITY_CODE_PROPERTY, webServicesSecurityCode);
    }
    public String getWebServicesSecurityCode() {
        return (String)readProperty(WEB_SERVICES_SECURITY_CODE_PROPERTY);
    }

    public void addToAttendances(Attendance obj) {
        addToManyTarget(ATTENDANCES_PROPERTY, obj, true);
    }
    public void removeFromAttendances(Attendance obj) {
        removeToManyTarget(ATTENDANCES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Attendance> getAttendances() {
        return (List<Attendance>)readProperty(ATTENDANCES_PROPERTY);
    }


    public void addToBinaryInfoRelations(BinaryInfoRelation obj) {
        addToManyTarget(BINARY_INFO_RELATIONS_PROPERTY, obj, true);
    }
    public void removeFromBinaryInfoRelations(BinaryInfoRelation obj) {
        removeToManyTarget(BINARY_INFO_RELATIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<BinaryInfoRelation> getBinaryInfoRelations() {
        return (List<BinaryInfoRelation>)readProperty(BINARY_INFO_RELATIONS_PROPERTY);
    }


    public void addToBinaryInfos(BinaryInfo obj) {
        addToManyTarget(BINARY_INFOS_PROPERTY, obj, true);
    }
    public void removeFromBinaryInfos(BinaryInfo obj) {
        removeToManyTarget(BINARY_INFOS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<BinaryInfo> getBinaryInfos() {
        return (List<BinaryInfo>)readProperty(BINARY_INFOS_PROPERTY);
    }


    public void addToCertificateOutcomes(CertificateOutcome obj) {
        addToManyTarget(CERTIFICATE_OUTCOMES_PROPERTY, obj, true);
    }
    public void removeFromCertificateOutcomes(CertificateOutcome obj) {
        removeToManyTarget(CERTIFICATE_OUTCOMES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CertificateOutcome> getCertificateOutcomes() {
        return (List<CertificateOutcome>)readProperty(CERTIFICATE_OUTCOMES_PROPERTY);
    }


    public void addToCertificates(Certificate obj) {
        addToManyTarget(CERTIFICATES_PROPERTY, obj, true);
    }
    public void removeFromCertificates(Certificate obj) {
        removeToManyTarget(CERTIFICATES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Certificate> getCertificates() {
        return (List<Certificate>)readProperty(CERTIFICATES_PROPERTY);
    }


    public void addToCollegeDomains(WebHostName obj) {
        addToManyTarget(COLLEGE_DOMAINS_PROPERTY, obj, true);
    }
    public void removeFromCollegeDomains(WebHostName obj) {
        removeToManyTarget(COLLEGE_DOMAINS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebHostName> getCollegeDomains() {
        return (List<WebHostName>)readProperty(COLLEGE_DOMAINS_PROPERTY);
    }


    public void addToConcessionTypes(ConcessionType obj) {
        addToManyTarget(CONCESSION_TYPES_PROPERTY, obj, true);
    }
    public void removeFromConcessionTypes(ConcessionType obj) {
        removeToManyTarget(CONCESSION_TYPES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ConcessionType> getConcessionTypes() {
        return (List<ConcessionType>)readProperty(CONCESSION_TYPES_PROPERTY);
    }


    public void addToContactRelationTypes(ContactRelationType obj) {
        addToManyTarget(CONTACT_RELATION_TYPES_PROPERTY, obj, true);
    }
    public void removeFromContactRelationTypes(ContactRelationType obj) {
        removeToManyTarget(CONTACT_RELATION_TYPES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ContactRelationType> getContactRelationTypes() {
        return (List<ContactRelationType>)readProperty(CONTACT_RELATION_TYPES_PROPERTY);
    }


    public void addToContactRelations(ContactRelation obj) {
        addToManyTarget(CONTACT_RELATIONS_PROPERTY, obj, true);
    }
    public void removeFromContactRelations(ContactRelation obj) {
        removeToManyTarget(CONTACT_RELATIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ContactRelation> getContactRelations() {
        return (List<ContactRelation>)readProperty(CONTACT_RELATIONS_PROPERTY);
    }


    public void addToContacts(Contact obj) {
        addToManyTarget(CONTACTS_PROPERTY, obj, true);
    }
    public void removeFromContacts(Contact obj) {
        removeToManyTarget(CONTACTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Contact> getContacts() {
        return (List<Contact>)readProperty(CONTACTS_PROPERTY);
    }


    public void addToCourseClasses(CourseClass obj) {
        addToManyTarget(COURSE_CLASSES_PROPERTY, obj, true);
    }
    public void removeFromCourseClasses(CourseClass obj) {
        removeToManyTarget(COURSE_CLASSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CourseClass> getCourseClasses() {
        return (List<CourseClass>)readProperty(COURSE_CLASSES_PROPERTY);
    }


    public void addToCourseModules(CourseModule obj) {
        addToManyTarget(COURSE_MODULES_PROPERTY, obj, true);
    }
    public void removeFromCourseModules(CourseModule obj) {
        removeToManyTarget(COURSE_MODULES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CourseModule> getCourseModules() {
        return (List<CourseModule>)readProperty(COURSE_MODULES_PROPERTY);
    }


    public void addToCourses(Course obj) {
        addToManyTarget(COURSES_PROPERTY, obj, true);
    }
    public void removeFromCourses(Course obj) {
        removeToManyTarget(COURSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Course> getCourses() {
        return (List<Course>)readProperty(COURSES_PROPERTY);
    }


    public void addToDiscountConcessionTypes(DiscountConcessionType obj) {
        addToManyTarget(DISCOUNT_CONCESSION_TYPES_PROPERTY, obj, true);
    }
    public void removeFromDiscountConcessionTypes(DiscountConcessionType obj) {
        removeToManyTarget(DISCOUNT_CONCESSION_TYPES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DiscountConcessionType> getDiscountConcessionTypes() {
        return (List<DiscountConcessionType>)readProperty(DISCOUNT_CONCESSION_TYPES_PROPERTY);
    }


    public void addToDiscountCourseClasses(DiscountCourseClass obj) {
        addToManyTarget(DISCOUNT_COURSE_CLASSES_PROPERTY, obj, true);
    }
    public void removeFromDiscountCourseClasses(DiscountCourseClass obj) {
        removeToManyTarget(DISCOUNT_COURSE_CLASSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DiscountCourseClass> getDiscountCourseClasses() {
        return (List<DiscountCourseClass>)readProperty(DISCOUNT_COURSE_CLASSES_PROPERTY);
    }


    public void addToDiscountMembershipRelationTypes(DiscountMembershipRelationType obj) {
        addToManyTarget(DISCOUNT_MEMBERSHIP_RELATION_TYPES_PROPERTY, obj, true);
    }
    public void removeFromDiscountMembershipRelationTypes(DiscountMembershipRelationType obj) {
        removeToManyTarget(DISCOUNT_MEMBERSHIP_RELATION_TYPES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DiscountMembershipRelationType> getDiscountMembershipRelationTypes() {
        return (List<DiscountMembershipRelationType>)readProperty(DISCOUNT_MEMBERSHIP_RELATION_TYPES_PROPERTY);
    }


    public void addToDiscountMemberships(DiscountMembership obj) {
        addToManyTarget(DISCOUNT_MEMBERSHIPS_PROPERTY, obj, true);
    }
    public void removeFromDiscountMemberships(DiscountMembership obj) {
        removeToManyTarget(DISCOUNT_MEMBERSHIPS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DiscountMembership> getDiscountMemberships() {
        return (List<DiscountMembership>)readProperty(DISCOUNT_MEMBERSHIPS_PROPERTY);
    }


    public void addToDiscounts(Discount obj) {
        addToManyTarget(DISCOUNTS_PROPERTY, obj, true);
    }
    public void removeFromDiscounts(Discount obj) {
        removeToManyTarget(DISCOUNTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Discount> getDiscounts() {
        return (List<Discount>)readProperty(DISCOUNTS_PROPERTY);
    }


    public void addToEnrolments(Enrolment obj) {
        addToManyTarget(ENROLMENTS_PROPERTY, obj, true);
    }
    public void removeFromEnrolments(Enrolment obj) {
        removeToManyTarget(ENROLMENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Enrolment> getEnrolments() {
        return (List<Enrolment>)readProperty(ENROLMENTS_PROPERTY);
    }


    public void addToInstructions(Instruction obj) {
        addToManyTarget(INSTRUCTIONS_PROPERTY, obj, true);
    }
    public void removeFromInstructions(Instruction obj) {
        removeToManyTarget(INSTRUCTIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Instruction> getInstructions() {
        return (List<Instruction>)readProperty(INSTRUCTIONS_PROPERTY);
    }


    public void addToInvoiceLineDiscounts(InvoiceLineDiscount obj) {
        addToManyTarget(INVOICE_LINE_DISCOUNTS_PROPERTY, obj, true);
    }
    public void removeFromInvoiceLineDiscounts(InvoiceLineDiscount obj) {
        removeToManyTarget(INVOICE_LINE_DISCOUNTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<InvoiceLineDiscount> getInvoiceLineDiscounts() {
        return (List<InvoiceLineDiscount>)readProperty(INVOICE_LINE_DISCOUNTS_PROPERTY);
    }


    public void addToInvoiceLines(InvoiceLine obj) {
        addToManyTarget(INVOICE_LINES_PROPERTY, obj, true);
    }
    public void removeFromInvoiceLines(InvoiceLine obj) {
        removeToManyTarget(INVOICE_LINES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<InvoiceLine> getInvoiceLines() {
        return (List<InvoiceLine>)readProperty(INVOICE_LINES_PROPERTY);
    }


    public void addToInvoices(Invoice obj) {
        addToManyTarget(INVOICES_PROPERTY, obj, true);
    }
    public void removeFromInvoices(Invoice obj) {
        removeToManyTarget(INVOICES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Invoice> getInvoices() {
        return (List<Invoice>)readProperty(INVOICES_PROPERTY);
    }


    public void addToLicenseFees(LicenseFee obj) {
        addToManyTarget(LICENSE_FEES_PROPERTY, obj, true);
    }
    public void removeFromLicenseFees(LicenseFee obj) {
        removeToManyTarget(LICENSE_FEES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<LicenseFee> getLicenseFees() {
        return (List<LicenseFee>)readProperty(LICENSE_FEES_PROPERTY);
    }


    public void addToLogs(Log obj) {
        addToManyTarget(LOGS_PROPERTY, obj, true);
    }
    public void removeFromLogs(Log obj) {
        removeToManyTarget(LOGS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Log> getLogs() {
        return (List<Log>)readProperty(LOGS_PROPERTY);
    }


    public void addToMessagePeople(MessagePerson obj) {
        addToManyTarget(MESSAGE_PEOPLE_PROPERTY, obj, true);
    }
    public void removeFromMessagePeople(MessagePerson obj) {
        removeToManyTarget(MESSAGE_PEOPLE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MessagePerson> getMessagePeople() {
        return (List<MessagePerson>)readProperty(MESSAGE_PEOPLE_PROPERTY);
    }


    public void addToMessageTemplates(MessageTemplate obj) {
        addToManyTarget(MESSAGE_TEMPLATES_PROPERTY, obj, true);
    }
    public void removeFromMessageTemplates(MessageTemplate obj) {
        removeToManyTarget(MESSAGE_TEMPLATES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MessageTemplate> getMessageTemplates() {
        return (List<MessageTemplate>)readProperty(MESSAGE_TEMPLATES_PROPERTY);
    }


    public void addToMessages(Message obj) {
        addToManyTarget(MESSAGES_PROPERTY, obj, true);
    }
    public void removeFromMessages(Message obj) {
        removeToManyTarget(MESSAGES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Message> getMessages() {
        return (List<Message>)readProperty(MESSAGES_PROPERTY);
    }


    public void addToNotificationTemplates(NotificationTemplate obj) {
        addToManyTarget(NOTIFICATION_TEMPLATES_PROPERTY, obj, true);
    }
    public void removeFromNotificationTemplates(NotificationTemplate obj) {
        removeToManyTarget(NOTIFICATION_TEMPLATES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NotificationTemplate> getNotificationTemplates() {
        return (List<NotificationTemplate>)readProperty(NOTIFICATION_TEMPLATES_PROPERTY);
    }


    public void addToOutcomes(Outcome obj) {
        addToManyTarget(OUTCOMES_PROPERTY, obj, true);
    }
    public void removeFromOutcomes(Outcome obj) {
        removeToManyTarget(OUTCOMES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Outcome> getOutcomes() {
        return (List<Outcome>)readProperty(OUTCOMES_PROPERTY);
    }


    public void addToPaymentInLines(PaymentInLine obj) {
        addToManyTarget(PAYMENT_IN_LINES_PROPERTY, obj, true);
    }
    public void removeFromPaymentInLines(PaymentInLine obj) {
        removeToManyTarget(PAYMENT_IN_LINES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PaymentInLine> getPaymentInLines() {
        return (List<PaymentInLine>)readProperty(PAYMENT_IN_LINES_PROPERTY);
    }


    public void addToPaymentsIn(PaymentIn obj) {
        addToManyTarget(PAYMENTS_IN_PROPERTY, obj, true);
    }
    public void removeFromPaymentsIn(PaymentIn obj) {
        removeToManyTarget(PAYMENTS_IN_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PaymentIn> getPaymentsIn() {
        return (List<PaymentIn>)readProperty(PAYMENTS_IN_PROPERTY);
    }


    public void addToPaymentsOut(PaymentOut obj) {
        addToManyTarget(PAYMENTS_OUT_PROPERTY, obj, true);
    }
    public void removeFromPaymentsOut(PaymentOut obj) {
        removeToManyTarget(PAYMENTS_OUT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PaymentOut> getPaymentsOut() {
        return (List<PaymentOut>)readProperty(PAYMENTS_OUT_PROPERTY);
    }


    public void addToPreferences(Preference obj) {
        addToManyTarget(PREFERENCES_PROPERTY, obj, true);
    }
    public void removeFromPreferences(Preference obj) {
        removeToManyTarget(PREFERENCES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Preference> getPreferences() {
        return (List<Preference>)readProperty(PREFERENCES_PROPERTY);
    }


    public void addToProductItems(ProductItem obj) {
        addToManyTarget(PRODUCT_ITEMS_PROPERTY, obj, true);
    }
    public void removeFromProductItems(ProductItem obj) {
        removeToManyTarget(PRODUCT_ITEMS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ProductItem> getProductItems() {
        return (List<ProductItem>)readProperty(PRODUCT_ITEMS_PROPERTY);
    }


    public void addToProducts(Product obj) {
        addToManyTarget(PRODUCTS_PROPERTY, obj, true);
    }
    public void removeFromProducts(Product obj) {
        removeToManyTarget(PRODUCTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Product> getProducts() {
        return (List<Product>)readProperty(PRODUCTS_PROPERTY);
    }


    public void addToQueuedRecords(QueuedRecord obj) {
        addToManyTarget(QUEUED_RECORDS_PROPERTY, obj, true);
    }
    public void removeFromQueuedRecords(QueuedRecord obj) {
        removeToManyTarget(QUEUED_RECORDS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QueuedRecord> getQueuedRecords() {
        return (List<QueuedRecord>)readProperty(QUEUED_RECORDS_PROPERTY);
    }


    public void addToQueuedTransactions(QueuedTransaction obj) {
        addToManyTarget(QUEUED_TRANSACTIONS_PROPERTY, obj, true);
    }
    public void removeFromQueuedTransactions(QueuedTransaction obj) {
        removeToManyTarget(QUEUED_TRANSACTIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QueuedTransaction> getQueuedTransactions() {
        return (List<QueuedTransaction>)readProperty(QUEUED_TRANSACTIONS_PROPERTY);
    }


    public void addToRooms(Room obj) {
        addToManyTarget(ROOMS_PROPERTY, obj, true);
    }
    public void removeFromRooms(Room obj) {
        removeToManyTarget(ROOMS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Room> getRooms() {
        return (List<Room>)readProperty(ROOMS_PROPERTY);
    }


    public void addToSessionTutors(SessionTutor obj) {
        addToManyTarget(SESSION_TUTORS_PROPERTY, obj, true);
    }
    public void removeFromSessionTutors(SessionTutor obj) {
        removeToManyTarget(SESSION_TUTORS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SessionTutor> getSessionTutors() {
        return (List<SessionTutor>)readProperty(SESSION_TUTORS_PROPERTY);
    }


    public void addToSessions(Session obj) {
        addToManyTarget(SESSIONS_PROPERTY, obj, true);
    }
    public void removeFromSessions(Session obj) {
        removeToManyTarget(SESSIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Session> getSessions() {
        return (List<Session>)readProperty(SESSIONS_PROPERTY);
    }


    public void addToSites(Site obj) {
        addToManyTarget(SITES_PROPERTY, obj, true);
    }
    public void removeFromSites(Site obj) {
        removeToManyTarget(SITES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Site> getSites() {
        return (List<Site>)readProperty(SITES_PROPERTY);
    }


    public void addToStudentConcessions(StudentConcession obj) {
        addToManyTarget(STUDENT_CONCESSIONS_PROPERTY, obj, true);
    }
    public void removeFromStudentConcessions(StudentConcession obj) {
        removeToManyTarget(STUDENT_CONCESSIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StudentConcession> getStudentConcessions() {
        return (List<StudentConcession>)readProperty(STUDENT_CONCESSIONS_PROPERTY);
    }


    public void addToStudents(Student obj) {
        addToManyTarget(STUDENTS_PROPERTY, obj, true);
    }
    public void removeFromStudents(Student obj) {
        removeToManyTarget(STUDENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Student> getStudents() {
        return (List<Student>)readProperty(STUDENTS_PROPERTY);
    }


    public void addToTagGroupRequirements(TagGroupRequirement obj) {
        addToManyTarget(TAG_GROUP_REQUIREMENTS_PROPERTY, obj, true);
    }
    public void removeFromTagGroupRequirements(TagGroupRequirement obj) {
        removeToManyTarget(TAG_GROUP_REQUIREMENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TagGroupRequirement> getTagGroupRequirements() {
        return (List<TagGroupRequirement>)readProperty(TAG_GROUP_REQUIREMENTS_PROPERTY);
    }


    public void addToTaggableTags(TaggableTag obj) {
        addToManyTarget(TAGGABLE_TAGS_PROPERTY, obj, true);
    }
    public void removeFromTaggableTags(TaggableTag obj) {
        removeToManyTarget(TAGGABLE_TAGS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TaggableTag> getTaggableTags() {
        return (List<TaggableTag>)readProperty(TAGGABLE_TAGS_PROPERTY);
    }


    public void addToTaggables(Taggable obj) {
        addToManyTarget(TAGGABLES_PROPERTY, obj, true);
    }
    public void removeFromTaggables(Taggable obj) {
        removeToManyTarget(TAGGABLES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Taggable> getTaggables() {
        return (List<Taggable>)readProperty(TAGGABLES_PROPERTY);
    }


    public void addToTags(Tag obj) {
        addToManyTarget(TAGS_PROPERTY, obj, true);
    }
    public void removeFromTags(Tag obj) {
        removeToManyTarget(TAGS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Tag> getTags() {
        return (List<Tag>)readProperty(TAGS_PROPERTY);
    }


    public void addToTutorRoles(TutorRole obj) {
        addToManyTarget(TUTOR_ROLES_PROPERTY, obj, true);
    }
    public void removeFromTutorRoles(TutorRole obj) {
        removeToManyTarget(TUTOR_ROLES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TutorRole> getTutorRoles() {
        return (List<TutorRole>)readProperty(TUTOR_ROLES_PROPERTY);
    }


    public void addToTutors(Tutor obj) {
        addToManyTarget(TUTORS_PROPERTY, obj, true);
    }
    public void removeFromTutors(Tutor obj) {
        removeToManyTarget(TUTORS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Tutor> getTutors() {
        return (List<Tutor>)readProperty(TUTORS_PROPERTY);
    }


    public void addToWaitingListSites(WaitingListSite obj) {
        addToManyTarget(WAITING_LIST_SITES_PROPERTY, obj, true);
    }
    public void removeFromWaitingListSites(WaitingListSite obj) {
        removeToManyTarget(WAITING_LIST_SITES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WaitingListSite> getWaitingListSites() {
        return (List<WaitingListSite>)readProperty(WAITING_LIST_SITES_PROPERTY);
    }


    public void addToWaitingLists(WaitingList obj) {
        addToManyTarget(WAITING_LISTS_PROPERTY, obj, true);
    }
    public void removeFromWaitingLists(WaitingList obj) {
        removeToManyTarget(WAITING_LISTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WaitingList> getWaitingLists() {
        return (List<WaitingList>)readProperty(WAITING_LISTS_PROPERTY);
    }


    public void addToWebSites(WebSite obj) {
        addToManyTarget(WEB_SITES_PROPERTY, obj, true);
    }
    public void removeFromWebSites(WebSite obj) {
        removeToManyTarget(WEB_SITES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebSite> getWebSites() {
        return (List<WebSite>)readProperty(WEB_SITES_PROPERTY);
    }


    public void addToWillowUsers(WillowUser obj) {
        addToManyTarget(WILLOW_USERS_PROPERTY, obj, true);
    }
    public void removeFromWillowUsers(WillowUser obj) {
        removeToManyTarget(WILLOW_USERS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WillowUser> getWillowUsers() {
        return (List<WillowUser>)readProperty(WILLOW_USERS_PROPERTY);
    }


}
