package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import ish.common.types.AttachmentInfoVisibility;
import ish.oncourse.model.BinaryInfoRelation;
import ish.oncourse.model.College;
import ish.oncourse.model.DocumentVersion;

/**
 * Class _Document was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Document extends CayenneDataObject {

    public static final String ANGEL_ID_PROPERTY = "angelId";
    public static final String CREATED_PROPERTY = "created";
    public static final String DESCRIPTION_PROPERTY = "description";
    public static final String FILE_UUID_PROPERTY = "fileUUID";
    public static final String IS_REMOVED_PROPERTY = "isRemoved";
    public static final String IS_SHARED_PROPERTY = "isShared";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String NAME_PROPERTY = "name";
    public static final String WEB_VISIBILITY_PROPERTY = "webVisibility";
    public static final String BINARY_INFO_RELATIONS_PROPERTY = "binaryInfoRelations";
    public static final String COLLEGE_PROPERTY = "college";
    public static final String VERSIONS_PROPERTY = "versions";

    public static final String ID_PK_COLUMN = "id";

    public void setAngelId(Long angelId) {
        writeProperty(ANGEL_ID_PROPERTY, angelId);
    }
    public Long getAngelId() {
        return (Long)readProperty(ANGEL_ID_PROPERTY);
    }

    public void setCreated(Date created) {
        writeProperty(CREATED_PROPERTY, created);
    }
    public Date getCreated() {
        return (Date)readProperty(CREATED_PROPERTY);
    }

    public void setDescription(String description) {
        writeProperty(DESCRIPTION_PROPERTY, description);
    }
    public String getDescription() {
        return (String)readProperty(DESCRIPTION_PROPERTY);
    }

    public void setFileUUID(String fileUUID) {
        writeProperty(FILE_UUID_PROPERTY, fileUUID);
    }
    public String getFileUUID() {
        return (String)readProperty(FILE_UUID_PROPERTY);
    }

    public void setIsRemoved(Boolean isRemoved) {
        writeProperty(IS_REMOVED_PROPERTY, isRemoved);
    }
    public Boolean getIsRemoved() {
        return (Boolean)readProperty(IS_REMOVED_PROPERTY);
    }

    public void setIsShared(Boolean isShared) {
        writeProperty(IS_SHARED_PROPERTY, isShared);
    }
    public Boolean getIsShared() {
        return (Boolean)readProperty(IS_SHARED_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setWebVisibility(AttachmentInfoVisibility webVisibility) {
        writeProperty(WEB_VISIBILITY_PROPERTY, webVisibility);
    }
    public AttachmentInfoVisibility getWebVisibility() {
        return (AttachmentInfoVisibility)readProperty(WEB_VISIBILITY_PROPERTY);
    }

    public void addToBinaryInfoRelations(BinaryInfoRelation obj) {
        addToManyTarget(BINARY_INFO_RELATIONS_PROPERTY, obj, true);
    }
    public void removeFromBinaryInfoRelations(BinaryInfoRelation obj) {
        removeToManyTarget(BINARY_INFO_RELATIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<BinaryInfoRelation> getBinaryInfoRelations() {
        return (List<BinaryInfoRelation>)readProperty(BINARY_INFO_RELATIONS_PROPERTY);
    }


    public void setCollege(College college) {
        setToOneTarget(COLLEGE_PROPERTY, college, true);
    }

    public College getCollege() {
        return (College)readProperty(COLLEGE_PROPERTY);
    }


    public void addToVersions(DocumentVersion obj) {
        addToManyTarget(VERSIONS_PROPERTY, obj, true);
    }
    public void removeFromVersions(DocumentVersion obj) {
        removeToManyTarget(VERSIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DocumentVersion> getVersions() {
        return (List<DocumentVersion>)readProperty(VERSIONS_PROPERTY);
    }


}
