package ish.oncourse.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import ish.oncourse.model.College;
import ish.oncourse.model.Invoice;
import ish.oncourse.model.WebContent;
import ish.oncourse.model.WebHostName;
import ish.oncourse.model.WebMenu;
import ish.oncourse.model.WebNode;
import ish.oncourse.model.WebNodeType;
import ish.oncourse.model.WebUrlAlias;

/**
 * Class _WebSite was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _WebSite extends CayenneDataObject {

    public static final String CREATED_PROPERTY = "created";
    public static final String GOOGLE_ANALYTICS_ACCOUNT_PROPERTY = "googleAnalyticsAccount";
    public static final String GOOGLE_DIRECTIONS_FROM_PROPERTY = "googleDirectionsFrom";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String NAME_PROPERTY = "name";
    public static final String SITE_KEY_PROPERTY = "siteKey";
    public static final String COLLEGE_PROPERTY = "college";
    public static final String COLLEGE_DOMAINS_PROPERTY = "collegeDomains";
    public static final String CONTENTS_PROPERTY = "contents";
    public static final String INVOICES_PROPERTY = "invoices";
    public static final String TO_WEB_HOST_NAME_PROPERTY = "toWebHostName";
    public static final String WEB_MENUS_PROPERTY = "webMenus";
    public static final String WEB_NODE_TYPES_PROPERTY = "webNodeTypes";
    public static final String WEB_NODES_PROPERTY = "webNodes";
    public static final String WEB_URL_ALIASES_PROPERTY = "webUrlAliases";

    public static final String ID_PK_COLUMN = "id";

    public void setCreated(Date created) {
        writeProperty(CREATED_PROPERTY, created);
    }
    public Date getCreated() {
        return (Date)readProperty(CREATED_PROPERTY);
    }

    public void setGoogleAnalyticsAccount(String googleAnalyticsAccount) {
        writeProperty(GOOGLE_ANALYTICS_ACCOUNT_PROPERTY, googleAnalyticsAccount);
    }
    public String getGoogleAnalyticsAccount() {
        return (String)readProperty(GOOGLE_ANALYTICS_ACCOUNT_PROPERTY);
    }

    public void setGoogleDirectionsFrom(String googleDirectionsFrom) {
        writeProperty(GOOGLE_DIRECTIONS_FROM_PROPERTY, googleDirectionsFrom);
    }
    public String getGoogleDirectionsFrom() {
        return (String)readProperty(GOOGLE_DIRECTIONS_FROM_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setSiteKey(String siteKey) {
        writeProperty(SITE_KEY_PROPERTY, siteKey);
    }
    public String getSiteKey() {
        return (String)readProperty(SITE_KEY_PROPERTY);
    }

    public void setCollege(College college) {
        setToOneTarget(COLLEGE_PROPERTY, college, true);
    }

    public College getCollege() {
        return (College)readProperty(COLLEGE_PROPERTY);
    }


    public void addToCollegeDomains(WebHostName obj) {
        addToManyTarget(COLLEGE_DOMAINS_PROPERTY, obj, true);
    }
    public void removeFromCollegeDomains(WebHostName obj) {
        removeToManyTarget(COLLEGE_DOMAINS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebHostName> getCollegeDomains() {
        return (List<WebHostName>)readProperty(COLLEGE_DOMAINS_PROPERTY);
    }


    public void addToContents(WebContent obj) {
        addToManyTarget(CONTENTS_PROPERTY, obj, true);
    }
    public void removeFromContents(WebContent obj) {
        removeToManyTarget(CONTENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebContent> getContents() {
        return (List<WebContent>)readProperty(CONTENTS_PROPERTY);
    }


    public void addToInvoices(Invoice obj) {
        addToManyTarget(INVOICES_PROPERTY, obj, true);
    }
    public void removeFromInvoices(Invoice obj) {
        removeToManyTarget(INVOICES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Invoice> getInvoices() {
        return (List<Invoice>)readProperty(INVOICES_PROPERTY);
    }


    public void setToWebHostName(WebHostName toWebHostName) {
        setToOneTarget(TO_WEB_HOST_NAME_PROPERTY, toWebHostName, true);
    }

    public WebHostName getToWebHostName() {
        return (WebHostName)readProperty(TO_WEB_HOST_NAME_PROPERTY);
    }


    public void addToWebMenus(WebMenu obj) {
        addToManyTarget(WEB_MENUS_PROPERTY, obj, true);
    }
    public void removeFromWebMenus(WebMenu obj) {
        removeToManyTarget(WEB_MENUS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebMenu> getWebMenus() {
        return (List<WebMenu>)readProperty(WEB_MENUS_PROPERTY);
    }


    public void addToWebNodeTypes(WebNodeType obj) {
        addToManyTarget(WEB_NODE_TYPES_PROPERTY, obj, true);
    }
    public void removeFromWebNodeTypes(WebNodeType obj) {
        removeToManyTarget(WEB_NODE_TYPES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebNodeType> getWebNodeTypes() {
        return (List<WebNodeType>)readProperty(WEB_NODE_TYPES_PROPERTY);
    }


    public void addToWebNodes(WebNode obj) {
        addToManyTarget(WEB_NODES_PROPERTY, obj, true);
    }
    public void removeFromWebNodes(WebNode obj) {
        removeToManyTarget(WEB_NODES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebNode> getWebNodes() {
        return (List<WebNode>)readProperty(WEB_NODES_PROPERTY);
    }


    public void addToWebUrlAliases(WebUrlAlias obj) {
        addToManyTarget(WEB_URL_ALIASES_PROPERTY, obj, true);
    }
    public void removeFromWebUrlAliases(WebUrlAlias obj) {
        removeToManyTarget(WEB_URL_ALIASES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebUrlAlias> getWebUrlAliases() {
        return (List<WebUrlAlias>)readProperty(WEB_URL_ALIASES_PROPERTY);
    }


}
