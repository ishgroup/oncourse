swagger: '2.0'
info:
  title: onCourse Editor Api
  description: An API for interacting with the backend of the onCourse Editor/CMS
  contact:
    name: ish group pty ltd
    url: http://ish.com.au
    email: support@ish.com.au
  license:
    name: Proprietary
  version: v1
  
  
schemes:
  - https
produces:
  - application/json

securityDefinitions:
  loginAuth:
    type: basic
    description: HTTP Basic Authentication
#
#  token:
#    type: apiKey
#    name: ESESSIONID
#    description: User's session token
#    in: header

# Require all requests to require a token unless otherwise stated
#security:
#  - token: []

host: siteKey.oncourse.cc
basePath: /editor/v1

tags:
  - name: Auth
    description: |
      These methods allow you to log into the editor API, retrieve a session token and log out again. None
      of the other methods will work without a session token passed in an HTTP header.
  - name: Menu
    description: |
      Menus are a navigation device for your website and can link to internal pages or out to externally hosted
      pages. Menus are hierarchical and ordered.

paths:

#################
  /session:
#################
    post:
      operationId: createSession
      description: |
        Authenticate user by email and password. Returns session token.
        For all subsequent requests to the API you should ensure a cookie called ESESSIONID is set with this token value.
      security:
        - loginAuth: []
      tags:
        - Auth
      consumes:
        - application/json
      parameters:
        - name: loginRequest
          in: body
          description: Parameters for request user authorization.
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: Valid session token
          schema: 
            type: string 
          headers:
            ESESSIONID:
              type: string
              description: Valid session token.
        '406':
          description: Login unsuccessful. Invalid login name or password.
        '409':
          description: There is more than one user with the same login details.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    delete:
      operationId: destroySession
      description: De-authorise user from editor.
      tags:
        - Auth
      consumes:
        - application/json
      responses:
        '200':
          description: Successful logout. The session token is no longer valid.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /user:
#################
    get:
      operationId: getUser
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get current logged in user.
      tags:
        - Auth
      consumes:
        - application/json
      responses:
        '200':
          description: Current user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /menu:
#################
    get:
      operationId: getMenus
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get all menu items.
      tags:
        - Menu
      responses:
        '200':
          description: A list of menu items.
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateMenus
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Save menu items.
      tags:
        - Menu
      consumes:
        - application/json
      parameters:
        - name: Menu
          in: body
          description: List of menu items which will replace all the menus in the site.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Menus saved. Returns list of menus, some of which may have warnings.
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        '400':
          description: Menus not saved. Returns list of menus, some of which may have errors and/or warnings.
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /page:
#################
    get:
      operationId: getPages
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get list of pages.
      tags:
        - Page
      parameters:
        - name: pageLink
          in: query
          description: Optional page link to return a list containing just one page
          required: false
          type: string
      responses:
        '200':
          description: List of pages
          schema:
            type: array
            items:
              $ref: '#/definitions/Page'
        '403':
          description: Special system page cannot be retrieved
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updatePage
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Save page parameters.
      tags:
        - Page
      consumes:
        - application/json
      parameters:
        - name: pageParams
          in: body
          description: Page with new params
          required: true
          schema:
            $ref: '#/definitions/Page'
      responses:
        '200':
          description: Page object with updated params
          schema:
            $ref: '#/definitions/Page'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    post:
      operationId: createPage
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Add new page
      tags:
        - Page
      consumes:
        - application/json
      responses:
        '200':
          description: New page with unique id and URL
          schema:
            $ref: '#/definitions/Page'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    delete:
      operationId: deletePage
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Remove page by id.
      tags:
        - Page
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of page to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Page successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /block:
#################
    get:
      operationId: getBlocks
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get list of blocks.
      tags:
        - Block
      responses:
        '200':
          description: Response with array of blocks
          schema:
            type: array
            items:
              $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateBlock
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Update an existing block.
      tags:
        - Block
      consumes:
        - application/json
      parameters:
        - name: SaveBlockRequest
          in: body
          description: Block with new params
          required: true
          schema:
            $ref: '#/definitions/Block'
      responses:
        '200':
          description: Block object with updated params
          schema:
            $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    post:
      operationId: createBlock
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Add new block.
      tags:
        - Block
      consumes:
        - application/json
      responses:
        '200':
          description: New block with unique id
          schema:
            $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    delete:
      operationId: deleteBlock
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Remove block
      tags:
        - Block
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Identifier of block which will be deleted.
          required: true
          type: string
      responses:
        '200':
          description: Block successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /layout:
#################
    get:
      operationId: getLayouts
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get list of layouts.
      tags:
        - Theme
      responses:
        '200':
          description: List of layouts
          schema:
            type: array
            items:
              $ref: '#/definitions/Layout'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /theme:
#################
    get:
      operationId: getThemes
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get list of themes.
      tags:
        - Theme
      responses:
        '200':
          description: List of themes
          schema:
            type: array
            items:
              $ref: '#/definitions/Theme'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateTheme
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Save theme params.
      tags:
        - Theme
      consumes:
        - application/json
      parameters:
        - name: SaveThemeRequest
          in: body
          description: Theme with new params
          required: true
          schema:
            $ref: '#/definitions/Theme'
      responses:
        '200':
          description: Theme object with updated params
          schema:
            $ref: '#/definitions/Theme'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    post:
      operationId: createTheme
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Add new theme.
      tags:
        - Theme
      consumes:
        - application/json
      responses:
        '200':
          description: New theme with unique id
          schema:
            $ref: '#/definitions/Theme'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    delete:
      operationId: deleteTheme
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Remove theme.
      tags:
        - Theme
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of theme which will be deleted
          required: true
          type: string
      responses:
        '200':
          description: Theme successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /version:
#################
    get:
      operationId: getVersions
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: |
        Get list of site versions including the current published site and current draft site. Historical versions will be also available here
        up to a limit which is set by the editor server. Older versions (or beyond a certain number of versions) will be discarded and not avaiable.
      tags:
        - Version
      responses:
        '200':
          description: List of versions
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    patch:
      operationId: updateVersion
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: |
       Change version status. Useage example (put current draft version to production):
       PATCH /editor/v1/version/123  HTTP/1.1
       Host: template-a.oncourse.cc
       Cookie: ESESSIONID=ypCWJgivYKMRM7Hpa8HS
       Content-Type: application/json
       
       { "status": "published" }
      tags:
        - Version
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of version
          required: true
          type: string
        - name: version
          in: body
          description: Typically only the published state is modifable for existing versions
          required: true
          schema:
            $ref: '#/definitions/Version'
        - name: description
          in: query
          description: Commit message
          required: true
          type: string
      responses:
        '200':
          description: Version changed successfully
        '423':
          description: |
           Version can not be modified at this time - locked by another background task. Please wait for a few minutes and try again. 
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /settings/skillsOnCourse:
#################
    get:
      operationId: getSkillsOnCourseSettings
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get SkillsOnCourse settings.
      tags:
        - Settings
      responses:
        '200':
          description: SkillsOnCourse settings object
          schema:
            $ref: '#/definitions/SkillsOnCourseSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateSkillsOnCourseSettings
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Save SkillsOnCourse settings.
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: SkillsOnCourseSettingsRequest
          in: body
          description: SkillsOnCourse settings object
          required: true
          schema:
            $ref: '#/definitions/SkillsOnCourseSettings'
      responses:
        '200':
          description: Updated SkillsOnCourse settings object
          schema:
            $ref: '#/definitions/SkillsOnCourseSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /settings/website:
#################
    get:
      operationId: getWebsiteSettings
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get Website settings.
      tags:
        - Settings
      responses:
        '200':
          description: Website settings object
          schema:
            $ref: '#/definitions/WebsiteSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateWebsiteSettings
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Save website settings.
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: WebsiteSettingsRequest
          in: body
          description: Website settings object
          required: true
          schema:
            $ref: '#/definitions/WebsiteSettings'
      responses:
        '200':
          description: Updated website settings object
          schema:
            $ref: '#/definitions/WebsiteSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /settings/checkout:
#################
    get:
      operationId: getCheckoutSettings
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get checkout settings.
      tags:
        - Settings
      responses:
        '200':
          description: Checkout settings object
          schema:
            $ref: '#/definitions/CheckoutSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateCheckoutSettings
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Save checkout settings.
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: CheckoutSettingsRequest
          in: body
          description: Website settings object
          required: true
          schema:
            $ref: '#/definitions/CheckoutSettings'
      responses:
        '200':
          description: Updated website settings object
          schema:
            $ref: '#/definitions/CheckoutSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
  /redirect:
#################
    get:
      operationId: getRedirects
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get redirects for the whole site.
      tags:
        - Redirect
      responses:
        '200':
          description: A list of redirects
          schema:
            $ref: '#/definitions/Redirects'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateRedirects
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Replace all the redirects for the site with a new list of redirects.
      tags:
        - Redirect
      consumes:
        - application/json
      parameters:
        - name: RedirectSettingsRequest
          in: body
          description: List of redirects
          required: true
          schema:
            $ref: '#/definitions/Redirects'
      responses:
        '200':
          description: List of redirects
          schema:
            $ref: '#/definitions/Redirects'
        '400':
          description: Redirects not saved. Returns list of redirects, some of which may have errors and/or warnings.
          schema:
            $ref: '#/definitions/Redirects'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

  #################
  /specialPage:
    #################
    get:
      operationId: getSpecialPages
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Get special page redirects for the whole site.
      tags:
        - SpecialPage
      responses:
        '200':
          description: A list of redirects
          schema:
            $ref: '#/definitions/SpecialPages'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

    put:
      operationId: updateSpecialPages
      x-filter:
        - ish.oncourse.api.access.AuthFilter
      description: Update all special redirects for web site
      tags:
        - SpecialPage
      consumes:
        - application/json
      parameters:
        - name: specialPages
          in: body
          description: List of special pages
          required: true
          schema:
            $ref: '#/definitions/SpecialPages'
      responses:
        '200':
          description: List of special pages
          schema:
            $ref: '#/definitions/SpecialPages'
        '400':
          description: Special redirects not saved. Returns list of redirects, some of which may have errors and/or warnings.
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecialPageItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

#################
#################

definitions:

  LoginRequest:
    type: object
    properties:
      email:
        type: string
        format: email
        description: user email
        example: john.smith@gmail.com
      password:
        type: string
        format: password
        description: User password
        example: htrgjat4Gh

  PageLink:
    type: object
    properties:
      link:
        type: string
        description: unique link
        example: /contact
      isDefault:
        type: boolean
        description: Is this the default URL for the page. Setting this unsets all other isDefault for the same page.

  Block:
    type: object
    description: A piece of re-usable markup which might be attached to a theme or incorporated inside other rich text content.
    properties:
      id:
        type: integer
        description: Unique identifier of block
      title:
        type: string
        description: Unique name of block
        example: sidebar
      content:
        type: string
        description: Rich text content
        example: |
          h3. Subjects
          {tags}

  VersionStatus:
    type: string
    enum:
      - published
      - draft

  Version:
    type: object
    description: A version of the website. One version is considered published at any time and one version is draft at any time.
    properties:
      id:
        type: integer
        description: unique id of this version
      author:
        type: string
        readOnly: true
        description: First and last name of the user who published this version, or null if still in draft
        example: Jane Smith
      changes:
        type: integer
        readOnly: true
        minimum: 0
        description: Count of changes introduced in this version
        example: 12
      publishedOn:
        type: string
        readOnly: true
        format: date-time
        description: date and time when version was published or null if it is still in draft
      status:
        description: The current published status of the version
        $ref: '#/definitions/VersionStatus'

  Layout:
    type: object
    properties:
      id:
        type: integer
        description: unique id of the layout
      title:
        type: string
        description: Layout name
        example: layout-B

  Page:
    type: object
    properties:
      id:
        type: integer
        description: unique id of the page
      title:
        type: string
        description: title of the page
        example: Contact us
      content:
        type: string
        description: Rich text content
        example: Phone us on (02) 9550 5001 to find out more.
      visible:
        type: boolean
        description: Is the page visible
      suppressOnSitemap:
        type: boolean
        description: Is the page suppressed on sitemap
      urls:
        type: array
        items:
          $ref: '#/definitions/PageLink'

  BlockPosition:
    type: object
    properties:
      id:
        type: integer
        description: unique id of the Block
        example: 12
      title:
        type: string
        description: Block name
        example: left-sidebar
      position:
        type: integer
        description: order position of the block
        example: 2

  ThemeBlocks:
    type: object
    description: The arrangement of blocks within a theme
    properties:
      top:
        description: A list of blocks at the top of the page, often used as a page header
        type: array
        items:
          $ref: '#/definitions/BlockPosition'
      left:
        description: A list of blocks at the left of the page, often used for a sidebar or navigation
        type: array
        items:
          $ref: '#/definitions/BlockPosition'
      centre:
        description: A list of blocks at the top of the page. They appear above the content.
        type: array
        items:
          $ref: '#/definitions/BlockPosition'
      right:
        description: A list of blocks at the right of the page
        type: array
        items:
          $ref: '#/definitions/BlockPosition'
      footer:
        description: A list of blocks at the footer of the page
        type: array
        items:
          $ref: '#/definitions/BlockPosition'

  Theme:
    type: object
    description: A theme is an organisation of blocks which is then applied to a page
    properties:
      id:
        type: integer
        description: Unique identifier for this theme. This is not seen in the editor UI.
      title:
        type: string
        description: Title of theme displayed in the user interface
        example: default
      layoutId:
        type: integer
        description: Layout id which this theme uses
      blocks:
        $ref: '#/definitions/ThemeBlocks'
      paths:
        description: A list of path patterms to aply the theme
        type: array
        items:
          $ref: '#/definitions/ThemePath'
  
  ThemePath:
    type: object
    description: theme the path pattern
    properties:
      path:
        type: string
        description: theme path
        example: /about
      exactMatch:
        type: boolean
        description: is exact matching, othervice starts with
        
  MenuItem:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier of menu item
      title:
        type: string
        description: Title of menu item displayed in the website
        example: about us
      url:
        type: string
        format: uri
        description: URI for menu link
        example: /about
      children:
        type: array
        items:
          $ref: '#/definitions/MenuItem'
      error:
        type: string
        description: Describes reason why menu item cannot be saved.
        example: Menu AB cannot be saved with name fewer than 3 characters.
      warning:
        type: string
        description: Alert for user. Does not prevent menu from being saved.
        example: Warning. Menu ABC points to an unpublished page and will not be shown in the menu.

  User:
    type: object
    required:
      - firstName
      - lastName
    properties:
      firstName:
        type: string
        description: First name of the user
        example: John
      lastName:
        description: Last name of the user
        type: string
        example: Smith

  UnexpectedError:
    type: object
    description: Describes a reason why client request can not be processed by API server.
    properties:
      message:
        type: string

  RedirectItem:
    type: object
    description: A redirect from one page or URL to another
    properties:
      from:
        type: string
        description: |
          The from address must be a valid path within the site starting with /
        example: /subject/art
      to:
        type: string
        description: |
          The to address must be a valid URL or partial URL starting with /
        example: https://github.com
      error:
        type: string
        description: Describes reason why redirect item cannot be saved.
        example: |
          This URL is already being redirected

  SpecialPageItem:
    type: object
    description: A redirect from one page or URL to another
    properties:
      from:
        type: string
        description: |
          The from address must be a valid path within the site starting with /
        example: /subject/art
      specialPage:
        $ref: '#/definitions/SpecialPage'
        description: |
          The special page which shown by URL /
        example: TUTORS
      matchType:
        $ref: '#/definitions/URLMatchRule'
        description: |
          Match type rule for URL /
        example: EXACT
      error:
        type: string
        description: Describes reason why redirect item cannot be saved.
        example: |
          This URL is already being redirected
        
  Redirects:
    type: object
    properties:
      rules:
        description: A list of redirects
        type: array
        items:
          $ref: '#/definitions/RedirectItem'

  SpecialPages:
    type: object
    properties:
      rules:
        description: A list of special pages
        type: array
        items:
          $ref: '#/definitions/SpecialPageItem'
          
  SkillsOnCourseSettings:
    type: object
    properties:
      hideStudentDetails:
        description: The tutor might be able to see the email and phone details for the students
        type: boolean
      enableOutcomeMarking:
        description: The tutor can mark outcomes for VET training
        type: boolean
      tutorFeedbackEmail:
        description: Address to which replies from tutors will be sent.
        type: string
        format: email
        example: tutors@acme.edu.au
        
  Condition:
    type: string
    description: For the given offset, it is a certain number of days before or after the start or end of the class.
    enum:
      - afterClassStarts
      - beforeClassStarts
      - afterClassEnds
      - beforeClassEnds
    example: afterClassStarts
        
  ClassStateTransition:
    type: object
    properties:
      offset:
        type: integer
        description: Number of days
        example: 2
      condition:
        $ref: '#/definitions/Condition'
      
  ClassAge:
    type: object
    properties:
      hideClass:
        description: The number of days before a class is hidden. Depending on the hideClassCondition value this could be before or after the class starts or ends.
        $ref: '#/definitions/ClassStateTransition'
      stopWebEnrolment:
        description: The number of days before enrolment is prevented. Depending on the stopWebEnrolmentCondition value this could be before or after the class starts or ends.
        $ref: '#/definitions/ClassStateTransition'

  SpecialPage:
     type: string
     description: List of default pages
     enum:
      - TUTORS
        
  State:
    type: string
    description: List of Australian states 
    enum:
      - ACT
      - NSW
      - NT
      - QLD
      - SA
      - TAS
      - VIC
      - WA

  URLMatchRule:
    type: string
    description: List of URL match rules for special pages
    enum:
      - EXACT
      - STARTS WITH
  
  WebsiteSettings:
    type: object
    properties:
      enableSocialMedia:
        type: boolean
      addThisId:
        type: string
        example: agd5465274
      googleTM:
        type: string
      rootTagFilter:
        type: string
      enableForCourse:
        type: boolean
      enableForWebpage:
        type: boolean
      classAge:
        $ref: '#/definitions/ClassAge'
      suburbAutocompleteState:
        description: Show suburbs from selected state only. Show all suburbs if null.
        $ref: '#/definitions/State'
      
  CheckoutSettings:
    type: object
    properties:
      allowCreateContactOnEnrol:
        type: boolean
      allowCreateContactOnWaitingList:
        type: boolean
      allowCreateContactOnMailingList:
        type: boolean
      collectParentDetails:
        type: boolean
      contactAgeWhenNeedParent:
        type: integer
      enrolmentMinAge:
        type: integer
          
