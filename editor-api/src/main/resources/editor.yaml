swagger: '2.0'
info:
  title: Editor Api
  description: Editor App Api
  version: 1.0.0
schemes:
  - https
produces:
  - application/json
paths:
  /getUser:
    post:
      operationId: getUser
      summary: Get user by email and password
      description: Get user by email and password (Login)
      tags:
        - Auth
      consumes:
        - application/json
      parameters:
        - name: loginRequest
          in: body
          description: Params for request user authorization
          required: true
          schema:
            $ref: '#/definitions/api.LoginRequest'
      responses:
        '200':
          description: User
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /logout:
    post:
      x-filter:  
      - AuthFilter
      operationId: logout
      summary: Unauthorize user from CMS
      description: Unauthorize user from CMS
      tags:
        - Auth
      consumes:
        - application/json

      responses:
        '200':
          description: Success logout witn null response
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getMenuItems:
    get:
      x-filter:  
      - AuthFilter
      operationId: getMenuItems
      summary: Get menu items
      description: Get menu items
      tags:
        - Menu
      responses:
        '200':
          description: Menu reposonse object
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /saveMenuItems:
    post:
      x-filter:  
      - AuthFilter
      operationId: saveMenuItems
      summary: Save menu items
      description: Save menu items
      tags:
        - Menu
      consumes:
        - application/json
      parameters:
        - name: Menu
          in: body
          description: Menu items
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Menu items
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getPages:
    get:
      x-filter:  
      - AuthFilter
      operationId: getPages
      summary: Get pages
      description: Get pages
      tags:
        - Page
      responses:
        '200':
          description: response with array of pages
          schema:
            type: array
            items:
              $ref: '#/definitions/Page'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getPageByUrl:
    get:
      x-filter:  
      - AuthFilter
      summary: Get page by provided page url
      operationId: getPageByUrl
      description: Get page object by provided page url
      tags:
        - Page
      parameters:
        - name: pageUrl
          in: query
          description: Page url
          required: true
          type: string
      responses:
        '200':
          description: Page for provided url
          schema:
            $ref: '#/definitions/Page'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getPageRender/{pageNumber}:
    get:
      x-filter:  
      - AuthFilter
      summary: Get page rendered html by provided page id
      operationId: getPageRender
      description: Get page rendered html by provided page id
      tags:
        - Page
      parameters:
        - name: pageNumber
          in: path
          description: Page number
          required: true
          type: number
      responses:
        '200':
          description: generated page html
          schema:
            $ref: '#/definitions/api.PageRenderResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /savePage:
    post:
      x-filter:  
      - AuthFilter
      summary: Save page parameters
      operationId: savePage
      description: Save page parameters
      tags:
        - Page
      consumes:
        - application/json
      parameters:
        - name: pageParams
          in: body
          description: page with new params
          required: true
          schema:
            $ref: '#/definitions/Page'
      responses:
        '200':
          description: Page object with updated params
          schema:
            $ref: '#/definitions/Page'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /addPage:
    post:
      x-filter:  
      - AuthFilter
      summary: Add new page
      operationId: addPage
      description: Add new page
      tags:
        - Page
      consumes:
        - application/json
      responses:
        '200':
          description: new page with unique id and url
          schema:
            $ref: '#/definitions/Page'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /deletePage:
    post:
      x-filter:  
      - AuthFilter
      summary: Remove page by provided number
      operationId: deletePage
      description: Remove page by number
      tags:
        - Page
      consumes:
        - application/json
      parameters:
        - name: number
          in: body
          description: number of page which will be deleted
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Page successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getBlocks:
    get:
      x-filter:  
      - AuthFilter
      summary: Get array of blocks
      operationId: getBlocks
      description: Get array of blocks
      tags:
        - Block
      responses:
        '200':
          description: response with array of blocks
          schema:
            type: array
            items:
              $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /saveBlock:
    post:
      x-filter:  
      - AuthFilter
      summary: block with updated params
      operationId: saveBlock
      description: Save block params
      tags:
        - Block
      consumes:
        - application/json
      parameters:
        - name: SaveBlockRequest
          in: body
          description: Block with new params
          required: true
          schema:
            $ref: '#/definitions/Block'
      responses:
        '200':
          description: Block object with updated params
          schema:
            $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /addBlock:
    post:
      x-filter:  
      - AuthFilter
      summary: Add new block
      operationId: addBlock
      description: Add new block
      tags:
        - Block
      consumes:
        - application/json
      responses:
        '200':
          description: new block with unique id
          schema:
            $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /deleteBlock:
    post:
      x-filter:  
      - AuthFilter
      summary: Remove block by provided Id
      operationId: deleteBlock
      description: Remove block
      tags:
        - Block
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: identificator of block which will be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Block successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getThemes:
    get:
      x-filter:  
      - AuthFilter
      summary: Get array of themes
      operationId: getThemes
      description: Get array of themes
      tags:
        - Theme
      responses:
        '200':
          description: response with array of themes
          schema:
            type: array
            items:
              $ref: '#/definitions/Theme'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getLayouts:
    get:
      x-filter:  
      - AuthFilter
      summary: Get array of layouts
      operationId: getLayouts
      description: Get array of layouts
      tags:
        - Theme
      responses:
        '200':
          description: response with array of layouts
          schema:
            type: array
            items:
              $ref: '#/definitions/Layout'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /saveTheme:
    post:
      x-filter:  
      - AuthFilter
      summary: Theme with updated params
      operationId: saveTheme
      description: Save theme params
      tags:
        - Theme
      consumes:
        - application/json
      parameters:
        - name: SaveThemeRequest
          in: body
          description: Theme with new params
          required: true
          schema:
            $ref: '#/definitions/Theme'
      responses:
        '200':
          description: Theme object with updated params
          schema:
            $ref: '#/definitions/Theme'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /addTheme:
    post:
      x-filter:  
      - AuthFilter
      summary: Add new theme
      operationId: addTheme
      description: Add new theme
      tags:
        - Theme
      consumes:
        - application/json
      responses:
        '200':
          description: new theme with unique id
          schema:
            $ref: '#/definitions/Theme'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /deleteTheme:
    post:
      x-filter:  
      - AuthFilter
      summary: Remove theme by provided Id
      operationId: deleteTheme
      description: Remove theme
      tags:
        - Theme
      consumes:
        - application/json
      parameters:
        - name: themeName
          in: body
          description: identificator of theme which will be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Theme successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getVersions:
    get:
      x-filter:  
      - AuthFilter
      summary: Get array of published versions
      operationId: getVersions
      description: Get array of published versions
      tags:
        - Publish
      responses:
        '200':
          description: response with array of published versions
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /setVersion:
    post:
      x-filter:  
      - AuthFilter
      summary: Set current published version by provided version Id
      operationId: setVersion
      description: Change current published version
      tags:
        - Publish
      consumes:
        - application/json
      parameters:
        - name: SetVersionRequest
          in: body
          description: Version id
          required: true
          schema:
            $ref: '#/definitions/api.SetVersionRequest'
      responses:
        '200':
          description: Version changed successfully
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /publish:
    post:
      x-filter:  
      - AuthFilter
      summary: Publish current draft version
      operationId: publish
      description: Publish current draft changes to live site
      tags:
        - Publish
      consumes:
        - application/json
      responses:
        '200':
          description: Draft changes has been published
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getCheckoutSettings:
    get:
      x-filter:  
      - AuthFilter
      operationId: getCheckoutSettings
      summary: Get checkout settings
      description: Get checkout settings
      tags:
        - Settings
      responses:
        '200':
          description: response with checkout settings object
          schema:
            $ref: '#/definitions/settings.CheckoutSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /setCheckoutSettings:
    post:
      x-filter:  
      - AuthFilter
      summary: Save checkout settings
      operationId: setCheckoutSettings
      description: Save checkout settings
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: SaveCheckoutSettingsRequest
          in: body
          description: Checkout settings object
          required: true
          schema:
            $ref: '#/definitions/settings.CheckoutSettings'
      responses:
        '200':
          description: Updated checkout settings object
          schema:
            $ref: '#/definitions/settings.CheckoutSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getSkillsOnCourseSettings:
    get:
      x-filter:  
      - AuthFilter
      operationId: getSkillsOnCourseSettings
      summary: Get SkillsOnCourse settings
      description: Get SkillsOnCourse settings
      tags:
        - Settings
      responses:
        '200':
          description: response with SkillsOnCourse settings object
          schema:
            $ref: '#/definitions/settings.SkillsOnCourseSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /setSkillsOnCourseSettings:
    post:
      x-filter:  
      - AuthFilter
      summary: Save SkillsOnCourse settings
      operationId: setSkillsOnCourseSettings
      description: Save SkillsOnCourse settings
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: SkillsOnCourseSettingsRequest
          in: body
          description: SkillsOnCourse settings object
          required: true
          schema:
            $ref: '#/definitions/settings.SkillsOnCourseSettings'
      responses:
        '200':
          description: Updated SkillsOnCourse settings object
          schema:
            $ref: '#/definitions/settings.SkillsOnCourseSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getRedirectSettings:
    get:
      x-filter:  
      - AuthFilter
      operationId: getRedirectSettings
      summary: Get redirect settings
      description: Get redirect settings
      tags:
        - Settings
      responses:
        '200':
          description: response with redirect settings object
          schema:
            $ref: '#/definitions/settings.RedirectSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /setRedirectSettings:
    post:
      x-filter:  
      - AuthFilter
      summary: Save redirect settings
      operationId: setRedirectSettings
      description: Save redirect settings
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: RedirectSettingsRequest
          in: body
          description: redirect settings object
          required: true
          schema:
            $ref: '#/definitions/settings.RedirectSettings'
      responses:
        '200':
          description: Updated redirect settings object
          schema:
            $ref: '#/definitions/settings.RedirectSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /getWebsiteSettings:
    get:
      x-filter:  
      - AuthFilter
      operationId: getWebsiteSettings
      summary: Get Website settings
      description: Get Website settings
      tags:
        - Settings
      responses:
        '200':
          description: response with Website settings object
          schema:
            $ref: '#/definitions/settings.WebsiteSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
  /setWebsiteSettings:
    post:
      x-filter:  
      - AuthFilter
      summary: Save website settings
      operationId: setWebsiteSettings
      description: Save website settings
      tags:
        - Settings
      consumes:
        - application/json
      parameters:
        - name: WebsiteSettingsRequest
          in: body
          description: website settings object
          required: true
          schema:
            $ref: '#/definitions/settings.WebsiteSettings'
      responses:
        '200':
          description: Updated website settings object
          schema:
            $ref: '#/definitions/settings.WebsiteSettings'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/common.CommonError'
parameters:
  XOrigin:
    name: X-Origin
    in: header
    description: |
      College URL which we sends with every request,
      since we have common endpoint for all colledges.
      Example: intranet.ish.com.au
    required: true
    type: string
  Session:
    name: X-Session-Token
    in: header
    description: User's session Id
    required: true
    type: string
definitions:
  api.PageRenderResponse:
    type: object
    properties:
      html:
        type: string
  api.SetVersionRequest:
    type: object
    properties:
      id:
        type: number
  api.LoginRequest:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: User password
  PageUrl:
    type: object
    properties:
      link:
        type: string
        description: unique link
      isDefault:
        type: boolean
        description: has url default
  Block:
    type: object
    properties:
      id:
        type: number
      title:
        type: string
        description: Title/Name of block
      content:
        type: string
        description: Html source of block
  Version:
    type: object
    properties:
      id:
        type: number
        description: unique id of version
      published:
        type: boolean
        description: has version published
      author:
        type: string
        description: First and last name of the user who published version
      changes:
        type: number
        description: count of changes from previous version
      date:
        type: string
        description: date when version was published
  Layout:
    type: object
    properties:
      id:
        type: number
        description: unique id of the layout
      layoutKey:
        type: string
        description: key/name of the layout
  Page:
    type: object
    properties:
      number:
        type: number
        description: page number
      title:
        type: string
        description: title of the page
      themeId:
        type: number
        description: theme Id for the page
      content:
        type: string
        description: Html source of the page
      visible:
        type: boolean
        description: Has page visible
      urls:
        type: array
        items:
          $ref: '#/definitions/PageUrl'
  BlockItem:
    type: object
    properties:
      id:
        type: number
        description: unique id of the Block
      position:
        type: number
        description: order position of the block
  ThemeSchema:
    type: object
    properties:
      top:
        type: array
        items:
          $ref: '#/definitions/BlockItem'
      left:
        type: array
        items:
          $ref: '#/definitions/BlockItem'
      centre:
        type: array
        items:
          $ref: '#/definitions/BlockItem'
      right:
        type: array
        items:
          $ref: '#/definitions/BlockItem'
      footer:
        type: array
        items:
          $ref: '#/definitions/BlockItem'
  Theme:
    type: object
    properties:
      id:
        type: number
        description: Unique identifier of theme
      title:
        type: string
        description: title of theme
      layoutId:
        type: number
        description: Unique identifier of for theme
      schema:
        $ref: '#/definitions/ThemeSchema'
  MenuItem:
    type: object
    properties:
      id:
        type: number
        description: Unique identifier of menu item
      title:
        type: string
        description: title of menu item
      url:
        type: string
        description: url for menu link
      expanded:
        type: boolean
      children:
        type: array
        items:
          $ref: '#/definitions/MenuItem'
      errors:
        type: object
        properties:
          title:
            type: boolean
          url:
            type: boolean
  User:
    type: object
    properties:
      firstName:
        type: string
        description: First name of the user
      lastName:
        description: Last name of the user
        type: string
  common.CommonError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  common.ValidationError:
    type: object
    required:
      - formErrors
      - fieldsErrors
    properties:
      formErrors:
        type: array
        items:
          type: string
        description: Global error
      fieldsErrors:
        type: array
        items:
          title: common.FieldError
          type: object
          required:
            - name
            - error
          properties:
            name:
              type: string
              description: Name of fiels with error
            error:
              type: string
              description: 'Errors for particular field, or empty array'
        description: 'Array of fields errors, or empty array'
  settings.RedirectItem:
    type: object
    properties:
      from:
        type: string
        description: Redirect from url
      to:
        type: string
        description: Redirect to url
  settings.RedirectSettings:
    type: object
    properties:
      rules:
        type: array
        items:
          $ref: '#/definitions/settings.RedirectItem'
  settings.SkillsOnCourseSettings:
    type: object
    properties:
      hideStudentDetails:
        type: boolean
      enableOutcomeMarking:
        type: boolean
      tutorFeedbackEmail:
        type: string
  settings.ClassCondition:
    type: string
    enum:
      - afterClassStarts
      - beforeClassStarts
      - afterClassEnds
      - beforeClassEnds
  settings.ClassEnrolmentCondition:
    type: string
    enum:
      - afterClassStarts
      - beforeClassStarts
      - beforeClassEnds
  settings.ClassAge:
    type: object
    properties:
      hideClassDays:
        type: number
      hideClassCondition:
        $ref: '#/definitions/settings.ClassCondition'
      stopWebEnrolmentDays:
        type: number
      stopWebEnrolmentCondition:
        $ref: '#/definitions/settings.ClassEnrolmentCondition'
  settings.WebsiteSettings:
    type: object
    properties:
      enableSocialMedia:
        type: boolean
      addThisId:
        type: string
      enableForCourse:
        type: boolean
      enableForWebpage:
        type: boolean
      classAge:
        $ref: '#/definitions/settings.ClassAge'
  settings.CheckoutSettings:
    type: object
    properties:
      successUrl:
        type: string
      refundPolicy:
        type: string