buildscript {
	ext {
		cayenneVersion = '4.1.B2'
		ehcacheVersion = '3.4.0'
		log4j2Version = '2.12.0'
        typesVersion = '58.1'
		solrVersion = '7.1.0'
		groovyVersion = '2.5.9'
        mariadbVersion = '2.4.1'
        tapestryVersion = '5.4.3'
		bootiqueVersion = '1.0'
        webservicesVersion = '111'

    }

	repositories {
		maven {
			url 'https://repo.ish.com.au/content/groups/public'
		}
		maven {
			url 'https://repo.ish.com.au/content/groups/ish'
		}
	}
	dependencies {
        classpath "org.apache.cayenne.plugins:cayenne-gradle-plugin:$cayenneVersion"
        classpath "org.codehaus.groovy:groovy-all:$groovyVersion"
	}
}

plugins {
	id 'java'
	id 'groovy'
	id 'maven'
	id 'maven-publish'
//    id "org.padler.gradle.minify" version "1.8.0" apply false
    id "com.eriwen.gradle.js" version "2.14.1" apply false
	id 'io.spring.dependency-management' version '1.0.3.RELEASE' apply false
	id 'com.github.ben-manes.versions' version '0.20.0' // adds the task 'dependencyUpdates -Drevision=release'
	id "com.moowork.node" version "1.3.1" apply false
	id 'com.dorongold.task-tree' version '1.4' // adds the task 'taskTree [some task]'
}

taskTree{
	noRepeat = true  //do not print a sub-tree in the task-tree more than once
	impliesSubProjects = true  //do not print task-tree for child projects in a multi-project
}

ext {
    replicationVersions = [
            23      // introduced in onCourse 9.13
	]
    referenceVersions = [
            7      // introduced in onCourse 9.10
    ]
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("io.bootique.bom:bootique-bom:$bootiqueVersion")
        }
    }

    //java compile should read java files in UTF-8
    //because some tests (ish.oncourse.services.textile.TextileUtilTest.test_unicodeQuotesEncoding)
    //use UTF-8 chars
    compileJava {
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    // get the version from the command line properties
    version = project.hasProperty('releaseVersion') ? project.releaseVersion : "SNAPSHOT"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations {
        deployerJars {
            description = 'Jars needed for doing deployment to JBoss Nexus repo'
        }
    }

    configurations.all {
        exclude module: 'slf4j-log4j12'
    }

    repositories {
        maven {
            url 'https://repo.ish.com.au/content/groups/public'
        }
        maven {
            url 'https://repo.ish.com.au/content/groups/ish'
        }
    }

    dependencies {

        compile "org.apache.logging.log4j:log4j-jcl:$log4j2Version"
        compile "org.apache.logging.log4j:log4j-web:$log4j2Version"
        compile "org.apache.logging.log4j:log4j-api:$log4j2Version"
        compile "org.apache.logging.log4j:log4j-core:$log4j2Version"
        compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"
        compile "org.apache.logging.log4j:log4j-jul:$log4j2Version"

        implementation "org.codehaus.groovy:groovy-all:$groovyVersion"
        implementation "org.codehaus.groovy:groovy-dateutil:$groovyVersion"

        testCompile 'org.mockito:mockito-all:1.10.19'
        testCompile 'junit:junit:4.12'

        deployerJars 'org.apache.maven.wagon:wagon-http:2.12'
    }

    group = 'ish.oncourse.willow'
    uploadArchives {
        repositories.mavenDeployer {
            name = 'ishRepo'
            configuration = configurations.deployerJars
            repository(id: 'internal-releases', url: 'https://repo.ish.com.au/content/repositories/ish-releases') {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(id: 'internal-snapshots', url: 'https://repo.ish.com.au/content/repositories/ish-snapshots') {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
    uploadArchives.dependsOn install
    ext.sharedManifest = manifest {
        attributes 'Release-Version': version,
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion,
                'Implementation-Version': System.getProperty('build_number') ?: 'local',
                'Permissions': 'all-permissions',
                'Codebase': '*',
                'Application-Name': 'onCourse',
                'Trusted-Library': 'true'
    }

    jar {
        manifest {
            from sharedManifest
        }
    }

    test {
        systemProperties 'java.awt.headless': 'true'
        maxHeapSize = '2048m'
        ignoreFailures = true

        // log each starting test
        beforeTest { descriptor -> logger.lifecycle("Running: " + descriptor) }

        reports {
            junitXml.enabled = true
        }
    }

    group = 'ish.oncourse.willow'
    publishing {
        repositories {
            maven {
                name = "ish"
                if (version.endsWith('SNAPSHOT')) {
                    url = "https://repo.ish.com.au/content/repositories/ish-snapshots"
                    mavenContent {
                        snapshotsOnly()
                    }
                } else {
                    url = "https://repo.ish.com.au/content/repositories/ish-releases"
                    mavenContent {
                        releasesOnly()
                    }
                }
                credentials {
                    username nexusUsername
                    password nexusPassword
                }
            }
        }
    }
}
