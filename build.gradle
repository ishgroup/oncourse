buildscript {
	ext {
		cayenneVersion = '4.0.B1'
		log4j2Version = '2.8.2'
        waCommonWebservicesClientVersion = '9.3.40'
		solrVersion = '5.5.3'
		groovyVersion = '2.4.10'
	}

	repositories {
        mavenLocal()
        mavenCentral()
		maven {
			url 'https://repo.ish.com.au/content/groups/public'
		}
		maven {
			url 'https://repo.ish.com.au/content/groups/ish'
		}
	}
	dependencies {
		classpath "org.apache.cayenne:cayenne-ant:$cayenneVersion"
	}
}

plugins {
	id 'java'
	id 'groovy'
	id 'maven'
	id 'jacoco'
	id 'maven-publish'
	id "com.eriwen.gradle.js" version "2.14.1" apply false
	id "com.github.robfletcher.compass" version "2.0.6" apply false
	id 'io.spring.dependency-management' version '1.0.3.RELEASE' apply false
	id 'com.github.ben-manes.versions' version '0.15.0' // adds the task 'dependencyUpdates -Drevision=release'
}

ext {
    replicationVersions = [10,  // introduced in onCourse 7.4
						   14,  // introduced in onCourse 9.
						   15, 	// introduced in onCourse sprint14 
						   16 	// introduced in onCourse 9.4
	]
    referenceVersions = [	5,  // introduced in onCourse 7.4
                            6   // introduced in onCourse 8.2
    ]
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'groovy'
	apply plugin: 'jacoco'
	apply plugin: 'maven-publish'
	apply plugin: 'com.github.ben-manes.versions'

    //java compile should read java files in UTF-8
    //because some tests (ish.oncourse.services.textile.TextileUtilTest.test_unicodeQuotesEncoding)
    //use UTF-8 chars
    compileJava {
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

	// get the version from the command line properties
	version = project.hasProperty('releaseVersion') ? project.releaseVersion : "SNAPSHOT"

	sourceCompatibility = 1.7
	targetCompatibility = 1.7

	configurations {
		deployerJars {
			description = 'Jars needed for doing deployment to JBoss Nexus repo'
		}
	}

	configurations.all {
		exclude module: 'slf4j-log4j12'
	}

	repositories {
        mavenLocal()
        mavenCentral()
		maven {
			url 'https://repo.ish.com.au/content/groups/public'
		}
		maven {
			url 'https://repo.ish.com.au/content/groups/ish'
		}
	}

	dependencies {

		//willow-api: projects don't use any dependencies from the main project
        if (!project.parent?.name?.equals("willow-api")) {
			compile "org.apache.logging.log4j:log4j-jcl:$log4j2Version"
			compile "org.apache.logging.log4j:log4j-web:$log4j2Version"
		}

		compile "org.apache.logging.log4j:log4j-api:$log4j2Version"
		compile "org.apache.logging.log4j:log4j-core:$log4j2Version"
		compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"

		testCompile 'org.mockito:mockito-all:1.10.19'
		testCompile 'org.dbunit:dbunit:2.4.8'
		testCompile 'junit:junit:4.12'

        deployerJars 'org.apache.maven.wagon:wagon-http:2.12'
	}

	group = 'ish.oncourse.willow'
	uploadArchives {
		repositories.mavenDeployer {
			name = 'ishRepo'
			configuration = configurations.deployerJars
			repository(id:'internal-releases', url: 'https://repo.ish.com.au/content/repositories/ish-releases') {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
			snapshotRepository(id:'internal-snapshots', url: 'https://repo.ish.com.au/content/repositories/ish-snapshots') {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
		}
	}
	uploadArchives.dependsOn install

	ext.sharedManifest = manifest {
		attributes 'Release-Version': version,
			'Built-Date': new Date(),
			'Built-JDK': System.getProperty('java.version'),
			'Built-Gradle': gradle.gradleVersion,
			'Implementation-Version': System.getProperty('build_number') ?: 'local'
//			'SCM-Revision': project.release.scmVersion
	}

	jar {
		manifest {
			from sharedManifest
		}
	}

	test {
		systemProperties 'java.awt.headless': 'true'
		maxHeapSize = '1024m'
		jvmArgs "-XX:MaxPermSize=256m"
		ignoreFailures = true

		jacoco {
			enabled = project.hasProperty('jacoco-enabled')
		}

		// log each starting test
		beforeTest { descriptor -> logger.lifecycle("Running: " + descriptor) }
	}

	group = 'ish.oncourse.willow'
	publishing {
		repositories {
			maven {
				name "executables"
				url "https://repo.ish.com.au/content/repositories/ish-exe"
				credentials {
					username nexusUsername
					password nexusPassword
				}
			}
			maven {
				name "snapshots"
				url "https://repo.ish.com.au/content/repositories/ish-snapshots"
				credentials {
					username nexusUsername
					password nexusPassword
				}
			}
			maven {
				name "releases"
				url "https://repo.ish.com.au/content/repositories/ish-releases"
				credentials {
					username nexusUsername
					password nexusPassword
				}
			}
		}
	}
}

apply from: "$rootDir/buildStaticResources.gradle"

task wrapper(type: Wrapper) {
	gradleVersion = "4.1"
}